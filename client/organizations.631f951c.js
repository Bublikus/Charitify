import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, aI as ListItems, W as onMount, v as validate_slots, af as API, B as Br, f as space, g as create_component, q as query_selector_all, h as detach_dev, j as claim_space, m as claim_component, r as insert_dev, u as mount_component, x as transition_in, y as transition_out, z as destroy_component } from './client.02b1df94.js';

/* src/routes/lists/organizations.svelte generated by Svelte v3.24.0 */

function create_fragment(ctx) {
	let t0;
	let listitems0;
	let t1;
	let listitems1;
	let current;

	listitems0 = new ListItems({
			props: {
				items: /*organizations*/ ctx[0],
				basePath: "organizations"
			},
			$$inline: true
		});

	listitems1 = new ListItems({
			props: {
				items: /*organizations*/ ctx[0],
				basePath: "organizations"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			t0 = space();
			create_component(listitems0.$$.fragment);
			t1 = space();
			create_component(listitems1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-6bbqlg\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			claim_component(listitems0.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(listitems1.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - is the application for helping those in need.";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			mount_component(listitems0, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(listitems1, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const listitems0_changes = {};
			if (dirty & /*organizations*/ 1) listitems0_changes.items = /*organizations*/ ctx[0];
			listitems0.$set(listitems0_changes);
			const listitems1_changes = {};
			if (dirty & /*organizations*/ 1) listitems1_changes.items = /*organizations*/ ctx[0];
			listitems1.$set(listitems1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(listitems0.$$.fragment, local);
			transition_in(listitems1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(listitems0.$$.fragment, local);
			transition_out(listitems1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(listitems0, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(listitems1, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let organizations = [];

	onMount(async () => {
		// await new Promise(r => setTimeout(r, 1000))
		const orgs = await API.getOrganizations();

		$$invalidate(0, organizations = new Array(1).fill(orgs).reduce((a, o) => a.concat(...o), []));
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Organizations> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Organizations", $$slots, []);

	$$self.$capture_state = () => ({
		onMount,
		API,
		Br,
		ListItems,
		organizations
	});

	$$self.$inject_state = $$props => {
		if ("organizations" in $$props) $$invalidate(0, organizations = $$props.organizations);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [organizations];
}

class Organizations extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Organizations",
			options,
			id: create_fragment.name
		});
	}
}

export default Organizations;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JnYW5pemF0aW9ucy42MzFmOTUxYy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9saXN0cy9vcmdhbml6YXRpb25zLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgb25Nb3VudCB9IGZyb20gJ3N2ZWx0ZSdcbiAgICBpbXBvcnQgeyBBUEkgfSBmcm9tICdAc2VydmljZXMnXG4gICAgaW1wb3J0IHsgQnIsIExpc3RJdGVtcyB9IGZyb20gJ0Bjb21wb25lbnRzJ1xuXG4gICAgbGV0IG9yZ2FuaXphdGlvbnMgPSBbXVxuXG4gICAgb25Nb3VudChhc3luYyAoKSA9PiB7XG4gICAgICAgIC8vIGF3YWl0IG5ldyBQcm9taXNlKHIgPT4gc2V0VGltZW91dChyLCAxMDAwKSlcbiAgICAgICAgY29uc3Qgb3JncyA9IGF3YWl0IEFQSS5nZXRPcmdhbml6YXRpb25zKClcbiAgICAgICAgb3JnYW5pemF0aW9ucyA9IG5ldyBBcnJheSgxKS5maWxsKG9yZ3MpLnJlZHVjZSgoYSwgbykgPT4gYS5jb25jYXQoLi4ubyksIFtdKVxuICAgIH0pXG48L3NjcmlwdD5cblxuPHN2ZWx0ZTpoZWFkPlxuICAgIDx0aXRsZT5DaGFyaXRpZnkgLSBpcyB0aGUgYXBwbGljYXRpb24gZm9yIGhlbHBpbmcgdGhvc2UgaW4gbmVlZC48L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPExpc3RJdGVtcyBpdGVtcz17b3JnYW5pemF0aW9uc30gYmFzZVBhdGg9XCJvcmdhbml6YXRpb25zXCIvPlxuPExpc3RJdGVtcyBpdGVtcz17b3JnYW5pemF0aW9uc30gYmFzZVBhdGg9XCJvcmdhbml6YXRpb25zXCIvPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7NkJBbUJrQixHQUFhOzs7Ozs7Ozs2QkFDYixHQUFhOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpRkFEYixHQUFhOzs7aUZBQ2IsR0FBYTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQWR2QixhQUFhOztDQUVqQixPQUFPOztRQUVHLElBQUksU0FBUyxHQUFHLENBQUMsZ0JBQWdCOztrQkFDdkMsYUFBYSxPQUFPLEtBQUssQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxJQUFJLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
