import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, aI as ListItems, W as onMount, v as validate_slots, af as API, B as Br, f as space, g as create_component, q as query_selector_all, h as detach_dev, j as claim_space, m as claim_component, r as insert_dev, u as mount_component, x as transition_in, y as transition_out, z as destroy_component } from './client.02b1df94.js';

/* src/routes/lists/funds.svelte generated by Svelte v3.24.0 */

function create_fragment(ctx) {
	let t;
	let listitems;
	let current;

	listitems = new ListItems({
			props: {
				items: /*chariries*/ ctx[0],
				basePath: "funds"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			t = space();
			create_component(listitems.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-6bbqlg\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			claim_component(listitems.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - is the application for helping those in need.";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			mount_component(listitems, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const listitems_changes = {};
			if (dirty & /*chariries*/ 1) listitems_changes.items = /*chariries*/ ctx[0];
			listitems.$set(listitems_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(listitems.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(listitems.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			destroy_component(listitems, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let chariries = [];

	onMount(async () => {
		// await new Promise(r => setTimeout(r, 1000))
		const chars = await API.getFunds();

		$$invalidate(0, chariries = new Array(15).fill(chars).reduce((a, o) => a.concat(...o), []));
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Funds> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Funds", $$slots, []);
	$$self.$capture_state = () => ({ onMount, API, Br, ListItems, chariries });

	$$self.$inject_state = $$props => {
		if ("chariries" in $$props) $$invalidate(0, chariries = $$props.chariries);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [chariries];
}

class Funds extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Funds",
			options,
			id: create_fragment.name
		});
	}
}

export default Funds;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuZHMuNmVkYzQ3M2YuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvbGlzdHMvZnVuZHMuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgb25Nb3VudCB9IGZyb20gJ3N2ZWx0ZSdcbiAgICBpbXBvcnQgeyBBUEkgfSBmcm9tICdAc2VydmljZXMnXG4gICAgaW1wb3J0IHsgQnIsIExpc3RJdGVtcyB9IGZyb20gJ0Bjb21wb25lbnRzJ1xuXG4gICAgbGV0IGNoYXJpcmllcyA9IFtdXG5cbiAgICBvbk1vdW50KGFzeW5jICgpID0+IHtcbiAgICAgICAgLy8gYXdhaXQgbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDEwMDApKVxuICAgICAgICBjb25zdCBjaGFycyA9IGF3YWl0IEFQSS5nZXRGdW5kcygpXG4gICAgICAgIGNoYXJpcmllcyA9IG5ldyBBcnJheSgxNSkuZmlsbChjaGFycykucmVkdWNlKChhLCBvKSA9PiBhLmNvbmNhdCguLi5vKSwgW10pXG4gICAgfSlcbjwvc2NyaXB0PlxuXG48c3ZlbHRlOmhlYWQ+XG4gICAgPHRpdGxlPkNoYXJpdGlmeSAtIGlzIHRoZSBhcHBsaWNhdGlvbiBmb3IgaGVscGluZyB0aG9zZSBpbiBuZWVkLjwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48TGlzdEl0ZW1zIGl0ZW1zPXtjaGFyaXJpZXN9IGJhc2VQYXRoPVwiZnVuZHNcIi8+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7eUJBa0JrQixHQUFTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3RUFBVCxHQUFTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FibkIsU0FBUzs7Q0FFYixPQUFPOztRQUVHLEtBQUssU0FBUyxHQUFHLENBQUMsUUFBUTs7a0JBQ2hDLFNBQVMsT0FBTyxLQUFLLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
