.top-pic.svelte-b9nco9{flex:none;z-index:0;width:100%;height:200px;display:flex;overflow:hidden;border-radius:0}
.top.svelte-uz5elz{display:flex;margin-bottom:calc(var(--screen-padding) * 1.5);margin-top:var(--screen-padding)}.pics-wrap.svelte-uz5elz{z-index:0;flex-grow:1;display:flex;overflow:hidden;margin-bottom:2px;border-radius:var(--border-radius);box-shadow:var(--shadow-primary)}.rate-section.svelte-uz5elz{display:flex;align-items:flex-end;justify-content:space-between;padding:12px 0}
.top.svelte-uz5elz{display:flex;margin-bottom:calc(var(--screen-padding) * 1.5);margin-top:var(--screen-padding)}.pics-wrap.svelte-uz5elz{z-index:0;flex-grow:1;display:flex;overflow:hidden;margin-bottom:2px;border-radius:var(--border-radius);box-shadow:var(--shadow-primary)}.rate-section.svelte-uz5elz{display:flex;align-items:flex-end;justify-content:space-between;padding:12px 0}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
.search.svelte-15uoncq{position:sticky;top:47px;box-shadow:var(--shadow-primary)}.list-wrap.svelte-15uoncq{flex:1 1 auto;padding:0 var(--screen-padding)
	}
nav.svelte-iotsi1.svelte-iotsi1{position:sticky;top:0;z-index:10;display:flex;justify-content:space-between;box-shadow:var(--shadow-secondary);border-bottom:1px solid rgba(var(--color-danger), .1)}.selected.svelte-iotsi1.svelte-iotsi1{position:relative;display:inline-block}.selected.svelte-iotsi1.svelte-iotsi1::after{position:absolute;content:"";width:calc(100% - 1em);height:2px;background-color:rgb(var(--color-danger));display:block;bottom:-1px}a.svelte-iotsi1.svelte-iotsi1{padding:.8em 0.5em}.nav-actions.svelte-iotsi1.svelte-iotsi1{display:flex;align-items:center;margin:-3px}.nav-actions.svelte-iotsi1 li.svelte-iotsi1{padding:3px}.lang-select.svelte-iotsi1.svelte-iotsi1{padding:5px;background-color:transparent}.lang-select.svelte-iotsi1.svelte-iotsi1:hover,.lang-select.svelte-iotsi1.svelte-iotsi1:focus{box-shadow:none;background-color:rgba(var(--color-black), 0.1)}
footer.svelte-hgsupk{padding:calc(var(--screen-padding) * 2) var(--screen-padding);box-shadow:inset var(--shadow-primary);background-color:rgba(var(--theme-bg-color))}
section.svelte-1u7rlgt.svelte-1u7rlgt{width:100%;flex-grow:1;display:flex;align-self:stretch;align-items:flex-start}div.svelte-1u7rlgt.svelte-1u7rlgt{display:flex;flex-direction:column;overflow:hidden}span.svelte-1u7rlgt.svelte-1u7rlgt{flex:none;overflow:hidden;padding:0 8px}span.svelte-1u7rlgt h4.svelte-1u7rlgt,span.svelte-1u7rlgt sub.svelte-1u7rlgt{display:inline-block;line-height:1;max-width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}pre.svelte-1u7rlgt.svelte-1u7rlgt{padding:0 8px;font-size:.825em;line-height:1.2}
.item.svelte-1b2ug4l{flex:1 1 auto;box-shadow:var(--shadow-primary);border-radius:var(--border-radius);background-color:rgba(var(--theme-bg-color))}
.search.svelte-ovr79r{}
.card.svelte-do16pj{display:flex;flex-direction:column;flex:none;width:100%;max-width:100%}.rate-wrap.svelte-do16pj{text-align:center;padding-top:6px}.images-wrap.svelte-do16pj{display:flex;height:100px}h4.svelte-do16pj{--card-line-height:1.4;font-size:.8em;line-height:var(--card-line-height);height:calc(var(--font-size) * (var(--card-line-height) / 1.2) * 2);overflow:hidden}
section.svelte-1hdqh35.svelte-1hdqh35{flex-grow:1;align-self:stretch;max-width:100%;padding:0 10px}.cards.svelte-1hdqh35.svelte-1hdqh35{display:flex;flex-wrap:wrap;align-items:flex-start;justify-content:center;padding:var(--screen-padding) 0;margin:calc(var(--screen-padding) * -3) calc(var(--screen-padding) * -1)}.cards.svelte-1hdqh35 li.svelte-1hdqh35{display:flex;justify-content:stretch;width:50%;overflow:hidden;padding:calc(var(--screen-padding) * 3) var(--screen-padding)}.cards.svelte-1hdqh35 li.svelte-1hdqh35:hover{background-color:rgba(0, 0, 0, .1)
    }
section.svelte-y1uq32{text-align:center;padding:0 3vw}h2.svelte-y1uq32{font-weight:400}
ul.svelte-1k5eog2.svelte-1k5eog2{flex:0;display:flex;flex-direction:column;margin:calc(var(--screen-padding) * -1 / 2) 0;padding:0 0 0 var(--screen-padding)}ul.svelte-1k5eog2 li.svelte-1k5eog2{flex:none;margin:calc(var(--screen-padding) / 2) 0}
section.svelte-s6mhlj.svelte-s6mhlj{width:100%;flex-grow:1;display:flex;align-self:stretch;align-items:center;overflow:hidden}span.svelte-s6mhlj.svelte-s6mhlj{overflow:hidden;padding:0 8px}span.svelte-s6mhlj h4.svelte-s6mhlj,span.svelte-s6mhlj sub.svelte-s6mhlj{line-height:1.4;max-width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}
ul.svelte-14memlh{list-style:disc outside none;padding:0 calc(var(--screen-padding) * 5)}li.svelte-14memlh{display:list-item}ul.svelte-14memlh,li.svelte-14memlh,h3.svelte-14memlh,p.svelte-14memlh{max-width:100%;vertical-align:middle}h3.svelte-14memlh,p.svelte-14memlh{overflow:hidden;display:inline-block;word-break:break-word;text-overflow:ellipsis}
.rate.svelte-9gtglw.svelte-9gtglw{display:inline-flex;margin:calc(var(--screen-padding) * -1 / 3)}li.svelte-9gtglw.svelte-9gtglw{padding:calc(var(--screen-padding) / 3)}.rate.svelte-9gtglw li.svelte-9gtglw{-webkit-filter:drop-shadow(-1px 2px 1px rgba(var(--color-black), .25));filter:drop-shadow(-1px 2px 1px rgba(var(--color-black), .25))}
svg.svelte-1y5h9x9.svelte-1y5h9x9{display:inherit}svg.svelte-1y5h9x9.svelte-1y5h9x9,svg.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgba(var(--theme-svg-fill));stroke:rgba(var(--theme-svg-fill))}.small.svelte-1y5h9x9.svelte-1y5h9x9{width:15px;height:15px}.medium.svelte-1y5h9x9.svelte-1y5h9x9{width:22px;height:22px}.big.svelte-1y5h9x9.svelte-1y5h9x9{width:35px;height:35px}.primary.svelte-1y5h9x9.svelte-1y5h9x9,.primary.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-success));stroke:rgb(var(--color-success))}.warning.svelte-1y5h9x9.svelte-1y5h9x9,.warning.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-warning));stroke:rgb(var(--color-warning))}.danger.svelte-1y5h9x9.svelte-1y5h9x9,.danger.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-danger));stroke:rgb(var(--color-danger))}.info.svelte-1y5h9x9.svelte-1y5h9x9,.info.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-info));stroke:rgb(var(--color-info))}.light.svelte-1y5h9x9.svelte-1y5h9x9,.light.svelte-1y5h9x9 .svelte-1y5h9x9{fill:var(--color-light-1);stroke:var(--color-light-1)}.dark.svelte-1y5h9x9.svelte-1y5h9x9,.dark.svelte-1y5h9x9 .svelte-1y5h9x9{fill:var(--color-dark-1);stroke:var(--color-dark-1)}
.inp.svelte-1vg8tdg{width:100%;flex:1 1 0;color:inherit;border-radius:var(--border-radius);min-width:var(--min-interactive-size);min-height:var(--min-interactive-size);border:1px solid rgba(var(--color-black), .25);background-color:rgba(var(--theme-bg-color));box-shadow:inset var(--shadow-primary), var(--shadow-secondary-inset)}.inp.svelte-1vg8tdg:focus{border-color:rgb(var(--color-success))}.inp.svelte-1vg8tdg:invalid,.inp.invalid.svelte-1vg8tdg{border-color:rgb(var(--color-danger))}
.ava.svelte-ow3g6r{flex:none;display:flex;border-radius:50%;overflow:hidden;box-shadow:var(--shadow-primary)}.small.svelte-ow3g6r{width:25px;height:25px}.medium.svelte-ow3g6r{width:35px;height:35px}.big.svelte-ow3g6r{width:45px;height:45px}
.btn.svelte-jhaexl:not(.auto){width:100%}.btn{flex:none;cursor:pointer;max-width:100%;user-select:none;padding:5px 15px;margin-bottom:3px;font-weight:bold;text-align:center;align-items:center;display:inline-flex;justify-content:center;border-radius:var(--border-radius);color:rgba(var(--theme-font-color));text-shadow:1px 1px rgba(var(--color-black), .3)}.btn.small{padding:5px;min-width:calc(var(--min-interactive-size) / 1.5);min-height:calc(var(--min-interactive-size) / 1.5)}.btn.medium{padding:5px 10px;min-width:var(--min-interactive-size);min-height:var(--min-interactive-size)}.btn.big{padding:5px 15px;min-width:calc(var(--min-interactive-size) * 1.5);min-height:calc(var(--min-interactive-size) * 1.5)}.btn:focus{background-color:rgba(var(--color-black), 0.1)}.btn:hover{box-shadow:0 2px rgba(var(--color-black), 0.2);background-color:rgba(var(--color-black), 0.1)}.btn:active{transform:translateY(1px);box-shadow:0 1px rgba(var(--color-black), 0.2);background-color:rgba(var(--color-black), 0.1)}.btn.success.svelte-jhaexl{color:rgba(var(--color-font-light));background-color:rgba(var(--color-success));box-shadow:0 2px rgba(var(--color-success-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.success.svelte-jhaexl:focus{background-color:rgba(var(--color-success), .85)}.btn.success.svelte-jhaexl:hover{transform:translateY(1px);box-shadow:0 2px rgba(var(--color-success-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.success.svelte-jhaexl:active{transform:translateY(2px);box-shadow:0 1px rgba(var(--color-success-dark)), var(--shadow-secondary)}.btn.warning.svelte-jhaexl{color:rgba(var(--color-font-light));background-color:rgba(var(--color-warning));box-shadow:0 2px rgba(var(--color-warning-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.warning.svelte-jhaexl:focus{background-color:rgba(var(--color-warning), .85)}.btn.warning.svelte-jhaexl:hover{transform:translateY(1px);box-shadow:0 2px rgba(var(--color-warning-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.warning.svelte-jhaexl:active{transform:translateY(2px);box-shadow:0 1px rgba(var(--color-warning-dark)), var(--shadow-secondary)}.btn.danger.svelte-jhaexl{color:rgba(var(--color-font-light));background-color:rgba(var(--color-danger));box-shadow:0 2px rgba(var(--color-danger-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.danger.svelte-jhaexl:focus{background-color:rgba(var(--color-danger), .85)}.btn.danger.svelte-jhaexl:hover{transform:translateY(1px);box-shadow:0 2px rgba(var(--color-danger-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.danger.svelte-jhaexl:active{transform:translateY(2px);box-shadow:0 1px rgba(var(--color-danger-dark)), var(--shadow-secondary)}@media screen and (min-width: 769px){.btn{margin-bottom:2px}.btn.success.svelte-jhaexl{box-shadow:0 3px rgba(var(--color-success-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.warning.svelte-jhaexl{box-shadow:0 3px rgba(var(--color-warning-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.danger.svelte-jhaexl{box-shadow:0 3px rgba(var(--color-danger-dark)), var(--shadow-secondary), var(--shadow-primary)}}
.picture.svelte-1rkw8xk.svelte-1rkw8xk{flex-grow:1;align-self:stretch;display:inline-flex;flex-direction:column;align-items:stretch;justify-content:stretch}.picture.svelte-1rkw8xk .pic.svelte-1rkw8xk{flex-grow:1;align-self:stretch;object-fit:cover;object-position:center;transition:opacity .3s ease-in}.picture.loading.svelte-1rkw8xk .pic.svelte-1rkw8xk{opacity:0}
.divider.svelte-10708ut{margin:0;border:none;box-sizing:content-box;background-clip:content-box}.info.svelte-10708ut{background-color:rgb(var(--color-info))}.success.svelte-10708ut{background-color:rgb(var(--color-success))}.warning.svelte-10708ut{background-color:rgb(var(--color-warning))}.danger.svelte-10708ut{background-color:rgb(var(--color-danger))}
ul.svelte-113nkvq{width:100%;display:flex;align-self:stretch;align-items:stretch;justify-content:stretch;overflow-y:hidden;overflow-x:auto;margin-bottom:2px;box-shadow:var(--shadow-primary);border-radius:var(--border-radius);-webkit-overflow-scrolling:touch;scroll-snap-type:x mandatory}li.svelte-113nkvq{width:100%;flex:none;display:flex;align-items:stretch;justify-content:stretch;scroll-snap-align:center}
.progress.svelte-we6n45{--progress-height:20px;--progress-padding-point:3}.progress.small.svelte-we6n45{--progress-height:15px;--progress-padding-point:3}.progress.medium.svelte-we6n45{--progress-height:20px;--progress-padding-point:3.5}.progress.big.svelte-we6n45{--progress-height:30px;--progress-padding-point:4}.progress.svelte-we6n45{flex:0;width:100%;border-radius:9999px;height:var(--progress-height);background-color:rgba(var(--theme-bg-color));padding:calc(var(--progress-height) / var(--progress-padding-point));box-shadow:inset var(--shadow-primary), var(--shadow-secondary-inset)}.progress-inner-frame.svelte-we6n45{display:flex;width:100%;height:100%;overflow:hidden;border-radius:9999px}.progress-core.svelte-we6n45{flex:none;align-self:stretch;transition:1s ease-in-out;margin-bottom:2px;box-shadow:var(--shadow-primary);border-radius:var(--border-radius);background-color:rgba(var(--color-success))}
section.svelte-i65r7p{flex-grow:1;align-self:stretch}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4zODQ0OTE4OTcyLmNzcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vaW5kZXguc3ZlbHRlIiwiLi4vLi4vLi4vb3JnYW5pemF0aW9uLnN2ZWx0ZSIsIi4uLy4uLy4uL2NoYXJpdHkuc3ZlbHRlIiwiLi4vLi4vLi4vaW5kZXguc3ZlbHRlIiwiLi4vLi4vLi4vW3NsdWddLnN2ZWx0ZSIsIi4uLy4uLy4uL2luZGV4LnN2ZWx0ZSIsIi4uLy4uLy4uL0hlYWRlci5zdmVsdGUiLCIuLi8uLi8uLi9Gb290ZXIuc3ZlbHRlIiwiLi4vLi4vLi4vQ29tbWVudC5zdmVsdGUiLCIuLi8uLi8uLi9MaXN0SXRlbXMuc3ZlbHRlIiwiLi4vLi4vLi4vU2VhcmNoTGluZS5zdmVsdGUiLCIuLi8uLi8uLi9DaGFyaXR5Q2FyZC5zdmVsdGUiLCIuLi8uLi8uLi9DaGFyaXR5Q2FyZHMuc3ZlbHRlIiwiLi4vLi4vLi4vVGl0bGVTdWJUaXRsZS5zdmVsdGUiLCIuLi8uLi8uLi9Eb25hdGluZ0dyb3VwLnN2ZWx0ZSIsIi4uLy4uLy4uL0F2YXRhckFuZE5hbWUuc3ZlbHRlIiwiLi4vLi4vLi4vTGlzdE9mRmVhdHVyZXMuc3ZlbHRlIiwiLi4vLi4vLi4vUmF0ZS5zdmVsdGUiLCIuLi8uLi8uLi9JY29uLnN2ZWx0ZSIsIi4uLy4uLy4uL0lucHV0LnN2ZWx0ZSIsIi4uLy4uLy4uL0F2YXRhci5zdmVsdGUiLCIuLi8uLi8uLi9CdXR0b24uc3ZlbHRlIiwiLi4vLi4vLi4vUGljdHVyZS5zdmVsdGUiLCIuLi8uLi8uLi9EaXZpZGVyLnN2ZWx0ZSIsIi4uLy4uLy4uL0Nhcm91c2VsLnN2ZWx0ZSIsIi4uLy4uLy4uL1Byb2dyZXNzLnN2ZWx0ZSIsIi4uLy4uLy4uL01hcC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbiAgICBpbXBvcnQge1xuICAgICAgICBGb290ZXIsXG4gICAgICAgIENvbW1lbnQsXG4gICAgICAgIENoYXJpdHlDYXJkcyxcbiAgICAgICAgQ29udGVudEhvbGRlcixcbiAgICAgICAgVGl0bGVTdWJUaXRsZSxcbiAgICAgICAgTGlzdE9mRmVhdHVyZXMsXG4gICAgfSBmcm9tICcuLi9sYXlvdXRzJ1xuICAgIGltcG9ydCB7XG4gICAgICAgIERpdmlkZXIsXG4gICAgICAgIFByb2dyZXNzLFxuICAgICAgICBDYXJvdXNlbCxcbiAgICB9IGZyb20gJy4uL2NvbXBvbmVudHMnXG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAgIC50b3AtcGljIHtcbiAgICAgICAgZmxleDogbm9uZTtcbiAgICAgICAgei1pbmRleDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMjAwcHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgfVxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuICAgIDx0aXRsZT5DaGFyaXRpZnkgLSBsaXN0IG9mIGNoYXJpdGllcyB5b3UgY2FuIGRvbmF0ZS48L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGRpdiBjbGFzcz1cInRvcC1waWNcIj5cbiAgICA8Q2Fyb3VzZWwvPlxuPC9kaXY+XG5cbjxQcm9ncmVzcyBib3JkZXJSYWRpdXM9XCIwIDAgOHB4IDhweFwiIHZhbHVlPVwiMzBcIi8+XG5cbjxwPlRoZXNlIGd1eXMgcmlzZSBhIHBvdW5kIG9mIHZlZ2V0YWJsZXMuIFRoZXkgbGlrZSB2ZWdldGFibGVzIGFuZCBsb25nIHRleHQgdW5kZXIgcGhvdG9zLjwvcD5cblxuPGJyPlxuPGJyPlxuPGJyPlxuPGJyPlxuPGJyPlxuPHNlY3Rpb24gY2xhc3M9XCJjb250YWluZXJcIj5cblxuICAgIDxUaXRsZVN1YlRpdGxlXG4gICAgICAgICAgICB0aXRsZT1cIkNoYXJpdGlmeVwiXG4gICAgICAgICAgICBzdWJ0aXRsZT1cIkNoYXJpdHkgYXBwbGljYXRpb24gZm9yIGhlbHBpbmcgdGhvc2UgaW4gbmVlZFwiXG4gICAgLz5cblxuICAgIDxicj5cbiAgICA8YnI+XG4gICAgPGJyPlxuICAgIDxicj5cbiAgICA8YnI+XG5cbiAgICA8Q2Fyb3VzZWwgYW1vdW50PVwiMlwiPlxuICAgICAgICA8Q2hhcml0eUNhcmRzIGFtb3VudD1cIjJcIiBsaXN0TmFtZT1cIk5lYXJlc3QgdG8geW91OlwiLz5cbiAgICA8L0Nhcm91c2VsPlxuXG4gICAgPGJyPlxuICAgIDxicj5cbiAgICA8YnI+XG4gICAgPGJyPlxuICAgIDxicj5cblxuICAgIDxDb250ZW50SG9sZGVyLz5cblxuICAgIDxicj5cbiAgICA8YnI+XG4gICAgPGJyPlxuICAgIDxicj5cbiAgICA8YnI+XG5cbiAgICA8RGl2aWRlciBzaXplPVwiMTZcIi8+XG4gICAgPGgzIGNsYXNzPVwiaDIgdGV4dC1yaWdodFwiPkNvbW1lbnRzOjwvaDM+XG4gICAgPERpdmlkZXIgc2l6ZT1cIjIwXCIvPlxuXG4gICAgPENhcm91c2VsIGFtb3VudD1cIjRcIj5cbiAgICAgICAgPHVsIHN0eWxlPVwiZGlzcGxheTogZmxleDsgZmxleC13cmFwOiB3cmFwOyBvdmVyZmxvdzogaGlkZGVuXCI+XG4gICAgICAgICAgICA8bGkgc3R5bGU9XCJ3aWR0aDogNTAlXCI+XG4gICAgICAgICAgICAgICAgPENvbW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcGxhY2VpbWcuY29tLzMwMC8zMDAvcGVvcGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiVGluYSBLYW5kZWxha2lcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc3VidGl0bGU9XCJPUkcgY2hhcml0eSBjaGFyaXRpZnlcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPHByZT5cbiAgICAgICAgICAgICAgICAgICAgICAgIEkgcmVhbGx5IGhhdGUgdGhpcyB0aGluZ3MuXG4gICAgICAgICAgICAgICAgICAgICAgICBJdCBsb29rcyBhd2Z1bC4gV2lsbCBuZXZlciBldmVyIGVudGVyIGhlcmUuXG4gICAgICAgICAgICAgICAgICAgIDwvcHJlPlxuICAgICAgICAgICAgICAgIDwvQ29tbWVudD5cbiAgICAgICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpIHN0eWxlPVwid2lkdGg6IDUwJVwiPlxuICAgICAgICAgICAgICAgIDxDb21tZW50XG4gICAgICAgICAgICAgICAgICAgICAgICBzcmM9XCJodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL3Blb3BsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIlRpbmFyYW1pc2ltdXNzIGVsLWRlLWxhIEthbmRlbGFraW51c2thc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJ0aXRsZT1cIk9SRyBjaGFyaXR5IGNoYXJpdGlmeVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8cHJlPlxuICAgICAgICAgICAgICAgICAgICAgICAgIPCfkY1cbiAgICAgICAgICAgICAgICAgICAgPC9wcmU+XG4gICAgICAgICAgICAgICAgPC9Db21tZW50PlxuICAgICAgICAgICAgICAgIDxicj5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgc3R5bGU9XCJ3aWR0aDogNTAlXCI+XG4gICAgICAgICAgICAgICAgPENvbW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcGxhY2VpbWcuY29tLzMwMC8zMDAvcGVvcGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiVGluYSBLYW5kZWxha2lcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc3VidGl0bGU9XCJPUkcgY2hhcml0eSBjaGFyaXRpZnlcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPHByZT5cbiAgICAgICAgICAgICAgICAgICAgICAgIExpa2VcbiAgICAgICAgICAgICAgICAgICAgPC9wcmU+XG4gICAgICAgICAgICAgICAgPC9Db21tZW50PlxuICAgICAgICAgICAgICAgIDxicj5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgc3R5bGU9XCJ3aWR0aDogNTAlXCI+XG4gICAgICAgICAgICAgICAgPENvbW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcGxhY2VpbWcuY29tLzMwMC8zMDAvcGVvcGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiVGluYSBLYW5kZWxha2lcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc3VidGl0bGU9XCJIZWFkIG9mIHRoZSBvcmdhbml6YXRpb24gd2l0aCBsb29vb29vb29uZy1uYWFhYWFhbWVkIGNoYXJpdHlcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgIDxwcmU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgRG9uJ3QgbGlzdGVuIGhpbSwgaGkncyB3cm9uZy4gSSB0aGluayB0aGlzIGlzIGEgZ29vZCBpZGVhIGFuZCB3ZSBzaG91bGQgY29udGludWUuXG4gICAgICAgICAgICAgICAgICAgICAgICAgQW55d2F5LCBJIHdpc2ggeW91IGx1Y2suXG4gICAgICAgICAgICAgICAgICAgIDwvcHJlPlxuICAgICAgICAgICAgICAgIDwvQ29tbWVudD5cbiAgICAgICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgIDwvQ2Fyb3VzZWw+XG5cbiAgICA8YnI+XG4gICAgPGJyPlxuICAgIDxicj5cbiAgICA8YnI+XG4gICAgPGJyPlxuXG4gICAgPENvbnRlbnRIb2xkZXIvPlxuXG4gICAgPGJyPlxuICAgIDxicj5cbiAgICA8YnI+XG4gICAgPGJyPlxuICAgIDxicj5cblxuICAgIDxMaXN0T2ZGZWF0dXJlcy8+XG48L3NlY3Rpb24+XG5cbjxicj5cbjxicj5cbjxicj5cbjxicj5cbjxicj5cblxuPEZvb3Rlci8+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IG9uTW91bnQgfSBmcm9tICdzdmVsdGUnXG4gICAgaW1wb3J0IHsgYXBpIH0gZnJvbSAnLi4vc2VydmljZXMnXG4gICAgaW1wb3J0IHsgVGl0bGVTdWJUaXRsZSwgQXZhdGFyQW5kTmFtZSwgRG9uYXRpbmdHcm91cCwgQ2hhcml0eUNhcmRzLCBGb290ZXIgfSBmcm9tICcuLi9sYXlvdXRzJ1xuICAgIGltcG9ydCB7IFJhdGUsIFByb2dyZXNzLCBDYXJvdXNlbCB9IGZyb20gJy4uL2NvbXBvbmVudHMnXG5cbiAgICBsZXQgY2hhcml0eSA9IHt9XG5cbiAgICAkOiBjYXJvdXNlbCA9IChjaGFyaXR5LnNyYyB8fCBbXSkubWFwKHNyYyA9PiAoeyBzcmMgfSkpXG5cbiAgICBvbk1vdW50KGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDIwMDApKVxuICAgICAgICBjaGFyaXR5ID0gYXdhaXQgYXBpLmdldENoYXJpdHkoMSlcbiAgICB9KVxuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6aGVhZD5cbiAgICA8dGl0bGU+Q2hhcml0aWZ5IC0gQ2hhcml0eSBwYWdlIGFuZCBkb25hdGUuPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxzdHlsZT5cbiAgICAudG9wIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogY2FsYyh2YXIoLS1zY3JlZW4tcGFkZGluZykgKiAxLjUpO1xuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1zY3JlZW4tcGFkZGluZyk7XG4gICAgfVxuXG4gICAgLnBpY3Mtd3JhcCB7XG4gICAgICAgIHotaW5kZXg6IDA7XG4gICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzKTtcbiAgICAgICAgYm94LXNoYWRvdzogdmFyKC0tc2hhZG93LXByaW1hcnkpO1xuICAgIH1cblxuICAgIC5yYXRlLXNlY3Rpb24ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgcGFkZGluZzogMTJweCAwO1xuICAgIH1cbjwvc3R5bGU+XG5cbjxzZWN0aW9uIGNsYXNzPVwiY29udGFpbmVyXCI+XG5cbiAgICA8c2VjdGlvbj5cbiAgICAgICAgPGJyPlxuICAgICAgICA8VGl0bGVTdWJUaXRsZVxuICAgICAgICAgICAgdGl0bGU9e2NoYXJpdHkudGl0bGV9XG4gICAgICAgICAgICBzdWJ0aXRsZT17Y2hhcml0eS5kZXNjcmlwdGlvbn1cbiAgICAgICAgLz5cbiAgICAgICAgPGJyPlxuICAgIDwvc2VjdGlvbj5cblxuICAgIDxzZWN0aW9uIGNsYXNzPVwidG9wXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJwaWNzLXdyYXBcIj5cbiAgICAgICAgICAgIDxDYXJvdXNlbCBpdGVtcz17Y2Fyb3VzZWx9Lz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPERvbmF0aW5nR3JvdXAvPlxuICAgIDwvc2VjdGlvbj5cblxuICAgIDxQcm9ncmVzcyB2YWx1ZT1cIjY1XCIgc2l6ZT1cImJpZ1wiLz5cblxuICAgIDxzZWN0aW9uIGNsYXNzPVwicmF0ZS1zZWN0aW9uXCI+XG4gICAgICAgIDxBdmF0YXJBbmROYW1lXG4gICAgICAgICAgICAgICAgc3JjPXtjaGFyaXR5Lm9yZ0hlYWRTcmN9XG4gICAgICAgICAgICAgICAgdGl0bGU9e2NoYXJpdHkub3JnSGVhZH1cbiAgICAgICAgICAgICAgICBzdWJ0aXRsZT17Y2hhcml0eS5vcmdhbml6YXRpb259XG4gICAgICAgIC8+XG5cbiAgICAgICAgPFJhdGUvPlxuICAgIDwvc2VjdGlvbj5cbjwvc2VjdGlvbj5cblxuPGJyPlxuPGJyPlxuPGJyPlxuXG48ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gICAgPENoYXJpdHlDYXJkcy8+XG48L2Rpdj5cblxuPGJyPlxuPGJyPlxuPGJyPlxuPGJyPlxuPGJyPlxuXG48ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gICAgPENoYXJpdHlDYXJkcy8+XG48L2Rpdj5cblxuPGJyPlxuPGJyPlxuPGJyPlxuPGJyPlxuPGJyPlxuXG48Rm9vdGVyLz5cblxuIiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJ1xuICAgIGltcG9ydCB7IGFwaSB9IGZyb20gJy4uL3NlcnZpY2VzJ1xuICAgIGltcG9ydCB7IFRpdGxlU3ViVGl0bGUsIEF2YXRhckFuZE5hbWUsIERvbmF0aW5nR3JvdXAsIENoYXJpdHlDYXJkcywgRm9vdGVyIH0gZnJvbSAnLi4vbGF5b3V0cydcbiAgICBpbXBvcnQgeyBSYXRlLCBQcm9ncmVzcywgQ2Fyb3VzZWwgfSBmcm9tICcuLi9jb21wb25lbnRzJ1xuXG4gICAgbGV0IGNoYXJpdHkgPSB7fVxuXG4gICAgJDogY2Fyb3VzZWwgPSAoY2hhcml0eS5zcmMgfHwgW10pLm1hcChzcmMgPT4gKHsgc3JjIH0pKVxuXG4gICAgb25Nb3VudChhc3luYyAoKSA9PiB7XG4gICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHIgPT4gc2V0VGltZW91dChyLCAyMDAwKSlcbiAgICAgICAgY2hhcml0eSA9IGF3YWl0IGFwaS5nZXRDaGFyaXR5KDEpXG4gICAgfSlcbjwvc2NyaXB0PlxuXG48c3ZlbHRlOmhlYWQ+XG4gICAgPHRpdGxlPkNoYXJpdGlmeSAtIENoYXJpdHkgcGFnZSBhbmQgZG9uYXRlLjwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48c3R5bGU+XG4gICAgLnRvcCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IGNhbGModmFyKC0tc2NyZWVuLXBhZGRpbmcpICogMS41KTtcbiAgICAgICAgbWFyZ2luLXRvcDogdmFyKC0tc2NyZWVuLXBhZGRpbmcpO1xuICAgIH1cblxuICAgIC5waWNzLXdyYXAge1xuICAgICAgICB6LWluZGV4OiAwO1xuICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7XG4gICAgICAgIGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1wcmltYXJ5KTtcbiAgICB9XG5cbiAgICAucmF0ZS1zZWN0aW9uIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIHBhZGRpbmc6IDEycHggMDtcbiAgICB9XG48L3N0eWxlPlxuXG48c2VjdGlvbiBjbGFzcz1cImNvbnRhaW5lclwiPlxuXG4gICAgPHNlY3Rpb24gY2xhc3M9XCJ0b3BcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInBpY3Mtd3JhcFwiPlxuICAgICAgICAgICAgPENhcm91c2VsIGl0ZW1zPXtjYXJvdXNlbH0vPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8RG9uYXRpbmdHcm91cC8+XG4gICAgPC9zZWN0aW9uPlxuXG4gICAgPFByb2dyZXNzIHZhbHVlPVwiNjVcIiBzaXplPVwiYmlnXCIvPlxuXG4gICAgPHNlY3Rpb24gY2xhc3M9XCJyYXRlLXNlY3Rpb25cIj5cbiAgICAgICAgPEF2YXRhckFuZE5hbWVcbiAgICAgICAgICAgICAgICBzcmM9e2NoYXJpdHkub3JnSGVhZFNyY31cbiAgICAgICAgICAgICAgICB0aXRsZT17Y2hhcml0eS5vcmdIZWFkfVxuICAgICAgICAgICAgICAgIHN1YnRpdGxlPXtjaGFyaXR5Lm9yZ2FuaXphdGlvbn1cbiAgICAgICAgLz5cblxuICAgICAgICA8UmF0ZS8+XG4gICAgPC9zZWN0aW9uPlxuXG4gICAgPHNlY3Rpb24+XG4gICAgICAgIDxicj5cbiAgICAgICAgPFRpdGxlU3ViVGl0bGVcbiAgICAgICAgICAgICAgICB0aXRsZT17Y2hhcml0eS50aXRsZX1cbiAgICAgICAgICAgICAgICBzdWJ0aXRsZT17Y2hhcml0eS5kZXNjcmlwdGlvbn1cbiAgICAgICAgLz5cbiAgICAgICAgPGJyPlxuICAgIDwvc2VjdGlvbj5cblxuPC9zZWN0aW9uPlxuXG48YnI+XG48YnI+XG48YnI+XG5cbjxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgICA8Q2hhcml0eUNhcmRzLz5cbjwvZGl2PlxuXG48YnI+XG48YnI+XG48YnI+XG48YnI+XG48YnI+XG5cbjxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgICA8Q2hhcml0eUNhcmRzLz5cbjwvZGl2PlxuXG48YnI+XG48YnI+XG48YnI+XG48YnI+XG48YnI+XG5cbjxGb290ZXIvPlxuXG4iLCI8c2NyaXB0IGNvbnRleHQ9XCJtb2R1bGVcIj5cblx0ZXhwb3J0IGZ1bmN0aW9uIHByZWxvYWQoeyBwYXJhbXMsIHF1ZXJ5IH0pIHtcblx0XHRyZXR1cm4gdGhpcy5mZXRjaChgYmxvZy5qc29uYCkudGhlbihyID0+IHIuanNvbigpKS50aGVuKHBvc3RzID0+IHtcblx0XHRcdHJldHVybiB7IHBvc3RzIH07XG5cdFx0fSk7XG5cdH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuXHRleHBvcnQgbGV0IHBvc3RzO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblx0dWwge1xuXHRcdG1hcmdpbjogMCAwIDFlbSAwO1xuXHRcdGxpbmUtaGVpZ2h0OiAxLjU7XG5cdH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkJsb2c8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPlJlY2VudCBwb3N0czwvaDE+XG5cbjx1bD5cblx0eyNlYWNoIHBvc3RzIGFzIHBvc3R9XG5cdFx0PCEtLSB3ZSdyZSB1c2luZyB0aGUgbm9uLXN0YW5kYXJkIGByZWw9cHJlZmV0Y2hgIGF0dHJpYnV0ZSB0b1xuXHRcdFx0XHR0ZWxsIFNhcHBlciB0byBsb2FkIHRoZSBkYXRhIGZvciB0aGUgcGFnZSBhcyBzb29uIGFzXG5cdFx0XHRcdHRoZSB1c2VyIGhvdmVycyBvdmVyIHRoZSBsaW5rIG9yIHRhcHMgaXQsIGluc3RlYWQgb2Zcblx0XHRcdFx0d2FpdGluZyBmb3IgdGhlICdjbGljaycgZXZlbnQgLS0+XG5cdFx0PGxpPjxhIHJlbD0ncHJlZmV0Y2gnIGhyZWY9J2Jsb2cve3Bvc3Quc2x1Z30nPntwb3N0LnRpdGxlfTwvYT48L2xpPlxuXHR7L2VhY2h9XG48L3VsPiIsIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuXHRleHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuXHRcdC8vIHRoZSBgc2x1Z2AgcGFyYW1ldGVyIGlzIGF2YWlsYWJsZSBiZWNhdXNlXG5cdFx0Ly8gdGhpcyBmaWxlIGlzIGNhbGxlZCBbc2x1Z10uc3ZlbHRlXG5cdFx0Y29uc3QgcmVzID0gYXdhaXQgdGhpcy5mZXRjaChgYmxvZy8ke3BhcmFtcy5zbHVnfS5qc29uYCk7XG5cdFx0Y29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cblx0XHRpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7XG5cdFx0XHRyZXR1cm4geyBwb3N0OiBkYXRhIH07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuZXJyb3IocmVzLnN0YXR1cywgZGF0YS5tZXNzYWdlKTtcblx0XHR9XG5cdH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuXHRleHBvcnQgbGV0IHBvc3Q7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuXHQvKlxuXHRcdEJ5IGRlZmF1bHQsIENTUyBpcyBsb2NhbGx5IHNjb3BlZCB0byB0aGUgY29tcG9uZW50LFxuXHRcdGFuZCBhbnkgdW51c2VkIHN0eWxlcyBhcmUgZGVhZC1jb2RlLWVsaW1pbmF0ZWQuXG5cdFx0SW4gdGhpcyBwYWdlLCBTdmVsdGUgY2FuJ3Qga25vdyB3aGljaCBlbGVtZW50cyBhcmVcblx0XHRnb2luZyB0byBhcHBlYXIgaW5zaWRlIHRoZSB7e3twb3N0Lmh0bWx9fX0gYmxvY2ssXG5cdFx0c28gd2UgaGF2ZSB0byB1c2UgdGhlIDpnbG9iYWwoLi4uKSBtb2RpZmllciB0byB0YXJnZXRcblx0XHRhbGwgZWxlbWVudHMgaW5zaWRlIC5jb250ZW50XG5cdCovXG5cdC5jb250ZW50IDpnbG9iYWwoaDIpIHtcblx0XHRmb250LXNpemU6IDEuNGVtO1xuXHRcdGZvbnQtd2VpZ2h0OiA1MDA7XG5cdH1cblxuXHQuY29udGVudCA6Z2xvYmFsKHByZSkge1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG5cdFx0Ym94LXNoYWRvdzogaW5zZXQgMXB4IDFweCA1cHggcmdiYSgwLDAsMCwwLjA1KTtcblx0XHRwYWRkaW5nOiAwLjVlbTtcblx0XHRib3JkZXItcmFkaXVzOiAycHg7XG5cdFx0b3ZlcmZsb3cteDogYXV0bztcblx0fVxuXG5cdC5jb250ZW50IDpnbG9iYWwocHJlKSA6Z2xvYmFsKGNvZGUpIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5cblx0LmNvbnRlbnQgOmdsb2JhbCh1bCkge1xuXHRcdGxpbmUtaGVpZ2h0OiAxLjU7XG5cdH1cblxuXHQuY29udGVudCA6Z2xvYmFsKGxpKSB7XG5cdFx0bWFyZ2luOiAwIDAgMC41ZW0gMDtcblx0fVxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+e3Bvc3QudGl0bGV9PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxoMT57cG9zdC50aXRsZX08L2gxPlxuXG48ZGl2IGNsYXNzPSdjb250ZW50Jz5cblx0e0BodG1sIHBvc3QuaHRtbH1cbjwvZGl2PlxuIiwiPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+Q2hhcml0aWZ5IC0gaXMgdGhlIGFwcGxpY2F0aW9uIGZvciBoZWxwaW5nIHRob3NlIGluIG5lZWQuPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxzY3JpcHQ+XG5cdGltcG9ydCB7IFNlYXJjaExpbmUsIEZvb3RlciB9IGZyb20gJy4uLy4uL2xheW91dHMnXG5cdGltcG9ydCBDaGFyaXRpZXNMaXN0IGZyb20gJy4vX2NoYXJpdGllcy5zdmVsdGUnXG5cdGltcG9ydCBPcmdhbml6YXRpb25zTGlzdCBmcm9tICcuL19vcmdhbml6YXRpb25zLnN2ZWx0ZSdcblxuXHRleHBvcnQgbGV0IHNlZ21lbnRcblxuXHQkOiBjb25zb2xlLmxvZyhzZWdtZW50KVxuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJzZWFyY2ggdGhlbWUtYmcgY29udGFpbmVyXCI+XG5cdDxicj5cblxuXHQ8U2VhcmNoTGluZS8+XG5cblx0PGJyPlxuXG5cdDx1bD5cblx0XHQ8bGk+PGEgcmVsPXByZWZldGNoIGhyZWY9J2xpc3RzJyBjbGFzczpzZWxlY3RlZD0ne3NlZ21lbnQgPT09IFwibGlzdHNcIn0nPmxpc3Q8L2E+PC9saT5cblx0XHQ8bGk+PGEgcmVsPXByZWZldGNoIGhyZWY9J2xpc3RzL29yZ2FuaXphdGlvbnMnIGNsYXNzOnNlbGVjdGVkPSd7c2VnbWVudCA9PT0gXCJsaXN0cy9vcmdhbml6YXRpb25zXCJ9Jz5vcmdhbml6YXRpb25zPC9hPjwvbGk+XG5cdDwvdWw+XG48L2Rpdj5cblxuPGRpdiBjbGFzcz1cImxpc3Qtd3JhcFwiPlxuXHQ8YnI+XG5cblx0eyNpZiBzZWdtZW50ID09PSAnbGlzdHMvb3JnYW5pemF0aW9ucyd9XG5cdDxPcmdhbml6YXRpb25zTGlzdC8+XG5cdHs6ZWxzZX1cblx0PENoYXJpdGllc0xpc3QvPlxuXHR7L2lmfVxuXG5cdDxicj5cblx0PGJyPlxuPC9kaXY+XG5cbjxGb290ZXIvPlxuXG48c3R5bGU+XG5cdC5zZWFyY2gge1xuXHRcdHBvc2l0aW9uOiBzdGlja3k7XG5cdFx0dG9wOiA0N3B4O1xuXHRcdGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1wcmltYXJ5KTtcblx0fVxuXG5cdC5saXN0LXdyYXAge1xuXHRcdGZsZXg6IDEgMSBhdXRvO1xuXHRcdHBhZGRpbmc6IDAgdmFyKC0tc2NyZWVuLXBhZGRpbmcpXG5cdH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IEljb24sIEJ1dHRvbiwgQXZhdGFyIH0gZnJvbSAnLi4vY29tcG9uZW50cydcblxuICAgIGV4cG9ydCBsZXQgc2VnbWVudFxuXG4gICAgbGV0IGlzRGFya1RoZW1lID0gZmFsc2VcblxuICAgIGxldCB2YWx1ZSA9ICd1YSdcblxuICAgIGZ1bmN0aW9uIGNoYW5nZVRoZW1lKCkge1xuICAgICAgICBpc0RhcmtUaGVtZSA9ICFpc0RhcmtUaGVtZVxuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ3RoZW1lLWRhcmsnKVxuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ3RoZW1lLWxpZ2h0JylcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKGlzRGFya1RoZW1lID8gJ3RoZW1lLWRhcmsnIDogJ3RoZW1lLWxpZ2h0JylcbiAgICB9XG48L3NjcmlwdD5cblxuPG5hdiBjbGFzcz1cInRoZW1lLWJnIGNvbnRhaW5lclwiPlxuICAgIDx1bD5cbiAgICAgICAgPGxpPjxhIHJlbD1wcmVmZXRjaCBocmVmPScuJyBjbGFzczpzZWxlY3RlZD0ne3NlZ21lbnQgPT09IHVuZGVmaW5lZH0nPmhvbWU8L2E+PC9saT5cbiAgICAgICAgPGxpPjxhIGhyZWY9J21hcCcgY2xhc3M6c2VsZWN0ZWQ9J3tzZWdtZW50ID09PSBcIm1hcFwifSc+bWFwPC9hPjwvbGk+XG4gICAgICAgIDxsaT48YSByZWw9cHJlZmV0Y2ggaHJlZj0nbGlzdHMnIGNsYXNzOnNlbGVjdGVkPSd7c2VnbWVudCA9PT0gXCJsaXN0c1wifSc+bGlzdDwvYT48L2xpPlxuICAgICAgICA8bGk+PGEgcmVsPXByZWZldGNoIGhyZWY9J2NoYXJpdHknIGNsYXNzOnNlbGVjdGVkPSd7c2VnbWVudCA9PT0gXCJjaGFyaXR5XCJ9Jz5jaGFyaXR5PC9hPjwvbGk+XG4gICAgICAgIDxsaT48YSByZWw9cHJlZmV0Y2ggaHJlZj0nb3JnYW5pemF0aW9uJyBjbGFzczpzZWxlY3RlZD0ne3NlZ21lbnQgPT09IFwib3JnYW5pemF0aW9uXCJ9Jz5vcmdhbml6YXRpb248L2E+PC9saT5cbiAgICA8L3VsPlxuXG4gICAgPHVsIGNsYXNzPVwibmF2LWFjdGlvbnNcIj5cbiAgICAgICAgPGxpPlxuICAgICAgICAgICAgPHNlbGVjdCB7dmFsdWV9IG5hbWU9XCJsYW5nXCIgaWQ9XCJsYW5nXCIgY2xhc3M9XCJidG4gc21hbGwgbGFuZy1zZWxlY3RcIj5cbiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwidWFcIj5VYTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJydVwiPlJ1PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImVuXCI+RW48L29wdGlvbj5cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICA8L2xpPlxuXG4gICAgICAgIDxsaT5cbiAgICAgICAgICAgIDxCdXR0b24gb246Y2xpY2s9e2NoYW5nZVRoZW1lfSBhdXRvIHNpemU9XCJzbWFsbFwiPlxuICAgICAgICAgICAgICAgIDxJY29uIHR5cGU9XCJtb29uXCIgY2xhc3M9XCJ0aGVtZS1zdmctZmlsbFwiLz5cbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L2xpPlxuXG4gICAgICAgIDxsaT5cbiAgICAgICAgICAgIDxCdXR0b24gb246Y2xpY2s9e2NoYW5nZVRoZW1lfSBhdXRvIHNpemU9XCJzbWFsbFwiPlxuICAgICAgICAgICAgICAgIDxBdmF0YXIgc2l6ZT1cInNtYWxsXCIgc3JjPVwiaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAwLzMwMC9wZW9wbGVcIi8+XG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgPC9saT5cbiAgICA8L3VsPlxuPC9uYXY+XG5cbjxzdHlsZT5cbiAgICBuYXYge1xuICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHotaW5kZXg6IDEwO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1zZWNvbmRhcnkpO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSh2YXIoLS1jb2xvci1kYW5nZXIpLCAuMSk7XG4gICAgfVxuXG4gICAgLnNlbGVjdGVkIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuXG4gICAgLnNlbGVjdGVkOjphZnRlciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDFlbSk7XG4gICAgICAgIGhlaWdodDogMnB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IodmFyKC0tY29sb3ItZGFuZ2VyKSk7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBib3R0b206IC0xcHg7XG4gICAgfVxuXG4gICAgYSB7XG4gICAgICAgIHBhZGRpbmc6IC44ZW0gMC41ZW07XG4gICAgfVxuXG4gICAgLm5hdi1hY3Rpb25zIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luOiAtM3B4O1xuICAgIH1cblxuICAgIC5uYXYtYWN0aW9ucyBsaSB7XG4gICAgICAgIHBhZGRpbmc6IDNweDtcbiAgICB9XG5cbiAgICAubGFuZy1zZWxlY3Qge1xuICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIH1cblxuICAgIC5sYW5nLXNlbGVjdDpob3ZlcixcbiAgICAubGFuZy1zZWxlY3Q6Zm9jdXMge1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKHZhcigtLWNvbG9yLWJsYWNrKSwgMC4xKTtcbiAgICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cblxuPC9zY3JpcHQ+XG5cbjxmb290ZXI+XG4gICAgPHA+wqkgMjAxOSAtIHtuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCl9PC9wPlxuPC9mb290ZXI+XG5cbjxzdHlsZT5cbiAgICBmb290ZXIge1xuICAgICAgICBwYWRkaW5nOiBjYWxjKHZhcigtLXNjcmVlbi1wYWRkaW5nKSAqIDIpIHZhcigtLXNjcmVlbi1wYWRkaW5nKTtcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgdmFyKC0tc2hhZG93LXByaW1hcnkpO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKHZhcigtLXRoZW1lLWJnLWNvbG9yKSk7XG4gICAgfVxuPC9zdHlsZT5cbiIsIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgQXZhdGFyIH0gZnJvbSAnLi4vY29tcG9uZW50cydcblxuICAgIGV4cG9ydCBsZXQgc3JjID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCB0aXRsZSA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgc3VidGl0bGUgPSB1bmRlZmluZWRcbjwvc2NyaXB0PlxuXG48c2VjdGlvbj5cbiAgICA8QXZhdGFyIHNyYz17c3JjfSBhbHQ9e3RpdGxlfSBjbGFzcz1cImNvbW1lbnQtYXZhXCIvPlxuXG4gICAgPGRpdj5cbiAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICA8aDQ+e3RpdGxlfTwvaDQ+XG4gICAgICAgICAgICA8c3ViPntzdWJ0aXRsZX08L3N1Yj5cbiAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgIDxiciBjbGFzcz1cInNtYWxsXCI+XG5cbiAgICAgICAgPHNsb3Q+XG4gICAgICAgICAgICA8cHJlPlxuICAgICAgICAgICAgICAgIEEgbG9vb29vb29vb29uZyBjb21tZW50IHRoYXQgaGFzIGJlZW5cbiAgICAgICAgICAgICAgICBsZWZ0IGJ5IGEgdmVyeSBhbmdyeSBndXkgd2hvIGNvbXBsYWlucyB1cG9uXG4gICAgICAgICAgICAgICAgbG9vb29vbmcgY29tbWVudHMuXG4gICAgICAgICAgICA8L3ByZT5cbiAgICAgICAgPC9zbG90PlxuICAgIDwvZGl2PlxuPC9zZWN0aW9uPlxuXG48c3R5bGU+XG4gICAgc2VjdGlvbiB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIH1cblxuICAgIGRpdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuXG4gICAgc3BhbiB7XG4gICAgICAgIGZsZXg6IG5vbmU7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIHBhZGRpbmc6IDAgOHB4O1xuICAgIH1cblxuICAgIHNwYW4gaDQsXG4gICAgc3BhbiBzdWIge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIH1cblxuICAgIHByZSB7XG4gICAgICAgIHBhZGRpbmc6IDAgOHB4O1xuICAgICAgICBmb250LXNpemU6IC44MjVlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgQXZhdGFyQW5kTmFtZSBmcm9tICcuL0F2YXRhckFuZE5hbWUuc3ZlbHRlJ1xuXG4gICAgZXhwb3J0IGxldCBpdGVtcyA9IFtdXG48L3NjcmlwdD5cblxueyNlYWNoIGl0ZW1zIGFzIGl0ZW19XG4gICAgPHNlY3Rpb24gY2xhc3M9XCJpdGVtIGNvbnRhaW5lclwiPlxuICAgICAgICA8YnI+XG4gICAgICAgIDxBdmF0YXJBbmROYW1lXG4gICAgICAgICAgICAgICAgc3JjPXtpdGVtLm9yZ0hlYWRTcmN9XG4gICAgICAgICAgICAgICAgdGl0bGU9e2l0ZW0ub3JnSGVhZH1cbiAgICAgICAgICAgICAgICBzdWJ0aXRsZT17aXRlbS5vcmdhbml6YXRpb259XG4gICAgICAgIC8+XG4gICAgICAgIDxicj5cbiAgICA8L3NlY3Rpb24+XG4gICAgPGJyPlxuezplbHNlfVxuICAgIDxzZWN0aW9uIGNsYXNzPVwiaXRlbSBjb250YWluZXJcIj5cbiAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LWNlbnRlclwiPk5vIG9yZ2FuaXphdGlvbnM8L3A+XG4gICAgPC9zZWN0aW9uPlxuey9lYWNofVxuXG48c3R5bGU+XG4gICAgLml0ZW0ge1xuICAgICAgICBmbGV4OiAxIDEgYXV0bztcbiAgICAgICAgYm94LXNoYWRvdzogdmFyKC0tc2hhZG93LXByaW1hcnkpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzKTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSh2YXIoLS10aGVtZS1iZy1jb2xvcikpO1xuICAgIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IElucHV0IH0gZnJvbSAnLi4vY29tcG9uZW50cydcbjwvc2NyaXB0PlxuXG48c2VjdGlvbiBjbGFzcz1cInNlYXJjaFwiPlxuICAgIDxJbnB1dC8+XG48L3NlY3Rpb24+XG5cbjxzdHlsZT5cbiAgICAuc2VhcmNoIHtcblxuICAgIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IFJhdGUsIFByb2dyZXNzLCBBdmF0YXIsIENhcm91c2VsIH0gZnJvbSAnLi4vY29tcG9uZW50cydcbiAgICBpbXBvcnQgQXZhdGFyQW5kTmFtZSBmcm9tICcuL0F2YXRhckFuZE5hbWUuc3ZlbHRlJ1xuXG4gICAgZXhwb3J0IGxldCBzcmMgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IHRpdGxlID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBwZXJjZW50ID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBvcmdIZWFkID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBvcmdIZWFkU3JjID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBvcmdhbml6YXRpb24gPSB1bmRlZmluZWRcblxuICAgICQ6IGltYWdlcyA9IG5ldyBBcnJheSg0KS5maWxsKHtcbiAgICAgICAgc3JjLFxuICAgICAgICBhbHQ6IHRpdGxlLFxuICAgIH0pXG48L3NjcmlwdD5cblxuPHNlY3Rpb24gY2xhc3M9XCJjYXJkXCI+XG4gICAgPGRpdiBjbGFzcz1cImltYWdlcy13cmFwXCI+XG4gICAgICAgIDxDYXJvdXNlbCBpdGVtcz17aW1hZ2VzfS8+XG4gICAgPC9kaXY+XG5cbiAgICA8UHJvZ3Jlc3MgdmFsdWU9e3BlcmNlbnR9IGJvcmRlclJhZGl1cz1cIjAgMFwiLz5cblxuICAgIDxoND57dGl0bGV9PC9oND5cblxuICAgIDxkaXYgY2xhc3M9XCJyYXRlLXdyYXBcIj5cbiAgICAgICAgPFJhdGUgc2l6ZT1cInNtYWxsXCIvPlxuICAgIDwvZGl2PlxuXG4gICAgPGZvb3Rlcj5cbiAgICAgICAgPEF2YXRhckFuZE5hbWUgc3JjPXtvcmdIZWFkU3JjfSB0aXRsZT17b3JnSGVhZH0gc3VidGl0bGU9e29yZ2FuaXphdGlvbn0vPlxuICAgIDwvZm9vdGVyPlxuPC9zZWN0aW9uPlxuXG48c3R5bGU+XG4gICAgLmNhcmQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBmbGV4OiBub25lO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC5yYXRlLXdyYXAge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmctdG9wOiA2cHg7XG4gICAgfVxuXG4gICAgLmltYWdlcy13cmFwIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICB9XG5cbiAgICBoNCB7XG4gICAgICAgIC0tY2FyZC1saW5lLWhlaWdodDogMS40O1xuXG4gICAgICAgIGZvbnQtc2l6ZTogLjhlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IHZhcigtLWNhcmQtbGluZS1oZWlnaHQpO1xuICAgICAgICBoZWlnaHQ6IGNhbGModmFyKC0tZm9udC1zaXplKSAqICh2YXIoLS1jYXJkLWxpbmUtaGVpZ2h0KSAvIDEuMikgKiAyKTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgeyBEaXZpZGVyIH0gZnJvbSAnLi4vY29tcG9uZW50cydcbiAgICBpbXBvcnQgQ2hhcml0eUNhcmQgZnJvbSAnLi4vbGF5b3V0cy9DaGFyaXR5Q2FyZC5zdmVsdGUnXG5cbiAgICBleHBvcnQgbGV0IGxpc3ROYW1lXG4gICAgZXhwb3J0IGxldCBhbW91bnQgPSAyXG5cbiAgICAkOiBjYXJkcyA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgc3JjOiAnaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAwLzMwMC90ZWNoJyxcbiAgICAgICAgICAgIHRpdGxlOiAnVGhpcyBwZXJzb24gbmVlZHMgeW91ciBoZWxwJyxcbiAgICAgICAgICAgIHBlcmNlbnQ6IDQ1LFxuICAgICAgICAgICAgb3JnSGVhZDogJ1RpbmEgS2FuZGVsYWtpJyxcbiAgICAgICAgICAgIG9yZ0hlYWRTcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL3Blb3BsZScsXG4gICAgICAgICAgICBvcmdhbml6YXRpb246ICdIZWFkIG9mIHRoZSBvcmdhbml6YXRpb24gd2l0aCBsb29vb29vb29uZy1uYWFhYWFhbWVkIGNoYXJpdHknLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBzcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL2FyY2gnLFxuICAgICAgICAgICAgdGl0bGU6ICdBbm90aGVyIHBlcnNvbiB3aG8gbmVlZHMgeW91ciBxdWljayBoZWxwJyxcbiAgICAgICAgICAgIHBlcmNlbnQ6IDY1LFxuICAgICAgICAgICAgb3JnSGVhZDogJ1RpbmEgS2FuZGVsYWtpJyxcbiAgICAgICAgICAgIG9yZ0hlYWRTcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL3Blb3BsZScsXG4gICAgICAgICAgICBvcmdhbml6YXRpb246ICdIZWFkIG9mIGFub3RoZXIgb3JnYW5pemF0aW9uJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgc3JjOiAnaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAwLzMwMC9hbnknLFxuICAgICAgICAgICAgdGl0bGU6ICdUaGUgcGVyc29uIHdpdGggdGhlIGxvbmdlc3QgbmFtZSBpcyBhbHNvIHdhaXQgZm9yIHlvdScsXG4gICAgICAgICAgICBwZXJjZW50OiA1LFxuICAgICAgICAgICAgb3JnSGVhZDogJ1RpbmFyYW1pc2ltdXNzIGVsLWRlLWxhIEthbmRlbGFraW51c2thcycsXG4gICAgICAgICAgICBvcmdIZWFkU3JjOiAnaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAwLzMwMC9wZW9wbGUnLFxuICAgICAgICAgICAgb3JnYW5pemF0aW9uOiAnT1JHIG9mIGNoYXJpdHknLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBzcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL25hdHVyZScsXG4gICAgICAgICAgICB0aXRsZTogJ05lZWRzJyxcbiAgICAgICAgICAgIHBlcmNlbnQ6IDk1LFxuICAgICAgICAgICAgb3JnSGVhZDogJ1RpbmEgS2FuZGVsYWtpJyxcbiAgICAgICAgICAgIG9yZ0hlYWRTcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL3Blb3BsZScsXG4gICAgICAgICAgICBvcmdhbml6YXRpb246ICdPUkcgZ2lhbnQgY2hhcml0eSBvcmdhbml6YXRpb24gb2YgYmlnIENoYXJpdGlmeSBjb21wYW55JyxcbiAgICAgICAgfSxcbiAgICBdLnNsaWNlKE51bWJlci5pc0Zpbml0ZSgrYW1vdW50KSA/ICthbW91bnQgOiAwKVxuXG4gICAgJDogaW1hZ2VzID0gY2FyZHMubWFwKGNhcmQgPT4gKHtcbiAgICAgICAgc3JjOiBbY2FyZC5zcmMsIGNhcmQuc3JjLCBjYXJkLnNyY10sXG4gICAgICAgIGFsdDogY2FyZC50aXRsZSxcbiAgICB9KSlcbjwvc2NyaXB0PlxuXG48c2VjdGlvbj5cbiAgICB7I2lmIGxpc3ROYW1lfVxuICAgICAgICA8RGl2aWRlciBzaXplPVwiMTZcIi8+XG4gICAgICAgIDxoMyBjbGFzcz1cImgyIHRleHQtcmlnaHRcIj57bGlzdE5hbWV9PC9oMz5cbiAgICAgICAgPERpdmlkZXIgc2l6ZT1cIjIwXCIvPlxuICAgICAgICA8YnI+XG4gICAgey9pZn1cbiAgICA8dWwgY2xhc3M9XCJjYXJkc1wiPlxuICAgICAgICB7I2VhY2ggY2FyZHMgYXMgY2FyZH1cbiAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICA8Q2hhcml0eUNhcmQgey4uLmNhcmR9Lz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgIHsvZWFjaH1cbiAgICA8L3VsPlxuPC9zZWN0aW9uPlxuXG48c3R5bGU+XG4gICAgc2VjdGlvbiB7XG4gICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgYWxpZ24tc2VsZjogc3RyZXRjaDtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgfVxuXG4gICAgLmNhcmRzIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmc6IHZhcigtLXNjcmVlbi1wYWRkaW5nKSAwO1xuICAgICAgICBtYXJnaW46IGNhbGModmFyKC0tc2NyZWVuLXBhZGRpbmcpICogLTMpIGNhbGModmFyKC0tc2NyZWVuLXBhZGRpbmcpICogLTEpO1xuICAgIH1cblxuICAgIC5jYXJkcyBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3RyZXRjaDtcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgcGFkZGluZzogY2FsYyh2YXIoLS1zY3JlZW4tcGFkZGluZykgKiAzKSB2YXIoLS1zY3JlZW4tcGFkZGluZyk7XG4gICAgfVxuXG4gICAgLmNhcmRzIGxpOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMSlcbiAgICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgICBleHBvcnQgbGV0IHRpdGxlID0gJ1RoZSBtYWluIHRpdGxlIHRoYXQgZXhwbGFpbnMgdGhlIGNoYXJpdHknXG4gICAgZXhwb3J0IGxldCBzdWJ0aXRsZSA9ICdBbmQgYmlnZ2VyIGRlc2NyaXB0aW9uIHRoYXQgZGVzY3JpYmVzIGluIHNob3J0IGtleXdvcmRzIGEgY2hhcml0eSwgdGl0bGUgYWJvdmUgYW5kIGp1c3QgbWFrZXMgdGV4dCBsb25nZXInXG48L3NjcmlwdD5cblxuPHNlY3Rpb24+XG4gICAgPGgxPnt0aXRsZX08L2gxPlxuICAgIDxicj5cbiAgICA8aDI+e3N1YnRpdGxlfTwvaDI+XG48L3NlY3Rpb24+XG5cbjxzdHlsZT5cbiAgICBzZWN0aW9uIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBwYWRkaW5nOiAwIDN2dztcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgfVxuPC9zdHlsZT5cbiIsIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgSW5wdXQsIEJ1dHRvbiB9IGZyb20gJy4uL2NvbXBvbmVudHMnXG48L3NjcmlwdD5cblxuPHVsPlxuICAgIDxsaT5cbiAgICAgICAgPEJ1dHRvbiBpcz1cInN1Y2Nlc3NcIiBvbjpjbGljaz1cIntlID0+IGNvbnNvbGUubG9nKGUpfVwiPnRlc3QxPC9CdXR0b24+XG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICAgIDxCdXR0b24gaXM9XCJzdWNjZXNzXCIgb246Y2xpY2s9XCJ7ZSA9PiBjb25zb2xlLmxvZyhlKX1cIj50ZXN0MTI8L0J1dHRvbj5cbiAgICA8L2xpPlxuICAgIDxsaT5cbiAgICAgICAgPEJ1dHRvbiBpcz1cInN1Y2Nlc3NcIiBvbjpjbGljaz1cIntlID0+IGNvbnNvbGUubG9nKGUpfVwiPnRlc3QxMjM8L0J1dHRvbj5cbiAgICA8L2xpPlxuICAgIDxsaT5cbiAgICAgICAgPGJyPlxuICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICBuYW1lPVwibnVtXCJcbiAgICAgICAgICAgICAgICBsaXN0PVwic3VtLXN1Z2dlc3Rpb25zXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIk51bVwiXG4gICAgICAgICAgICAgICAgYXV0b3NlbGVjdFxuICAgICAgICAgICAgICAgIGFsaWduPVwicmlnaHRcIlxuICAgICAgICAvPlxuXG4gICAgICAgIDxkYXRhbGlzdCBpZD1cInN1bS1zdWdnZXN0aW9uc1wiPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjIwXCI+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiNTAwXCI+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMTAwMFwiPlxuICAgICAgICA8L2RhdGFsaXN0PlxuICAgIDwvbGk+XG4gICAgPGxpPlxuICAgICAgICA8QnV0dG9uIGlzPVwid2FybmluZ1wiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCI+U3VibWl0PC9CdXR0b24+XG4gICAgPC9saT5cbjwvdWw+XG5cbjxzdHlsZT5cbiAgICB1bCB7XG4gICAgICAgIGZsZXg6IDA7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIG1hcmdpbjogY2FsYyh2YXIoLS1zY3JlZW4tcGFkZGluZykgKiAtMSAvIDIpIDA7XG4gICAgICAgIHBhZGRpbmc6IDAgMCAwIHZhcigtLXNjcmVlbi1wYWRkaW5nKTtcbiAgICB9XG5cbiAgICB1bCBsaSB7XG4gICAgICAgIGZsZXg6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogY2FsYyh2YXIoLS1zY3JlZW4tcGFkZGluZykgLyAyKSAwO1xuICAgIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IEF2YXRhciB9IGZyb20gJy4uL2NvbXBvbmVudHMnXG5cbiAgICBleHBvcnQgbGV0IHNyYyA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgdGl0bGUgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IHN1YnRpdGxlID0gdW5kZWZpbmVkXG48L3NjcmlwdD5cblxuPHNlY3Rpb24+XG4gICAgPEF2YXRhciBzcmM9e3NyY30gYWx0PXt0aXRsZX0vPlxuXG4gICAgPHNwYW4+XG4gICAgICAgIDxoND57dGl0bGV9PC9oND5cbiAgICAgICAgPHN1Yj57c3VidGl0bGV9PC9zdWI+XG4gICAgPC9zcGFuPlxuPC9zZWN0aW9uPlxuXG48c3R5bGU+XG4gICAgc2VjdGlvbiB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuXG4gICAgc3BhbiB7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIHBhZGRpbmc6IDAgOHB4O1xuICAgIH1cblxuICAgIHNwYW4gaDQsXG4gICAgc3BhbiBzdWIge1xuICAgICAgICBsaW5lLWhlaWdodDogMS40O1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGNvbnN0IGl0ZW1zID0gW1xuICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ0NvbWZvcnQgaXMgdGhlIG1haW4gZmVhdHVyZScsXG4gICAgICAgICAgICB0ZXh0OiAnSnVzdCBpbWFnaW5nLCB5b3UgZG8gc29tZXRoaW5nIHNpbXBsZSBhbmQgeW91IGNhbiBzZWUgdGhlIHJlc3VsdCBvZiB5b3VyIHNob3J0IHdheS4nLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ0NvbWZvcnQgaXMgdGhlIG1haW4gZmVhdHVyZScsXG4gICAgICAgICAgICB0ZXh0OiAnSnVzdCBpbWFnaW5nLCB5b3UgZG8gc29tZXRoaW5nIHNpbXBsZSBhbmQgeW91IGNhbiBzZWUgdGhlIHJlc3VsdCBvZiB5b3VyIHNob3J0IHdheS4nLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ0NvbWZvcnQgaXMgdGhlIG1haW4gZmVhdHVyZScsXG4gICAgICAgICAgICB0ZXh0OiAnSnVzdCBpbWFnaW5nLCB5b3UgZG8gc29tZXRoaW5nIHNpbXBsZSBhbmQgeW91IGNhbiBzZWUgdGhlIHJlc3VsdCBvZiB5b3VyIHNob3J0IHdheS4nLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ0NvbWZvcnQgaXMgdGhlIG1haW4gZmVhdHVyZScsXG4gICAgICAgICAgICB0ZXh0OiAnSnVzdCBpbWFnaW5nLCB5b3UgZG8gc29tZXRoaW5nIHNpbXBsZSBhbmQgeW91IGNhbiBzZWUgdGhlIHJlc3VsdCBvZiB5b3VyIHNob3J0IHdheS4nLFxuICAgICAgICB9LFxuICAgIF1cbjwvc2NyaXB0PlxuXG48dWw+XG4gICAgeyNlYWNoIGl0ZW1zIGFzIGl0ZW19XG4gICAgICAgIDxsaT5cbiAgICAgICAgICAgIDxoMz57aXRlbS50aXRsZX08L2gzPlxuICAgICAgICAgICAgPHA+e2l0ZW0udGV4dH08L3A+XG4gICAgICAgICAgICA8YnI+XG4gICAgICAgIDwvbGk+XG4gICAgey9lYWNofVxuPC91bD5cblxuPHN0eWxlPlxuICAgIHVsIHtcbiAgICAgICAgbGlzdC1zdHlsZTogZGlzYyBvdXRzaWRlIG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDAgY2FsYyh2YXIoLS1zY3JlZW4tcGFkZGluZykgKiA1KTtcbiAgICAgICAgLypsaXN0LXN0eWxlLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7dXRmOCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzEwJyBoZWlnaHQ9JzEwJyB2aWV3Qm94PSctMSAtMSAyIDInPjxjaXJjbGUgcj0nMScgLz48L3N2Zz5cIik7Ki9cbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGxpc3QtaXRlbTtcbiAgICB9XG5cbiAgICB1bCwgbGksIGgzLCBwIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIH1cblxuICAgIGgzLCBwIHtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgSWNvbiBmcm9tICcuLi9jb21wb25lbnRzL0ljb24uc3ZlbHRlJ1xuXG4gICAgZXhwb3J0IGxldCBpcyA9ICdkYW5nZXInXG4gICAgZXhwb3J0IGxldCBzaXplID0gJ21lZGl1bScgLy8gc21hbGx8bWVkaXVtfG1pZ1xuPC9zY3JpcHQ+XG5cbjx1bCBjbGFzcz1cInJhdGVcIj5cbiAgICA8bGk+XG4gICAgICAgIDxJY29uIHtpc30ge3NpemV9IHR5cGU9XCJoZWFydC1maWxsZWRcIi8+XG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICAgIDxJY29uIHtpc30ge3NpemV9IHR5cGU9XCJoZWFydC1maWxsZWRcIi8+XG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICAgIDxJY29uIHtpc30ge3NpemV9IHR5cGU9XCJoZWFydC1maWxsZWRcIi8+XG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICAgIDxJY29uIHtpc30ge3NpemV9IHR5cGU9XCJoZWFydC1maWxsZWRcIi8+XG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICAgIDxJY29uIHtpc30ge3NpemV9IHR5cGU9XCJoZWFydC1maWxsZWRcIi8+XG4gICAgPC9saT5cbjwvdWw+XG5cbjxzdHlsZT5cbiAgICAucmF0ZSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgICBtYXJnaW46IGNhbGModmFyKC0tc2NyZWVuLXBhZGRpbmcpICogLTEgLyAzKTtcbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICAgIHBhZGRpbmc6IGNhbGModmFyKC0tc2NyZWVuLXBhZGRpbmcpIC8gMyk7XG4gICAgfVxuXG4gICAgLnJhdGUgbGkge1xuICAgICAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coLTFweCAycHggMXB4IHJnYmEodmFyKC0tY29sb3ItYmxhY2spLCAuMjUpKTtcbiAgICAgICAgZmlsdGVyOiBkcm9wLXNoYWRvdygtMXB4IDJweCAxcHggcmdiYSh2YXIoLS1jb2xvci1ibGFjayksIC4yNSkpO1xuICAgIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IGNsYXNzbmFtZXMsIHRvQ1NTU3RyaW5nIH0gZnJvbSAnLi4vdXRpbHMnXG5cbiAgICBleHBvcnQgbGV0IHR5cGVcbiAgICBleHBvcnQgbGV0IGlzIC8vIHByaW1hcnl8d2FybmluZ3xkYW5nZXJ8bGlnaHR8ZGFya1xuICAgIGV4cG9ydCBsZXQgc2l6ZSA9ICdtZWRpdW0nIC8vIHNtYWxsfG1lZGl1bXxiaWdcbiAgICBleHBvcnQgbGV0IHJvdGF0ZSA9IDBcbiAgICBleHBvcnQgbGV0IHN0eWxlID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBpZCA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgdGl0bGUgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IGFyaWFMYWJlbCA9IHVuZGVmaW5lZFxuXG4gICAgbGV0IHRpdGxlUHJvcCA9IHRpdGxlIHx8IGFyaWFMYWJlbFxuICAgIGxldCBhcmlhTGFiZWxQcm9wID0gYXJpYUxhYmVsIHx8IHRpdGxlXG4gICAgbGV0IHN0eWxlUHJvcCA9IHRvQ1NTU3RyaW5nKHsgdHJhbnNmb3JtOiAhIXJvdGF0ZSA/IGByb3RhdGVaKCR7cm90YXRlfWRlZylgIDogbnVsbCwgLi4uc3R5bGUgfSlcblxuICAgICQ6ICBjbGFzc1Byb3AgPSBjbGFzc25hbWVzKCdpY28nLCBpcywgc2l6ZSwgJCRwcm9wcy5jbGFzcylcbjwvc2NyaXB0PlxuXG48c3ZnXG4gICAgICAgIHtpZH1cbiAgICAgICAgdGl0bGU9e3RpdGxlUHJvcH1cbiAgICAgICAgY2xhc3M9e2NsYXNzUHJvcH1cbiAgICAgICAgc3R5bGU9e3N0eWxlUHJvcH1cbiAgICAgICAgYXJpYS1sYWJlbD17YXJpYUxhYmVsUHJvcH1cbj5cbiAgICA8dXNlIHhsaW5rOmhyZWY9e2AjaWNvLSR7dHlwZX1gfSBjbGFzcz1cImljby11c2VcIi8+XG48L3N2Zz5cblxuPHN0eWxlPlxuICAgIHN2ZyB7XG4gICAgICAgIGRpc3BsYXk6IGluaGVyaXQ7XG4gICAgfVxuXG4gICAgc3ZnLCBzdmcgKiB7XG4gICAgICAgIGZpbGw6IHJnYmEodmFyKC0tdGhlbWUtc3ZnLWZpbGwpKTtcbiAgICAgICAgc3Ryb2tlOiByZ2JhKHZhcigtLXRoZW1lLXN2Zy1maWxsKSk7XG4gICAgfVxuXG4gICAgLyogLS0tLS0tLS0tLS0tPT09PT09PT09KCBTaXplICk9PT09PT09PT0tLS0tLS0tLS0tLS0gKi9cbiAgICAuc21hbGwge1xuICAgICAgICB3aWR0aDogMTVweDtcbiAgICAgICAgaGVpZ2h0OiAxNXB4O1xuICAgIH1cblxuICAgIC5tZWRpdW0ge1xuICAgICAgICB3aWR0aDogMjJweDtcbiAgICAgICAgaGVpZ2h0OiAyMnB4O1xuICAgIH1cblxuICAgIC5iaWcge1xuICAgICAgICB3aWR0aDogMzVweDtcbiAgICAgICAgaGVpZ2h0OiAzNXB4O1xuICAgIH1cblxuICAgIC8qIC0tLS0tLS0tLS0tLT09PT09PT09PSggQ29sb3IgKT09PT09PT09PS0tLS0tLS0tLS0tLSAqL1xuICAgIC5wcmltYXJ5LCAucHJpbWFyeSAqIHtcbiAgICAgICAgZmlsbDogcmdiKHZhcigtLWNvbG9yLXN1Y2Nlc3MpKTtcbiAgICAgICAgc3Ryb2tlOiByZ2IodmFyKC0tY29sb3Itc3VjY2VzcykpO1xuICAgIH1cblxuICAgIC53YXJuaW5nLCAud2FybmluZyAqIHtcbiAgICAgICAgZmlsbDogcmdiKHZhcigtLWNvbG9yLXdhcm5pbmcpKTtcbiAgICAgICAgc3Ryb2tlOiByZ2IodmFyKC0tY29sb3Itd2FybmluZykpO1xuICAgIH1cblxuICAgIC5kYW5nZXIsIC5kYW5nZXIgKiB7XG4gICAgICAgIGZpbGw6IHJnYih2YXIoLS1jb2xvci1kYW5nZXIpKTtcbiAgICAgICAgc3Ryb2tlOiByZ2IodmFyKC0tY29sb3ItZGFuZ2VyKSk7XG4gICAgfVxuXG4gICAgLmluZm8sIC5pbmZvICoge1xuICAgICAgICBmaWxsOiByZ2IodmFyKC0tY29sb3ItaW5mbykpO1xuICAgICAgICBzdHJva2U6IHJnYih2YXIoLS1jb2xvci1pbmZvKSk7XG4gICAgfVxuXG4gICAgLmxpZ2h0LCAubGlnaHQgKiB7XG4gICAgICAgIGZpbGw6IHZhcigtLWNvbG9yLWxpZ2h0LTEpO1xuICAgICAgICBzdHJva2U6IHZhcigtLWNvbG9yLWxpZ2h0LTEpO1xuICAgIH1cblxuICAgIC5kYXJrLCAuZGFyayAqIHtcbiAgICAgICAgZmlsbDogdmFyKC0tY29sb3ItZGFyay0xKTtcbiAgICAgICAgc3Ryb2tlOiB2YXIoLS1jb2xvci1kYXJrLTEpO1xuICAgIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSdcbiAgICBpbXBvcnQgeyBjbGFzc25hbWVzLCB0b0NTU1N0cmluZyB9IGZyb20gJy4uL3V0aWxzJ1xuXG4gICAgY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKVxuXG4gICAgZXhwb3J0IGxldCBuYW1lXG4gICAgZXhwb3J0IGxldCB2YWx1ZSA9ICcnXG4gICAgZXhwb3J0IGxldCBzdHlsZSA9IHt9XG4gICAgZXhwb3J0IGxldCB0eXBlID0gJ3RleHQnXG4gICAgZXhwb3J0IGxldCBpZCA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgYWxpZ24gPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IG1heGxlbmd0aCA9IDEwMDBcbiAgICBleHBvcnQgbGV0IHJvd3MgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IGRpc2FibGVkID0gZmFsc2VcbiAgICBleHBvcnQgbGV0IHRpdGxlID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBpbnZhbGlkID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBtaW4gPSB1bmRlZmluZWQgLy8gU3BlY2lmaWVzIGEgbWluaW11bSB2YWx1ZSBmb3IgYW4gPGlucHV0PiBlbGVtZW50XG4gICAgZXhwb3J0IGxldCBtYXggPSB1bmRlZmluZWQgLy8gU3BlY2lmaWVzIHRoZSBtYXhpbXVtIHZhbHVlIGZvciBhbiA8aW5wdXQ+IGVsZW1lbnRcbiAgICBleHBvcnQgbGV0IGxpc3QgPSB1bmRlZmluZWQgLy8gUmVmZXJzIHRvIGEgPGRhdGFsaXN0PiBlbGVtZW50IHRoYXQgY29udGFpbnMgcHJlLWRlZmluZWQgb3B0aW9ucyBmb3IgYW4gPGlucHV0PiBlbGVtZW50XG4gICAgZXhwb3J0IGxldCBmb3JtID0gdW5kZWZpbmVkIC8vIFNwZWNpZmllcyB0aGUgZm9ybSB0aGUgPGlucHV0PiBlbGVtZW50IGJlbG9uZ3MgdG9cbiAgICBleHBvcnQgbGV0IHJlYWRvbmx5ID0gdW5kZWZpbmVkIC8vIHVuZGVmaW5lZHxyZWFkb25seVxuICAgIGV4cG9ydCBsZXQgcmVxdWlyZWQgPSB1bmRlZmluZWQgLy8gdW5kZWZpbmVkfHJlcXVpcmVkXG4gICAgZXhwb3J0IGxldCBwYXR0ZXJuID0gdW5kZWZpbmVkIC8vIFNwZWNpZmllcyBhIHJlZ3VsYXIgZXhwcmVzc2lvbiB0aGF0IGFuIDxpbnB1dD4gZWxlbWVudCdzIHZhbHVlIGlzIGNoZWNrZWQgYWdhaW5zdCAocmVnZXhwKVxuICAgIGV4cG9ydCBsZXQgYXV0b2NvbXBsZXRlID0gdHJ1ZSAvLyBvbnxvZmZcbiAgICBleHBvcnQgbGV0IGF1dG9zZWxlY3QgPSBmYWxzZVxuICAgIGV4cG9ydCBsZXQgYXJpYUxhYmVsID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBwbGFjZWhvbGRlciA9IHVuZGVmaW5lZFxuXG4gICAgbGV0IGlkUHJvcCA9IGlkIHx8IG5hbWVcbiAgICBsZXQgdHlwZVByb3AgPSB0eXBlID09PSAnbnVtYmVyJyA/ICd0ZXh0JyA6IHR5cGVcbiAgICBsZXQgdGl0bGVQcm9wID0gdGl0bGUgfHwgYXJpYUxhYmVsIHx8IHBsYWNlaG9sZGVyXG4gICAgbGV0IGFyaWFMYWJlbFByb3AgPSBhcmlhTGFiZWwgfHwgdGl0bGUgfHwgcGxhY2Vob2xkZXJcbiAgICBsZXQgYXV0b2NvbXBsZXRlUHJvcCA9IGF1dG9jb21wbGV0ZSA/ICdvbicgOiAnb2ZmJ1xuICAgIGxldCBzdHlsZVByb3AgPSB0b0NTU1N0cmluZyh7IC4uLnN0eWxlLCB0ZXh0QWxpZ246IGFsaWduIH0pXG4gICAgbGV0IHBhdHRlcm5Qcm9wID0gdHlwZSA9PT0gJ251bWJlcicgJiYgIXBhdHRlcm4gPyAnWzAtOV0qJyA6IHBhdHRlcm5cblxuICAgICQ6IGNsYXNzUHJvcCA9IGNsYXNzbmFtZXMoJ2lucCcsICQkcHJvcHMuY2xhc3MsIHsgZGlzYWJsZWQsIHJlYWRvbmx5LCByZXF1aXJlZCwgaW52YWxpZCB9KVxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb24gRW1pdCBjbGljayBhbmQgc2VsZWN0IGNvbnRlbnQgd2hlbiBcImF1dG9zZWxlY3RcIiBpcyBlbmFibGVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtNb3VzZUV2ZW50fSBlIC0gTmF0aXZlIG1vdXNlIGV2ZW50LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIG9uQ2xpY2soZSkge1xuICAgICAgICAhZGlzYWJsZWQgJiYgZGlzcGF0Y2goXCJjbGlja1wiLCBlKVxuICAgICAgICAhZGlzYWJsZWQgJiYgYXV0b3NlbGVjdCAmJiBlLnRhcmdldC5zZWxlY3QoKVxuICAgIH1cbjwvc2NyaXB0PlxuXG57I2lmIHJvd3N9XG4gICAgPHRleHRhcmVhXG4gICAgICAgICAgICB7bWlufVxuICAgICAgICAgICAge21heH1cbiAgICAgICAgICAgIHtyb3dzfVxuICAgICAgICAgICAge25hbWV9XG4gICAgICAgICAgICB7Zm9ybX1cbiAgICAgICAgICAgIHthbGlnbn1cbiAgICAgICAgICAgIHtyZWFkb25seX1cbiAgICAgICAgICAgIHtkaXNhYmxlZH1cbiAgICAgICAgICAgIHtyZXF1aXJlZH1cbiAgICAgICAgICAgIHttYXhsZW5ndGh9XG4gICAgICAgICAgICB7cGxhY2Vob2xkZXJ9XG4gICAgICAgICAgICBpZD17aWRQcm9wfVxuICAgICAgICAgICAgY2xhc3M9e2NsYXNzUHJvcH1cbiAgICAgICAgICAgIHRpdGxlPXt0aXRsZVByb3B9XG4gICAgICAgICAgICBzdHlsZT17c3R5bGVQcm9wfVxuICAgICAgICAgICAgcGF0dGVybj17cGF0dGVyblByb3B9XG4gICAgICAgICAgICBhcmlhLWxhYmVsPXthcmlhTGFiZWxQcm9wfVxuICAgICAgICAgICAgYXV0b2NvbXBsZXRlPXthdXRvY29tcGxldGVQcm9wfVxuICAgICAgICAgICAgey4uLnsgdHlwZTogdHlwZVByb3AgfX1cbiAgICAgICAgICAgIGJpbmQ6dmFsdWVcbiAgICAgICAgICAgIG9uOmJsdXI9J3tlID0+ICFkaXNhYmxlZCAmJiBkaXNwYXRjaChcImJsdXJcIiwgZSl9J1xuICAgICAgICAgICAgb246Zm9jdXM9J3tlID0+ICFkaXNhYmxlZCAmJiBkaXNwYXRjaChcImZvY3VzXCIsIGUpfSdcbiAgICAgICAgICAgIG9uOmNsaWNrPSd7b25DbGlja30nXG4gICAgPjwvdGV4dGFyZWE+XG57OmVsc2V9XG4gICAgPGlucHV0XG4gICAgICAgICAgICB7bWlufVxuICAgICAgICAgICAge21heH1cbiAgICAgICAgICAgIHtuYW1lfVxuICAgICAgICAgICAge2xpc3R9XG4gICAgICAgICAgICB7Zm9ybX1cbiAgICAgICAgICAgIHthbGlnbn1cbiAgICAgICAgICAgIHtyZWFkb25seX1cbiAgICAgICAgICAgIHtkaXNhYmxlZH1cbiAgICAgICAgICAgIHtyZXF1aXJlZH1cbiAgICAgICAgICAgIHttYXhsZW5ndGh9XG4gICAgICAgICAgICB7cGxhY2Vob2xkZXJ9XG4gICAgICAgICAgICBpZD17aWRQcm9wfVxuICAgICAgICAgICAgY2xhc3M9e2NsYXNzUHJvcH1cbiAgICAgICAgICAgIHRpdGxlPXt0aXRsZVByb3B9XG4gICAgICAgICAgICBzdHlsZT17c3R5bGVQcm9wfVxuICAgICAgICAgICAgcGF0dGVybj17cGF0dGVyblByb3B9XG4gICAgICAgICAgICBhcmlhLWxhYmVsPXthcmlhTGFiZWxQcm9wfVxuICAgICAgICAgICAgYXV0b2NvbXBsZXRlPXthdXRvY29tcGxldGVQcm9wfVxuICAgICAgICAgICAgey4uLnsgdHlwZTogdHlwZVByb3AgfX1cbiAgICAgICAgICAgIGJpbmQ6dmFsdWVcbiAgICAgICAgICAgIG9uOmJsdXI9J3tlID0+ICFkaXNhYmxlZCAmJiBkaXNwYXRjaChcImJsdXJcIiwgZSl9J1xuICAgICAgICAgICAgb246Zm9jdXM9J3tlID0+ICFkaXNhYmxlZCAmJiBkaXNwYXRjaChcImZvY3VzXCIsIGUpfSdcbiAgICAgICAgICAgIG9uOmNsaWNrPSd7b25DbGlja30nXG4gICAgLz5cbnsvaWZ9XG5cbjxzdHlsZT5cbiAgICAuaW5wIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGZsZXg6IDEgMSAwO1xuICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7XG4gICAgICAgIG1pbi13aWR0aDogdmFyKC0tbWluLWludGVyYWN0aXZlLXNpemUpO1xuICAgICAgICBtaW4taGVpZ2h0OiB2YXIoLS1taW4taW50ZXJhY3RpdmUtc2l6ZSk7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEodmFyKC0tY29sb3ItYmxhY2spLCAuMjUpO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKHZhcigtLXRoZW1lLWJnLWNvbG9yKSk7XG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IHZhcigtLXNoYWRvdy1wcmltYXJ5KSwgdmFyKC0tc2hhZG93LXNlY29uZGFyeS1pbnNldCk7XG4gICAgfVxuXG4gICAgLmlucDpmb2N1cyB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogcmdiKHZhcigtLWNvbG9yLXN1Y2Nlc3MpKTtcbiAgICB9XG5cbiAgICAuaW5wOmludmFsaWQsIC5pbnAuaW52YWxpZCB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogcmdiKHZhcigtLWNvbG9yLWRhbmdlcikpO1xuICAgIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IGNsYXNzbmFtZXMgfSBmcm9tICcuLi91dGlscydcbiAgICBpbXBvcnQgUGljdHVyZSBmcm9tICcuL1BpY3R1cmUuc3ZlbHRlJ1xuXG4gICAgZXhwb3J0IGxldCBzcmNcbiAgICBleHBvcnQgbGV0IGFsdFxuICAgIGV4cG9ydCBsZXQgc2l6ZSA9ICdtZWRpdW0nIC8vIHNtYWxsfG1lZGl1bXxiaWdcblxuICAgICQ6IGNsYXNzUHJvcCA9IGNsYXNzbmFtZXMoJ2F2YScsIHNpemUsICQkcHJvcHMuY2xhc3MpXG48L3NjcmlwdD5cblxuPGRpdiBjbGFzcz17Y2xhc3NQcm9wfT5cbiAgICA8UGljdHVyZSB7c3JjfSBhbHQ9e2BQaWN0dXJlOiAke2FsdH1gfS8+XG48L2Rpdj5cblxuPHN0eWxlPlxuICAgIC5hdmEge1xuICAgICAgICBmbGV4OiBub25lO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1wcmltYXJ5KTtcbiAgICB9XG5cbiAgICAuc21hbGwge1xuICAgICAgICB3aWR0aDogMjVweDtcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgIH1cbiAgICAubWVkaXVtIHtcbiAgICAgICAgd2lkdGg6IDM1cHg7XG4gICAgICAgIGhlaWdodDogMzVweDtcbiAgICB9XG4gICAgLmJpZyB7XG4gICAgICAgIHdpZHRoOiA0NXB4O1xuICAgICAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgfVxuPC9zdHlsZT5cbiIsIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyLCBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJ1xuICAgIGltcG9ydCB7IGNsYXNzbmFtZXMgfSBmcm9tICcuLi91dGlscydcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKClcblxuICAgIGV4cG9ydCBsZXQgaXMgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IGlkID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBocmVmID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBhdXRvID0gZmFsc2VcbiAgICBleHBvcnQgbGV0IHR5cGUgPSAnYnV0dG9uJ1xuICAgIGV4cG9ydCBsZXQgc2l6ZSA9ICdtZWRpdW0nXG4gICAgZXhwb3J0IGxldCB0aXRsZSA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgaHRtbEZvciA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgZGlzYWJsZWQgPSBmYWxzZVxuICAgIGV4cG9ydCBsZXQgYXJpYUxhYmVsID0gdW5kZWZpbmVkXG5cbiAgICBsZXQgdGl0bGVQcm9wID0gdGl0bGUgfHwgYXJpYUxhYmVsXG4gICAgbGV0IGFyaWFMYWJlbFByb3AgPSBhcmlhTGFiZWwgfHwgdGl0bGVcblxuICAgICQ6IGNsYXNzUHJvcCA9IGNsYXNzbmFtZXMoJ2J0bicsIGlzLCBzaXplLCAkJHByb3BzLmNsYXNzLCB7IGF1dG8sIGRpc2FibGVkIH0pXG5cbiAgICBmdW5jdGlvbiBvbkxhYmVsQ2xpY2soZSkge1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChodG1sRm9yKS5jbGljaygpXG4gICAgICAgICFkaXNhYmxlZCAmJiBkaXNwYXRjaCgnY2xpY2snLCBlKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIG9uQ2xpY2soZSkge1xuICAgICAgICAhZGlzYWJsZWQgJiYgZGlzcGF0Y2goJ2NsaWNrJywgZSlcbiAgICB9XG48L3NjcmlwdD5cblxueyNpZiBocmVmfVxuICAgIDxhXG4gICAgICAgICAgICB7aWR9XG4gICAgICAgICAgICB7aHJlZn1cbiAgICAgICAgICAgIHRpdGxlPXt0aXRsZVByb3B9XG4gICAgICAgICAgICBjbGFzcz17Y2xhc3NQcm9wfVxuICAgICAgICAgICAgYXJpYS1sYWJlbD17YXJpYUxhYmVsUHJvcH1cbiAgICAgICAgICAgIG9uOmNsaWNrPXtvbkNsaWNrfVxuICAgID5cbiAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgIDwvYT5cbns6ZWxzZSBpZiBodG1sRm9yfVxuICAgIDxsYWJlbFxuICAgICAgICAgICAge2lkfVxuICAgICAgICAgICAge2Rpc2FibGVkfVxuICAgICAgICAgICAgZm9yPXtodG1sRm9yfVxuICAgICAgICAgICAgdGl0bGU9e3RpdGxlUHJvcH1cbiAgICAgICAgICAgIGNsYXNzPXtjbGFzc1Byb3B9XG4gICAgICAgICAgICBhcmlhLWxhYmVsPXthcmlhTGFiZWxQcm9wfVxuICAgICAgICAgICAgb246Y2xpY2s9e29uTGFiZWxDbGlja31cbiAgICA+XG4gICAgICAgIDxzbG90Pjwvc2xvdD5cbiAgICA8L2xhYmVsPlxuezplbHNlfVxuICAgIDxidXR0b25cbiAgICAgICAgICAgIHtpZH1cbiAgICAgICAgICAgIHt0eXBlfVxuICAgICAgICAgICAge2Rpc2FibGVkfVxuICAgICAgICAgICAgdGl0bGU9e3RpdGxlUHJvcH1cbiAgICAgICAgICAgIGNsYXNzPXtjbGFzc1Byb3B9XG4gICAgICAgICAgICBhcmlhLWxhYmVsPXthcmlhTGFiZWxQcm9wfVxuICAgICAgICAgICAgb246Y2xpY2s9e29uQ2xpY2t9XG4gICAgPlxuICAgICAgICA8c2xvdD48L3Nsb3Q+XG4gICAgPC9idXR0b24+XG57L2lmfVxuXG48c3R5bGU+XG4gICAgLmJ0bjpub3QoLmF1dG8pIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgOmdsb2JhbCguYnRuKSB7XG4gICAgICAgIGZsZXg6IG5vbmU7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgcGFkZGluZzogNXB4IDE1cHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDNweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzKTtcbiAgICAgICAgY29sb3I6IHJnYmEodmFyKC0tdGhlbWUtZm9udC1jb2xvcikpO1xuICAgICAgICB0ZXh0LXNoYWRvdzogMXB4IDFweCByZ2JhKHZhcigtLWNvbG9yLWJsYWNrKSwgLjMpO1xuICAgIH1cblxuICAgIDpnbG9iYWwoLmJ0bi5zbWFsbCkge1xuICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgIG1pbi13aWR0aDogY2FsYyh2YXIoLS1taW4taW50ZXJhY3RpdmUtc2l6ZSkgLyAxLjUpO1xuICAgICAgICBtaW4taGVpZ2h0OiBjYWxjKHZhcigtLW1pbi1pbnRlcmFjdGl2ZS1zaXplKSAvIDEuNSk7XG4gICAgfVxuXG4gICAgOmdsb2JhbCguYnRuLm1lZGl1bSkge1xuICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICAgICAgbWluLXdpZHRoOiB2YXIoLS1taW4taW50ZXJhY3RpdmUtc2l6ZSk7XG4gICAgICAgIG1pbi1oZWlnaHQ6IHZhcigtLW1pbi1pbnRlcmFjdGl2ZS1zaXplKTtcbiAgICB9XG5cbiAgICA6Z2xvYmFsKC5idG4uYmlnKSB7XG4gICAgICAgIHBhZGRpbmc6IDVweCAxNXB4O1xuICAgICAgICBtaW4td2lkdGg6IGNhbGModmFyKC0tbWluLWludGVyYWN0aXZlLXNpemUpICogMS41KTtcbiAgICAgICAgbWluLWhlaWdodDogY2FsYyh2YXIoLS1taW4taW50ZXJhY3RpdmUtc2l6ZSkgKiAxLjUpO1xuICAgIH1cblxuICAgIDpnbG9iYWwoLmJ0bjpmb2N1cykge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKHZhcigtLWNvbG9yLWJsYWNrKSwgMC4xKTtcbiAgICB9XG5cbiAgICA6Z2xvYmFsKC5idG46aG92ZXIpIHtcbiAgICAgICAgYm94LXNoYWRvdzogMCAycHggcmdiYSh2YXIoLS1jb2xvci1ibGFjayksIDAuMik7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEodmFyKC0tY29sb3ItYmxhY2spLCAwLjEpO1xuICAgIH1cblxuICAgIDpnbG9iYWwoLmJ0bjphY3RpdmUpIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMXB4IHJnYmEodmFyKC0tY29sb3ItYmxhY2spLCAwLjIpO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKHZhcigtLWNvbG9yLWJsYWNrKSwgMC4xKTtcbiAgICB9XG5cbiAgICAvKiBTdWNjZXNzICovXG5cbiAgICAuYnRuLnN1Y2Nlc3Mge1xuICAgICAgICBjb2xvcjogcmdiYSh2YXIoLS1jb2xvci1mb250LWxpZ2h0KSk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEodmFyKC0tY29sb3Itc3VjY2VzcykpO1xuICAgICAgICBib3gtc2hhZG93OiAwIDJweCByZ2JhKHZhcigtLWNvbG9yLXN1Y2Nlc3MtZGFyaykpLCB2YXIoLS1zaGFkb3ctc2Vjb25kYXJ5KSwgdmFyKC0tc2hhZG93LXByaW1hcnkpO1xuICAgIH1cblxuICAgIC5idG4uc3VjY2Vzczpmb2N1cyB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEodmFyKC0tY29sb3Itc3VjY2VzcyksIC44NSk7XG4gICAgfVxuXG4gICAgLmJ0bi5zdWNjZXNzOmhvdmVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMnB4IHJnYmEodmFyKC0tY29sb3Itc3VjY2Vzcy1kYXJrKSksIHZhcigtLXNoYWRvdy1zZWNvbmRhcnkpLCB2YXIoLS1zaGFkb3ctcHJpbWFyeSk7XG4gICAgfVxuXG4gICAgLmJ0bi5zdWNjZXNzOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpO1xuICAgICAgICBib3gtc2hhZG93OiAwIDFweCByZ2JhKHZhcigtLWNvbG9yLXN1Y2Nlc3MtZGFyaykpLCB2YXIoLS1zaGFkb3ctc2Vjb25kYXJ5KTtcbiAgICB9XG5cbiAgICAvKiBXYXJuaW5nICovXG5cbiAgICAuYnRuLndhcm5pbmcge1xuICAgICAgICBjb2xvcjogcmdiYSh2YXIoLS1jb2xvci1mb250LWxpZ2h0KSk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEodmFyKC0tY29sb3Itd2FybmluZykpO1xuICAgICAgICBib3gtc2hhZG93OiAwIDJweCByZ2JhKHZhcigtLWNvbG9yLXdhcm5pbmctZGFyaykpLCB2YXIoLS1zaGFkb3ctc2Vjb25kYXJ5KSwgdmFyKC0tc2hhZG93LXByaW1hcnkpO1xuICAgIH1cblxuICAgIC5idG4ud2FybmluZzpmb2N1cyB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEodmFyKC0tY29sb3Itd2FybmluZyksIC44NSk7XG4gICAgfVxuXG4gICAgLmJ0bi53YXJuaW5nOmhvdmVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMnB4IHJnYmEodmFyKC0tY29sb3Itd2FybmluZy1kYXJrKSksIHZhcigtLXNoYWRvdy1zZWNvbmRhcnkpLCB2YXIoLS1zaGFkb3ctcHJpbWFyeSk7XG4gICAgfVxuXG4gICAgLmJ0bi53YXJuaW5nOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpO1xuICAgICAgICBib3gtc2hhZG93OiAwIDFweCByZ2JhKHZhcigtLWNvbG9yLXdhcm5pbmctZGFyaykpLCB2YXIoLS1zaGFkb3ctc2Vjb25kYXJ5KTtcbiAgICB9XG5cbiAgICAvKiBEYW5nZXIgKi9cblxuICAgIC5idG4uZGFuZ2VyIHtcbiAgICAgICAgY29sb3I6IHJnYmEodmFyKC0tY29sb3ItZm9udC1saWdodCkpO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKHZhcigtLWNvbG9yLWRhbmdlcikpO1xuICAgICAgICBib3gtc2hhZG93OiAwIDJweCByZ2JhKHZhcigtLWNvbG9yLWRhbmdlci1kYXJrKSksIHZhcigtLXNoYWRvdy1zZWNvbmRhcnkpLCB2YXIoLS1zaGFkb3ctcHJpbWFyeSk7XG4gICAgfVxuXG4gICAgLmJ0bi5kYW5nZXI6Zm9jdXMge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKHZhcigtLWNvbG9yLWRhbmdlciksIC44NSk7XG4gICAgfVxuXG4gICAgLmJ0bi5kYW5nZXI6aG92ZXIge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXB4KTtcbiAgICAgICAgYm94LXNoYWRvdzogMCAycHggcmdiYSh2YXIoLS1jb2xvci1kYW5nZXItZGFyaykpLCB2YXIoLS1zaGFkb3ctc2Vjb25kYXJ5KSwgdmFyKC0tc2hhZG93LXByaW1hcnkpO1xuICAgIH1cblxuICAgIC5idG4uZGFuZ2VyOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpO1xuICAgICAgICBib3gtc2hhZG93OiAwIDFweCByZ2JhKHZhcigtLWNvbG9yLWRhbmdlci1kYXJrKSksIHZhcigtLXNoYWRvdy1zZWNvbmRhcnkpO1xuICAgIH1cblxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAgICAgOmdsb2JhbCguYnRuKSB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgICAgIH1cblxuICAgICAgICAuYnRuLnN1Y2Nlc3Mge1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMCAzcHggcmdiYSh2YXIoLS1jb2xvci1zdWNjZXNzLWRhcmspKSwgdmFyKC0tc2hhZG93LXNlY29uZGFyeSksIHZhcigtLXNoYWRvdy1wcmltYXJ5KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5idG4ud2FybmluZyB7XG4gICAgICAgICAgICBib3gtc2hhZG93OiAwIDNweCByZ2JhKHZhcigtLWNvbG9yLXdhcm5pbmctZGFyaykpLCB2YXIoLS1zaGFkb3ctc2Vjb25kYXJ5KSwgdmFyKC0tc2hhZG93LXByaW1hcnkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLmJ0bi5kYW5nZXIge1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMCAzcHggcmdiYSh2YXIoLS1jb2xvci1kYW5nZXItZGFyaykpLCB2YXIoLS1zaGFkb3ctc2Vjb25kYXJ5KSwgdmFyKC0tc2hhZG93LXByaW1hcnkpO1xuICAgICAgICB9XG4gICAgfVxuPC9zdHlsZT5cbiIsIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJ1xuICAgIGltcG9ydCB7IGNsYXNzbmFtZXMgfSBmcm9tICcuLi91dGlscydcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKClcblxuICAgIGV4cG9ydCBsZXQgc3JjXG4gICAgZXhwb3J0IGxldCBhbHRcbiAgICBleHBvcnQgbGV0IGlkID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCB3aWR0aCA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgaGVpZ2h0ID0gdW5kZWZpbmVkXG5cbiAgICBsZXQgbG9hZGluZyA9IHRydWVcbiAgICBsZXQgaXNFcnJvciA9IGZhbHNlXG5cbiAgICAkOiB3cmFwQ2xhc3NQcm9wID0gY2xhc3NuYW1lcygncGljdHVyZScsICQkcHJvcHMuY2xhc3MsIHsgbG9hZGluZywgaXNFcnJvciB9KVxuXG4gICAgZnVuY3Rpb24gb25Mb2FkKGUpIHtcbiAgICAgICAgbG9hZGluZyA9IGZhbHNlXG4gICAgICAgIGRpc3BhdGNoKCdsb2FkJywgZSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvbkVycm9yKGUpIHtcbiAgICAgICAgbG9hZGluZyA9IGZhbHNlXG4gICAgICAgIGlzRXJyb3IgPSB0cnVlXG4gICAgICAgIGRpc3BhdGNoKCdlcnJvcicsIGUpXG4gICAgfVxuPC9zY3JpcHQ+XG5cbjxmaWd1cmUgY2xhc3M9e3dyYXBDbGFzc1Byb3B9PlxuICAgIDxpbWdcbiAgICAgICAgICAgIHtpZH1cbiAgICAgICAgICAgIHthbHR9XG4gICAgICAgICAgICB7c3JjfVxuICAgICAgICAgICAge3dpZHRofVxuICAgICAgICAgICAge2hlaWdodH1cbiAgICAgICAgICAgIGNsYXNzPVwicGljXCJcbiAgICAgICAgICAgIG9uOmxvYWQ9e29uTG9hZH1cbiAgICAgICAgICAgIG9uOmVycm9yPXtvbkVycm9yfVxuICAgIC8+XG5cbiAgICA8ZmlnY2FwdGlvbj5cbiAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgIDwvZmlnY2FwdGlvbj5cbjwvZmlndXJlPlxuXG48c3R5bGU+XG4gICAgLnBpY3R1cmUge1xuICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzdHJldGNoO1xuICAgIH1cblxuICAgIC5waWN0dXJlIC5waWMge1xuICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgZWFzZS1pbjtcbiAgICB9XG5cbiAgICAucGljdHVyZS5sb2FkaW5nIC5waWMge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IHRvQ1NTU3RyaW5nLCBjbGFzc25hbWVzIH0gZnJvbSAnLi4vdXRpbHMnXG5cbiAgICBleHBvcnQgbGV0IGlzID0gJ2luZm8nXG4gICAgZXhwb3J0IGxldCBzaXplID0gMFxuICAgIGV4cG9ydCBsZXQgd2lkdGggPSAyXG5cbiAgICAkOiBjbGFzc1Byb3AgPSBjbGFzc25hbWVzKCdkaXZpZGVyJywgaXMsICQkcHJvcHMuY2xhc3MpXG4gICAgJDogc3R5bGVQcm9wID0gdG9DU1NTdHJpbmcoeyBwYWRkaW5nOiBgJHtzaXplIC8gMn1weCAwYCwgaGVpZ2h0OiBgJHt3aWR0aH1weGAgfSlcbjwvc2NyaXB0PlxuXG48aHIgY2xhc3M9e2NsYXNzUHJvcH0gc3R5bGU9e3N0eWxlUHJvcH0+XG5cbjxzdHlsZT5cbiAgICAuZGl2aWRlciB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICAgICAgYmFja2dyb3VuZC1jbGlwOiBjb250ZW50LWJveDtcbiAgICB9XG5cbiAgICAuaW5mbyB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYih2YXIoLS1jb2xvci1pbmZvKSk7XG4gICAgfVxuXG4gICAgLnN1Y2Nlc3Mge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IodmFyKC0tY29sb3Itc3VjY2VzcykpO1xuICAgIH1cblxuICAgIC53YXJuaW5nIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKHZhcigtLWNvbG9yLXdhcm5pbmcpKTtcbiAgICB9XG5cbiAgICAuZGFuZ2VyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKHZhcigtLWNvbG9yLWRhbmdlcikpO1xuICAgIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCBQaWN0dXJlIGZyb20gJy4vUGljdHVyZS5zdmVsdGUnXG5cbiAgICBjb25zdCBjYXJkcyA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgc3JjOiAnaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAvMzAvdGVjaCcsXG4gICAgICAgICAgICB0aXRsZTogJ1RoZSBtYWluIHRpdGxlIGFuZCBzaG9ydCBkZXNjcmlwdGlvbi4nLFxuICAgICAgICAgICAgcGVyY2VudDogNDUsXG4gICAgICAgICAgICBvcmdIZWFkOiAnVGluYSBLYW5kZWxha2knLFxuICAgICAgICAgICAgb3JnSGVhZFNyYzogJ2h0dHBzOi8vcGxhY2VpbWcuY29tLzMwLzMwL3Blb3BsZScsXG4gICAgICAgICAgICBvcmdhbml6YXRpb246ICdPUkcgY2hhcml0eSBvZiBDaGFyaXRpZnkuJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgc3JjOiAnaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAvMzAvYXJjaCcsXG4gICAgICAgICAgICB0aXRsZTogJ1NlY29uZCBiaWdnZXIgbWFqb3IgY2FyZCB0aXRsZSBsaW5lIHdpdGggYSBiaXQgbG9uZ2VyIGRlc2NyaXB0aW9uLicsXG4gICAgICAgICAgICBwZXJjZW50OiA2NSxcbiAgICAgICAgICAgIG9yZ0hlYWQ6ICdUaW5hIEthbmRlbGFraScsXG4gICAgICAgICAgICBvcmdIZWFkU3JjOiAnaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAvMzAvcGVvcGxlJyxcbiAgICAgICAgICAgIG9yZ2FuaXphdGlvbjogJ09SRyBjaGFyaXR5IG9mIENoYXJpdGlmeS4nLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBzcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMC8zMC9hbnknLFxuICAgICAgICAgICAgdGl0bGU6ICdUaGUgbWFpbiB0aXRsZSBhbmQgc2hvcnQgZGVzY3JpcHRpb24uJyxcbiAgICAgICAgICAgIHBlcmNlbnQ6IDUsXG4gICAgICAgICAgICBvcmdIZWFkOiAnVGluYXJhbWlzaW11c3MgS2FuZGVsYWtpbnVza2FzJyxcbiAgICAgICAgICAgIG9yZ0hlYWRTcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMC8zMC9wZW9wbGUnLFxuICAgICAgICAgICAgb3JnYW5pemF0aW9uOiAnT1JHIGNoYXJpdHkgb2YgQ2hhcml0aWZ5LicsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHNyYzogJ2h0dHBzOi8vcGxhY2VpbWcuY29tLzMwLzMwL25hdHVyZScsXG4gICAgICAgICAgICB0aXRsZTogJ1RoZSBtYWluIHRpdGxlIGFuZCBzaG9ydCBkZXNjcmlwdGlvbi4nLFxuICAgICAgICAgICAgcGVyY2VudDogOTUsXG4gICAgICAgICAgICBvcmdIZWFkOiAnVGluYSBLYW5kZWxha2knLFxuICAgICAgICAgICAgb3JnSGVhZFNyYzogJ2h0dHBzOi8vcGxhY2VpbWcuY29tLzMwLzMwL3Blb3BsZScsXG4gICAgICAgICAgICBvcmdhbml6YXRpb246ICdPUkcgZ2lhbnQgY2hhcml0eSBvcmdhbml6YXRpb24gb2YgYmlnIENoYXJpdGlmeSBjb21wYW55LicsXG4gICAgICAgIH0sXG4gICAgXVxuXG4gICAgY29uc3QgaW1hZ2VzRGVmYXVsdCA9IGNhcmRzLm1hcChjYXJkID0+ICh7XG4gICAgICAgIHNyYzogW2NhcmQuc3JjLCBjYXJkLnNyYywgY2FyZC5zcmNdLFxuICAgICAgICBhbHQ6IGNhcmQudGl0bGUsXG4gICAgfSkpXG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEB0eXBlIHtudW1iZXIgfCB7XG4gICAgICogICAgIHNyYzogc3RyaW5nLFxuICAgICAqICAgICBhbHQ6IHN0cmluZyxcbiAgICAgKiAgICAgb25DbGljaz86IGZ1bmN0aW9uLFxuICAgICAqIH1bXX1cbiAgICAgKi9cbiAgICBleHBvcnQgbGV0IGl0ZW1zID0gaW1hZ2VzRGVmYXVsdFxuPC9zY3JpcHQ+XG5cbjx1bCBhcmlhLWxhYmVsPVwiY2Fyb3VzZWxcIj5cbiAgICB7I2VhY2ggaXRlbXMgYXMgaXRlbX1cbiAgICAgICAgPGxpPlxuICAgICAgICAgICAgPHNsb3Qge2l0ZW19PlxuICAgICAgICAgICAgICAgIDxQaWN0dXJlIHNyYz17aXRlbS5zcmN9IGFsdD17aXRlbS5hbHR9Lz5cbiAgICAgICAgICAgIDwvc2xvdD5cbiAgICAgICAgPC9saT5cbiAgICB7L2VhY2h9XG48L3VsPlxuXG48c3R5bGU+XG4gICAgdWwge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24tc2VsZjogc3RyZXRjaDtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3RyZXRjaDtcbiAgICAgICAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICAgICAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgICAgIGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1wcmltYXJ5KTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7XG4gICAgICAgIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbiAgICAgICAgc2Nyb2xsLXNuYXAtdHlwZTogeCBtYW5kYXRvcnk7XG4gICAgfVxuXG4gICAgbGkge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZmxleDogbm9uZTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3RyZXRjaDtcbiAgICAgICAgc2Nyb2xsLXNuYXAtYWxpZ246IGNlbnRlcjtcbiAgICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIsIG9uTW91bnQgfSBmcm9tICdzdmVsdGUnXG4gICAgaW1wb3J0IHsgY2xhc3NuYW1lcywgc2FmZUdldCB9IGZyb20gJy4uL3V0aWxzJ1xuXG4gICAgY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKVxuXG4gICAgZXhwb3J0IGxldCBpZCA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgdmFsdWUgPSAwIC8vIDAgLSAxMDBcbiAgICBleHBvcnQgbGV0IHNpemUgPSAnbWVkaXVtJ1xuICAgIGV4cG9ydCBsZXQgdGl0bGUgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IGFyaWFMYWJlbCA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgYm9yZGVyUmFkaXVzID0gdW5kZWZpbmVkXG5cbiAgICAkOiB2YWwgPSAwXG4gICAgJDogdGl0bGVQcm9wID0gdGl0bGUgfHwgYFByb2dyZXNzIC0gJHt2YWx9JWBcbiAgICAkOiBhcmlhTGFiZWxQcm9wID0gYXJpYUxhYmVsIHx8IGBQcm9ncmVzcyAtICR7dmFsfSVgXG4gICAgJDogY2xhc3NQcm9wID0gY2xhc3NuYW1lcygncHJvZ3Jlc3MnLCBzaXplLCAkJHByb3BzLmNsYXNzKVxuXG4gICAgb25Nb3VudCgoKSA9PiB7XG4gICAgICAgIC8vIE1ha2UgbG9hZGluZyBwcm9ncmVzcyBlZmZlY3Qgb24gbW91bnQgY29tcG9uZW50LlxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHZhbCA9IE51bWJlci5pc0Zpbml0ZSgrdmFsdWUpID8gTWF0aC5tYXgoMCwgTWF0aC5taW4oK3ZhbHVlLCAxMDApKSA6IDAsIDApXG4gICAgfSlcblxuICAgIGZ1bmN0aW9uIGdldEJvcmRlclJhZGl1cyhib3JkZXJzLCBkZWZhdWx0cyA9ICc5OTk5OXB4Jykge1xuICAgICAgICBjb25zdCBickRlZmF1bHQgPSBuZXcgQXJyYXkoNCkuZmlsbChkZWZhdWx0cylcbiAgICAgICAgY29uc3QgYmRzID0gc2FmZUdldCgoKSA9PiBib3JkZXJzLnNwbGl0KCcgJyksIFtdLCB0cnVlKVxuICAgICAgICBjb25zdCBydWxlID0gJ2JvcmRlci1yYWRpdXMnXG4gICAgICAgIHJldHVybiBgJHtydWxlfToke2JyRGVmYXVsdC5tYXAoKGRlZiwgaSkgPT4gYCR7YmRzW2ldIHx8IGRlZn1gKS5qb2luKCcgJyl9YFxuICAgIH1cbjwvc2NyaXB0PlxuXG5cbjxkaXZcbiAgICAgICAge2lkfVxuICAgICAgICBjbGFzcz17Y2xhc3NQcm9wfVxuICAgICAgICB0aXRsZT17dGl0bGVQcm9wfVxuICAgICAgICBhcmlhLWxhYmVsPXthcmlhTGFiZWxQcm9wfVxuICAgICAgICByb2xlPVwicHJvZ3Jlc3NiYXJcIlxuICAgICAgICBhcmlhLXZhbHVlbWluPVwiMFwiXG4gICAgICAgIGFyaWEtdmFsdWVtYXg9XCIxMDBcIlxuICAgICAgICBhcmlhLXZhbHVlbm93PXt2YWx9XG4gICAgICAgIHN0eWxlPXtgJHtnZXRCb3JkZXJSYWRpdXMoYm9yZGVyUmFkaXVzKX1gfVxuPlxuICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy1pbm5lci1mcmFtZVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3MtY29yZVwiIHN0eWxlPXtgd2lkdGg6JHt2YWx9JWB9PjwvZGl2PlxuICAgIDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAucHJvZ3Jlc3Mge1xuICAgICAgICAtLXByb2dyZXNzLWhlaWdodDogMjBweDtcbiAgICAgICAgLS1wcm9ncmVzcy1wYWRkaW5nLXBvaW50OiAzO1xuICAgIH1cblxuICAgIC5wcm9ncmVzcy5zbWFsbCB7XG4gICAgICAgIC0tcHJvZ3Jlc3MtaGVpZ2h0OiAxNXB4O1xuICAgICAgICAtLXByb2dyZXNzLXBhZGRpbmctcG9pbnQ6IDM7XG4gICAgfVxuXG4gICAgLnByb2dyZXNzLm1lZGl1bSB7XG4gICAgICAgIC0tcHJvZ3Jlc3MtaGVpZ2h0OiAyMHB4O1xuICAgICAgICAtLXByb2dyZXNzLXBhZGRpbmctcG9pbnQ6IDMuNTtcbiAgICB9XG5cbiAgICAucHJvZ3Jlc3MuYmlnIHtcbiAgICAgICAgLS1wcm9ncmVzcy1oZWlnaHQ6IDMwcHg7XG4gICAgICAgIC0tcHJvZ3Jlc3MtcGFkZGluZy1wb2ludDogNDtcbiAgICB9XG5cbiAgICAucHJvZ3Jlc3Mge1xuICAgICAgICBmbGV4OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOTk5OXB4O1xuICAgICAgICBoZWlnaHQ6IHZhcigtLXByb2dyZXNzLWhlaWdodCk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEodmFyKC0tdGhlbWUtYmctY29sb3IpKTtcbiAgICAgICAgcGFkZGluZzogY2FsYyh2YXIoLS1wcm9ncmVzcy1oZWlnaHQpIC8gdmFyKC0tcHJvZ3Jlc3MtcGFkZGluZy1wb2ludCkpO1xuICAgICAgICBib3gtc2hhZG93OiBpbnNldCB2YXIoLS1zaGFkb3ctcHJpbWFyeSksIHZhcigtLXNoYWRvdy1zZWNvbmRhcnktaW5zZXQpO1xuICAgIH1cblxuICAgIC5wcm9ncmVzcy1pbm5lci1mcmFtZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDk5OTlweDtcbiAgICB9XG5cbiAgICAucHJvZ3Jlc3MtY29yZSB7XG4gICAgICAgIGZsZXg6IG5vbmU7XG4gICAgICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG4gICAgICAgIHRyYW5zaXRpb246IDFzIGVhc2UtaW4tb3V0O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAycHg7XG4gICAgICAgIGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1wcmltYXJ5KTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEodmFyKC0tY29sb3Itc3VjY2VzcykpO1xuICAgIH1cbjwvc3R5bGU+XG4iLCI8c3R5bGU+XG4gICAgc2VjdGlvbiB7XG4gICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgYWxpZ24tc2VsZjogc3RyZXRjaDtcbiAgICB9XG48L3N0eWxlPlxuXG48c2NyaXB0PlxuICAgIGltcG9ydCB7IG9uTW91bnQsIG9uRGVzdHJveSwgc2V0Q29udGV4dCwgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJ1xuICAgIGltcG9ydCB7IGNvbnRleHRNYXBib3ggfSBmcm9tICcuL2NvbnRleHQnXG5cbiAgICBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpXG5cbiAgICBleHBvcnQgbGV0IGNlbnRlciA9IFszMS4xNjU2LCA0OC4zNzk0XVxuICAgIGV4cG9ydCBsZXQgem9vbSA9IDMuNzVcblxuICAgIGxldCBtYXBcbiAgICBsZXQgY29udGFpbmVyXG5cbiAgICBzZXRDb250ZXh0KGNvbnRleHRNYXBib3gsIHtcbiAgICAgICAgZ2V0TWFwOiAoKSA9PiBtYXAsXG4gICAgICAgIGdldE1hcGJveDogKCkgPT4gd2luZG93Lm1hcGJveGdsXG4gICAgfSlcblxuICAgIGZ1bmN0aW9uIG9uQ3JlYXRlTWFwKCkge1xuICAgICAgICBtYXAgPSBuZXcgbWFwYm94Z2wuTWFwKHtcbiAgICAgICAgICAgIHpvb20sXG4gICAgICAgICAgICBjZW50ZXIsXG4gICAgICAgICAgICBjb250YWluZXIsXG4gICAgICAgICAgICBzdHlsZTogJ21hcGJveDovL3N0eWxlcy9tYXBib3gvc3RyZWV0cy12MTEnLFxuICAgICAgICB9KVxuXG4gICAgICAgIG1hcC5vbignZHJhZ2VuZCcsICgpID0+IGRpc3BhdGNoKCdyZWNlbnRyZScsIHsgbWFwLCBjZW50ZXI6IG1hcC5nZXRDZW50ZXIoKSB9KSlcbiAgICAgICAgbWFwLm9uKCdsb2FkJywgKCkgPT4gZGlzcGF0Y2goJ3JlYWR5JywgbWFwKSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVNYXAoKSB7XG4gICAgICAgIGNvbnN0IHNjcmlwdFRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpXG4gICAgICAgIHNjcmlwdFRhZy50eXBlID0gJ3RleHQvamF2YXNjcmlwdCdcbiAgICAgICAgc2NyaXB0VGFnLnNyYyA9ICdodHRwczovL2FwaS5tYXBib3guY29tL21hcGJveC1nbC1qcy92MS43LjAvbWFwYm94LWdsLmpzJ1xuXG4gICAgICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaW5rJylcbiAgICAgICAgbGluay5yZWwgPSAnc3R5bGVzaGVldCdcbiAgICAgICAgbGluay5ocmVmID0gJ2h0dHBzOi8vYXBpLm1hcGJveC5jb20vbWFwYm94LWdsLWpzL3YxLjcuMC9tYXBib3gtZ2wuY3NzJ1xuXG4gICAgICAgIHNjcmlwdFRhZy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0b2tlbiA9ICdway5leUoxSWpvaVluVmliR2xySWl3aVlTSTZJbU5yTlhweGR6Z3hiVEF3Tm5jemJHeHdlRzB3Y1RWM2NqQWlmUS5ydDFwZUxqQ1FIWlVrck00QVd6NU13J1xuICAgICAgICAgICAgbWFwYm94Z2wuYWNjZXNzVG9rZW4gPSB0b2tlblxuXG4gICAgICAgICAgICBsaW5rLm9ubG9hZCA9IG9uQ3JlYXRlTWFwXG5cbiAgICAgICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQobGluaylcbiAgICAgICAgfVxuXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0VGFnKVxuICAgIH1cblxuICAgIG9uTW91bnQoKCkgPT4ge1xuICAgICAgICBpZiAoJ21hcGJveGdsJyBpbiB3aW5kb3cpIHtcbiAgICAgICAgICAgIG9uQ3JlYXRlTWFwKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNyZWF0ZU1hcCgpXG4gICAgICAgIH1cbiAgICB9KVxuXG4gICAgb25EZXN0cm95KCgpID0+IHtcbiAgICAgICAgbWFwICYmIG1hcC5yZW1vdmUoKVxuICAgIH0pXG48L3NjcmlwdD5cblxuPHNlY3Rpb24gYmluZDp0aGlzPXtjb250YWluZXJ9PlxuICAgIHsjaWYgbWFwfVxuICAgICAgICA8c2xvdD48L3Nsb3Q+XG4gICAgey9pZn1cbjwvc2VjdGlvbj5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQkksUUFBUSxjQUFDLENBQUMsQUFDTixJQUFJLENBQUUsSUFBSSxDQUNWLE9BQU8sQ0FBRSxDQUFDLENBQ1YsS0FBSyxDQUFFLElBQUksQ0FDWCxNQUFNLENBQUUsS0FBSyxDQUNiLE9BQU8sQ0FBRSxJQUFJLENBQ2IsUUFBUSxDQUFFLE1BQU0sQ0FDaEIsYUFBYSxDQUFFLENBQUMsQUFDcEIsQ0FBQztBQ0pELElBQUksY0FBQyxDQUFDLEFBQ0YsT0FBTyxDQUFFLElBQUksQ0FDYixhQUFhLENBQUUsS0FBSyxJQUFJLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUNoRCxVQUFVLENBQUUsSUFBSSxnQkFBZ0IsQ0FBQyxBQUNyQyxDQUFDLEFBRUQsVUFBVSxjQUFDLENBQUMsQUFDUixPQUFPLENBQUUsQ0FBQyxDQUNWLFNBQVMsQ0FBRSxDQUFDLENBQ1osT0FBTyxDQUFFLElBQUksQ0FDYixRQUFRLENBQUUsTUFBTSxDQUNoQixhQUFhLENBQUUsR0FBRyxDQUNsQixhQUFhLENBQUUsSUFBSSxlQUFlLENBQUMsQ0FDbkMsVUFBVSxDQUFFLElBQUksZ0JBQWdCLENBQUMsQUFDckMsQ0FBQyxBQUVELGFBQWEsY0FBQyxDQUFDLEFBQ1gsT0FBTyxDQUFFLElBQUksQ0FDYixXQUFXLENBQUUsUUFBUSxDQUNyQixlQUFlLENBQUUsYUFBYSxDQUM5QixPQUFPLENBQUUsSUFBSSxDQUFDLENBQUMsQUFDbkIsQ0FBQztBQ3JCRCxJQUFJLGNBQUMsQ0FBQyxBQUNGLE9BQU8sQ0FBRSxJQUFJLENBQ2IsYUFBYSxDQUFFLEtBQUssSUFBSSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FDaEQsVUFBVSxDQUFFLElBQUksZ0JBQWdCLENBQUMsQUFDckMsQ0FBQyxBQUVELFVBQVUsY0FBQyxDQUFDLEFBQ1IsT0FBTyxD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 */