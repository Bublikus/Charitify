h1.svelte-1kmv00v.svelte-1kmv00v,p.svelte-1kmv00v.svelte-1kmv00v{text-align:center;margin:0 auto}h1.svelte-1kmv00v.svelte-1kmv00v{text-transform:uppercase;margin:0 0 0.5em 0}.top-wrap.svelte-1kmv00v.svelte-1kmv00v{padding-left:5px}.top.svelte-1kmv00v.svelte-1kmv00v{display:flex}.top-pic.svelte-1kmv00v.svelte-1kmv00v{display:flex;flex-grow:1}.options.svelte-1kmv00v.svelte-1kmv00v{flex:0;display:flex;flex-direction:column;margin:-7px 0;padding:0 10px}.options.svelte-1kmv00v li.svelte-1kmv00v{flex:none;margin:7px 0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */