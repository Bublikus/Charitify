import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, r as space, e as element, q as create_component, v as claim_space, c as claim_element, a as children, u as claim_component, f as detach_dev, g as add_location, h as attr_dev, j as insert_dev, w as mount_component, n as noop, y as transition_in, z as transition_out, A as destroy_component } from './index.1a51fa42.js';
import { S as SearchLine } from './index.bc560a85.js';

/* src/routes/list.svelte generated by Svelte v3.16.7 */
const file = "src/routes/list.svelte";

function create_fragment(ctx) {
	let t0;
	let br0;
	let t1;
	let div;
	let t2;
	let br1;
	let t3;
	let br2;
	let t4;
	let br3;
	let current;
	const searchline = new SearchLine({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			br0 = element("br");
			t1 = space();
			div = element("div");
			create_component(searchline.$$.fragment);
			t2 = space();
			br1 = element("br");
			t3 = space();
			br2 = element("br");
			t4 = space();
			br3 = element("br");
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			br0 = claim_element(nodes, "BR", {});
			t1 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			claim_component(searchline.$$.fragment, div_nodes);
			div_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			br1 = claim_element(nodes, "BR", {});
			t3 = claim_space(nodes);
			br2 = claim_element(nodes, "BR", {});
			t4 = claim_space(nodes);
			br3 = claim_element(nodes, "BR", {});
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - is the application for helping those in need.";
			add_location(br0, file, 8, 0, 171);
			attr_dev(div, "class", "container");
			add_location(div, file, 10, 0, 177);
			add_location(br1, file, 14, 0, 227);
			add_location(br2, file, 15, 0, 232);
			add_location(br3, file, 16, 0, 237);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, br0, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, div, anchor);
			mount_component(searchline, div, null);
			insert_dev(target, t2, anchor);
			insert_dev(target, br1, anchor);
			insert_dev(target, t3, anchor);
			insert_dev(target, br2, anchor);
			insert_dev(target, t4, anchor);
			insert_dev(target, br3, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(searchline.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(searchline.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(br0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div);
			destroy_component(searchline);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(br1);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(br2);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(br3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

class List extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "List",
			options,
			id: create_fragment.name
		});
	}
}

export default List;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC41ZDA2OGVkMi5qcyIsInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W10sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
