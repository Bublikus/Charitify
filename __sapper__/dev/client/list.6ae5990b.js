import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, r as space, e as element, q as create_component, v as claim_space, c as claim_element, a as children, u as claim_component, f as detach_dev, g as add_location, h as attr_dev, j as insert_dev, k as append_dev, w as mount_component, n as noop, y as transition_in, z as transition_out, A as destroy_component } from './index.1a51fa42.js';
import { S as SearchLine, L as ListItems } from './index.b14c799a.js';

/* src/routes/list.svelte generated by Svelte v3.16.7 */
const file = "src/routes/list.svelte";

function create_fragment(ctx) {
	let t0;
	let div1;
	let div0;
	let br0;
	let t1;
	let t2;
	let br1;
	let t3;
	let t4;
	let br2;
	let t5;
	let br3;
	let current;
	const searchline = new SearchLine({ $$inline: true });
	const listitems = new ListItems({ props: { amount: "20" }, $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			div1 = element("div");
			div0 = element("div");
			br0 = element("br");
			t1 = space();
			create_component(searchline.$$.fragment);
			t2 = space();
			br1 = element("br");
			t3 = space();
			create_component(listitems.$$.fragment);
			t4 = space();
			br2 = element("br");
			t5 = space();
			br3 = element("br");
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			br0 = claim_element(div0_nodes, "BR", {});
			t1 = claim_space(div0_nodes);
			claim_component(searchline.$$.fragment, div0_nodes);
			t2 = claim_space(div0_nodes);
			br1 = claim_element(div0_nodes, "BR", {});
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			claim_component(listitems.$$.fragment, div1_nodes);
			t4 = claim_space(div1_nodes);
			br2 = claim_element(div1_nodes, "BR", {});
			t5 = claim_space(div1_nodes);
			br3 = claim_element(div1_nodes, "BR", {});
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - is the application for helping those in need.";
			add_location(br0, file, 12, 8, 250);
			add_location(br1, file, 16, 8, 287);
			attr_dev(div0, "class", "search theme-bg svelte-11930g5");
			add_location(div0, file, 11, 4, 212);
			add_location(br2, file, 21, 4, 338);
			add_location(br3, file, 22, 4, 347);
			attr_dev(div1, "class", "container");
			add_location(div1, file, 9, 0, 183);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, br0);
			append_dev(div0, t1);
			mount_component(searchline, div0, null);
			append_dev(div0, t2);
			append_dev(div0, br1);
			append_dev(div1, t3);
			mount_component(listitems, div1, null);
			append_dev(div1, t4);
			append_dev(div1, br2);
			append_dev(div1, t5);
			append_dev(div1, br3);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(searchline.$$.fragment, local);
			transition_in(listitems.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(searchline.$$.fragment, local);
			transition_out(listitems.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div1);
			destroy_component(searchline);
			destroy_component(listitems);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

class List extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "List",
			options,
			id: create_fragment.name
		});
	}
}

export default List;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC42YWU1OTkwYi5qcyIsInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W10sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
