svg.svelte-1y5h9x9.svelte-1y5h9x9{display:inherit}svg.svelte-1y5h9x9.svelte-1y5h9x9,svg.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgba(var(--theme-svg-fill));stroke:rgba(var(--theme-svg-fill))}.small.svelte-1y5h9x9.svelte-1y5h9x9{width:15px;height:15px}.medium.svelte-1y5h9x9.svelte-1y5h9x9{width:22px;height:22px}.big.svelte-1y5h9x9.svelte-1y5h9x9{width:35px;height:35px}.primary.svelte-1y5h9x9.svelte-1y5h9x9,.primary.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-success));stroke:rgb(var(--color-success))}.warning.svelte-1y5h9x9.svelte-1y5h9x9,.warning.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-warning));stroke:rgb(var(--color-warning))}.danger.svelte-1y5h9x9.svelte-1y5h9x9,.danger.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-danger));stroke:rgb(var(--color-danger))}.info.svelte-1y5h9x9.svelte-1y5h9x9,.info.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-info));stroke:rgb(var(--color-info))}.light.svelte-1y5h9x9.svelte-1y5h9x9,.light.svelte-1y5h9x9 .svelte-1y5h9x9{fill:var(--color-light-1);stroke:var(--color-light-1)}.dark.svelte-1y5h9x9.svelte-1y5h9x9,.dark.svelte-1y5h9x9 .svelte-1y5h9x9{fill:var(--color-dark-1);stroke:var(--color-dark-1)}
.rate.svelte-9gtglw.svelte-9gtglw{display:inline-flex;margin:calc(var(--screen-padding) * -1 / 3)}li.svelte-9gtglw.svelte-9gtglw{padding:calc(var(--screen-padding) / 3)}.rate.svelte-9gtglw li.svelte-9gtglw{-webkit-filter:drop-shadow(-1px 2px 1px rgba(var(--color-black), .25));filter:drop-shadow(-1px 2px 1px rgba(var(--color-black), .25))}
.inp.svelte-1vg8tdg{width:100%;flex:1 1 0;color:inherit;border-radius:var(--border-radius);min-width:var(--min-interactive-size);min-height:var(--min-interactive-size);border:1px solid rgba(var(--color-black), .25);background-color:rgba(var(--theme-bg-color));box-shadow:inset var(--shadow-primary), var(--shadow-secondary-inset)}.inp.svelte-1vg8tdg:focus{border-color:rgb(var(--color-success))}.inp.svelte-1vg8tdg:invalid,.inp.invalid.svelte-1vg8tdg{border-color:rgb(var(--color-danger))}
.picture.svelte-1rkw8xk.svelte-1rkw8xk{flex-grow:1;align-self:stretch;display:inline-flex;flex-direction:column;align-items:stretch;justify-content:stretch}.picture.svelte-1rkw8xk .pic.svelte-1rkw8xk{flex-grow:1;align-self:stretch;object-fit:cover;object-position:center;transition:opacity .3s ease-in}.picture.loading.svelte-1rkw8xk .pic.svelte-1rkw8xk{opacity:0}
.ava.svelte-ow3g6r{flex:none;display:flex;border-radius:50%;overflow:hidden;box-shadow:var(--shadow-primary)}.small.svelte-ow3g6r{width:25px;height:25px}.medium.svelte-ow3g6r{width:35px;height:35px}.big.svelte-ow3g6r{width:45px;height:45px}
.btn.svelte-jhaexl:not(.auto){width:100%}.btn{flex:none;cursor:pointer;max-width:100%;user-select:none;padding:5px 15px;margin-bottom:3px;font-weight:bold;text-align:center;align-items:center;display:inline-flex;justify-content:center;border-radius:var(--border-radius);color:rgba(var(--theme-font-color));text-shadow:1px 1px rgba(var(--color-black), .3)}.btn.small{padding:5px;min-width:calc(var(--min-interactive-size) / 1.5);min-height:calc(var(--min-interactive-size) / 1.5)}.btn.medium{padding:5px 10px;min-width:var(--min-interactive-size);min-height:var(--min-interactive-size)}.btn.big{padding:5px 15px;min-width:calc(var(--min-interactive-size) * 1.5);min-height:calc(var(--min-interactive-size) * 1.5)}.btn:focus{background-color:rgba(var(--color-black), 0.1)}.btn:hover{box-shadow:0 2px rgba(var(--color-black), 0.2);background-color:rgba(var(--color-black), 0.1)}.btn:active{transform:translateY(1px);box-shadow:0 1px rgba(var(--color-black), 0.2);background-color:rgba(var(--color-black), 0.1)}.btn.success.svelte-jhaexl{color:rgba(var(--color-font-light));background-color:rgba(var(--color-success));box-shadow:0 2px rgba(var(--color-success-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.success.svelte-jhaexl:focus{background-color:rgba(var(--color-success), .85)}.btn.success.svelte-jhaexl:hover{transform:translateY(1px);box-shadow:0 2px rgba(var(--color-success-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.success.svelte-jhaexl:active{transform:translateY(2px);box-shadow:0 1px rgba(var(--color-success-dark)), var(--shadow-secondary)}.btn.warning.svelte-jhaexl{color:rgba(var(--color-font-light));background-color:rgba(var(--color-warning));box-shadow:0 2px rgba(var(--color-warning-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.warning.svelte-jhaexl:focus{background-color:rgba(var(--color-warning), .85)}.btn.warning.svelte-jhaexl:hover{transform:translateY(1px);box-shadow:0 2px rgba(var(--color-warning-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.warning.svelte-jhaexl:active{transform:translateY(2px);box-shadow:0 1px rgba(var(--color-warning-dark)), var(--shadow-secondary)}.btn.danger.svelte-jhaexl{color:rgba(var(--color-font-light));background-color:rgba(var(--color-danger));box-shadow:0 2px rgba(var(--color-danger-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.danger.svelte-jhaexl:focus{background-color:rgba(var(--color-danger), .85)}.btn.danger.svelte-jhaexl:hover{transform:translateY(1px);box-shadow:0 2px rgba(var(--color-danger-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.danger.svelte-jhaexl:active{transform:translateY(2px);box-shadow:0 1px rgba(var(--color-danger-dark)), var(--shadow-secondary)}@media screen and (min-width: 769px){.btn{margin-bottom:2px}.btn.success.svelte-jhaexl{box-shadow:0 3px rgba(var(--color-success-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.warning.svelte-jhaexl{box-shadow:0 3px rgba(var(--color-warning-dark)), var(--shadow-secondary), var(--shadow-primary)}.btn.danger.svelte-jhaexl{box-shadow:0 3px rgba(var(--color-danger-dark)), var(--shadow-secondary), var(--shadow-primary)}}
.divider.svelte-10708ut{margin:0;border:none;box-sizing:content-box;background-clip:content-box}.info.svelte-10708ut{background-color:rgb(var(--color-info))}.success.svelte-10708ut{background-color:rgb(var(--color-success))}.warning.svelte-10708ut{background-color:rgb(var(--color-warning))}.danger.svelte-10708ut{background-color:rgb(var(--color-danger))}
.progress.svelte-we6n45{--progress-height:20px;--progress-padding-point:3}.progress.small.svelte-we6n45{--progress-height:15px;--progress-padding-point:3}.progress.medium.svelte-we6n45{--progress-height:20px;--progress-padding-point:3.5}.progress.big.svelte-we6n45{--progress-height:30px;--progress-padding-point:4}.progress.svelte-we6n45{flex:0;width:100%;border-radius:9999px;height:var(--progress-height);background-color:rgba(var(--theme-bg-color));padding:calc(var(--progress-height) / var(--progress-padding-point));box-shadow:inset var(--shadow-primary), var(--shadow-secondary-inset)}.progress-inner-frame.svelte-we6n45{display:flex;width:100%;height:100%;overflow:hidden;border-radius:9999px}.progress-core.svelte-we6n45{flex:none;align-self:stretch;transition:1s ease-in-out;margin-bottom:2px;box-shadow:var(--shadow-primary);border-radius:var(--border-radius);background-color:rgba(var(--color-success))}
nav.svelte-iotsi1.svelte-iotsi1{position:sticky;top:0;z-index:10;display:flex;justify-content:space-between;box-shadow:var(--shadow-secondary);border-bottom:1px solid rgba(var(--color-danger), .1)}.selected.svelte-iotsi1.svelte-iotsi1{position:relative;display:inline-block}.selected.svelte-iotsi1.svelte-iotsi1::after{position:absolute;content:"";width:calc(100% - 1em);height:2px;background-color:rgb(var(--color-danger));display:block;bottom:-1px}a.svelte-iotsi1.svelte-iotsi1{padding:.8em 0.5em}.nav-actions.svelte-iotsi1.svelte-iotsi1{display:flex;align-items:center;margin:-3px}.nav-actions.svelte-iotsi1 li.svelte-iotsi1{padding:3px}.lang-select.svelte-iotsi1.svelte-iotsi1{padding:5px;background-color:transparent}.lang-select.svelte-iotsi1.svelte-iotsi1:hover,.lang-select.svelte-iotsi1.svelte-iotsi1:focus{box-shadow:none;background-color:rgba(var(--color-black), 0.1)}
footer.svelte-hgsupk{padding:calc(var(--screen-padding) * 2) var(--screen-padding);box-shadow:inset var(--shadow-primary);background-color:rgba(var(--theme-bg-color))}
section.svelte-1ix1pjw.svelte-1ix1pjw{width:100%;flex-grow:1;display:flex;align-self:stretch;align-items:flex-start}div.svelte-1ix1pjw.svelte-1ix1pjw{display:flex;flex-direction:column}span.svelte-1ix1pjw.svelte-1ix1pjw{flex:none;overflow:hidden;padding:0 8px}span.svelte-1ix1pjw h4.svelte-1ix1pjw,span.svelte-1ix1pjw sub.svelte-1ix1pjw{line-height:1;max-width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}pre.svelte-1ix1pjw.svelte-1ix1pjw{padding:0 8px;font-size:.825em;line-height:1.2}
.swipe-panel.svelte-tx0axj.svelte-tx0axj{position:relative;height:var(--sv-swipe-panel-height, 100%);width:var(--sv-swipe-panel-width, inherit)}.swipe-item-wrapper.svelte-tx0axj.svelte-tx0axj{display:flex;align-self:stretch;overflow:hidden;position:relative;height:inherit;z-index:var(--sv-swipe-panel-wrapper-index, 2);pointer-events:none}.swipeable-items.svelte-tx0axj.svelte-tx0axj,.swipeable-slot-wrapper.svelte-tx0axj.svelte-tx0axj{display:flex;align-self:stretch;position:relative;width:100%}.swipe-handler.svelte-tx0axj.svelte-tx0axj{width:100%;position:absolute;top:40px;bottom:0px;left:0;right:0;background:rgba(0,0,0,0)}.swipe-indicator.svelte-tx0axj.svelte-tx0axj{position:relative;bottom:1.5rem;display:flex;justify-content:center;z-index:var(--sv-swipe-panel-wrapper-index, 2);pointer-events:none}.dot.svelte-tx0axj.svelte-tx0axj{height:10px;width:10px;background-color:transparent;border:1px solid grey;border-radius:50%;display:inline-block;margin:0px 2px;cursor:pointer;pointer-events:fill}.swipe-indicator.svelte-tx0axj .is-active.svelte-tx0axj{background-color:var(--sv-swipe-indicator-active-color, grey)}
.swipeable-item.svelte-1c0dn3k{display:flex;align-self:stretch;position:absolute;top:0;bottom:0;left:0;right:0;transition-timing-function:ease-out}
section.svelte-f86mtu{z-index:0;flex-grow:1;overflow:hidden;margin-bottom:2px;box-shadow:var(--shadow-primary);border-radius:var(--border-radius)}
section.svelte-1gxsw4y.svelte-1gxsw4y{width:100%;flex-grow:1;display:flex;align-self:stretch;align-items:center}span.svelte-1gxsw4y.svelte-1gxsw4y{overflow:hidden;padding:0 8px}span.svelte-1gxsw4y h4.svelte-1gxsw4y,span.svelte-1gxsw4y sub.svelte-1gxsw4y{line-height:1;max-width:100%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}
.item.svelte-6ufzg4{box-shadow:var(--shadow-primary);border-radius:var(--border-radius);background-color:rgba(var(--theme-bg-color))}
.search.svelte-ovr79r{}
.card.svelte-do16pj{display:flex;flex-direction:column;flex:none;width:100%;max-width:100%}.rate-wrap.svelte-do16pj{text-align:center;padding-top:6px}.images-wrap.svelte-do16pj{display:flex;height:100px}h4.svelte-do16pj{--card-line-height:1.4;font-size:.8em;line-height:var(--card-line-height);height:calc(var(--font-size) * (var(--card-line-height) / 1.2) * 2);overflow:hidden}
.cards.svelte-1k1p6bw.svelte-1k1p6bw{display:flex;flex-wrap:wrap;align-items:flex-start;justify-content:center;padding:var(--screen-padding) 0;margin:calc(var(--screen-padding) * -3) calc(var(--screen-padding) * -1)}.cards.svelte-1k1p6bw li.svelte-1k1p6bw{display:flex;justify-content:stretch;width:50%;overflow:hidden;padding:calc(var(--screen-padding) * 3) var(--screen-padding)}.cards.svelte-1k1p6bw li.svelte-1k1p6bw:hover{background-color:rgba(0, 0, 0, .1)
    }
section.svelte-1qydgyt{text-align:center;padding:0 3vw}
ul.svelte-1k5eog2.svelte-1k5eog2{flex:0;display:flex;flex-direction:column;margin:calc(var(--screen-padding) * -1 / 2) 0;padding:0 0 0 var(--screen-padding)}ul.svelte-1k5eog2 li.svelte-1k5eog2{flex:none;margin:calc(var(--screen-padding) / 2) 0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */