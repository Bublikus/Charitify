import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, r as space, e as element, G as create_component, u as claim_space, c as claim_element, a as children, H as claim_component, f as detach_dev, g as add_location, h as attr_dev, j as insert_dev, k as append_dev, I as mount_component, x as transition_in, y as transition_out, J as destroy_component, t as text, b as claim_text } from './index.1e1e7223.js';
import { T as TitleSubTitle, C as Carousel, B as Button, I as Input, b as Progress, A as AvatarAndName, R as Rate } from './index.f62ea4fa.js';

/* src/routes/charity.svelte generated by Svelte v3.16.7 */

const file = "src/routes/charity.svelte";

// (129:4) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test1");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test1");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(129:4) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (132:4) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_2(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test12");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test12");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(132:4) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (135:4) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test123");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test123");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(135:4) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (155:4) <Button is="warning" on:click="{e => console.log(e)}">
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Submit");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Submit");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(155:4) <Button is=\\\"warning\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let section3;
	let section0;
	let br0;
	let t1;
	let t2;
	let br1;
	let t3;
	let section1;
	let div;
	let t4;
	let ul;
	let li0;
	let t5;
	let li1;
	let t6;
	let li2;
	let t7;
	let li3;
	let br2;
	let t8;
	let t9;
	let datalist;
	let option0;
	let option1;
	let option2;
	let t10;
	let li4;
	let t11;
	let t12;
	let section2;
	let t13;
	let t14;
	let br3;
	let t15;
	let br4;
	let t16;
	let br5;
	let current;
	const titlesubtitle = new TitleSubTitle({ $$inline: true });

	const carousel = new Carousel({
			props: { images: /*images*/ ctx[0] },
			$$inline: true
		});

	const button0 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*click_handler*/ ctx[2]);

	const button1 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*click_handler_1*/ ctx[3]);

	const button2 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button2.$on("click", /*click_handler_2*/ ctx[4]);

	const input = new Input({
			props: {
				type: "number",
				name: "num",
				list: "sum-suggestions",
				placeholder: "Num",
				autoselect: true,
				align: "right"
			},
			$$inline: true
		});

	const button3 = new Button({
			props: {
				is: "warning",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button3.$on("click", /*click_handler_3*/ ctx[5]);

	const progress = new Progress({
			props: { value: "65", size: "big" },
			$$inline: true
		});

	const avatarandname = new AvatarAndName({
			props: {
				src: "https://placeimg.com/300/300/people",
				title: "Tina Kandelaki",
				subTitle: "ORG charity charitify"
			},
			$$inline: true
		});

	const rate = new Rate({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			section3 = element("section");
			section0 = element("section");
			br0 = element("br");
			t1 = space();
			create_component(titlesubtitle.$$.fragment);
			t2 = space();
			br1 = element("br");
			t3 = space();
			section1 = element("section");
			div = element("div");
			create_component(carousel.$$.fragment);
			t4 = space();
			ul = element("ul");
			li0 = element("li");
			create_component(button0.$$.fragment);
			t5 = space();
			li1 = element("li");
			create_component(button1.$$.fragment);
			t6 = space();
			li2 = element("li");
			create_component(button2.$$.fragment);
			t7 = space();
			li3 = element("li");
			br2 = element("br");
			t8 = space();
			create_component(input.$$.fragment);
			t9 = space();
			datalist = element("datalist");
			option0 = element("option");
			option1 = element("option");
			option2 = element("option");
			t10 = space();
			li4 = element("li");
			create_component(button3.$$.fragment);
			t11 = space();
			create_component(progress.$$.fragment);
			t12 = space();
			section2 = element("section");
			create_component(avatarandname.$$.fragment);
			t13 = space();
			create_component(rate.$$.fragment);
			t14 = space();
			br3 = element("br");
			t15 = space();
			br4 = element("br");
			t16 = space();
			br5 = element("br");
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			section3 = claim_element(nodes, "SECTION", { class: true });
			var section3_nodes = children(section3);
			section0 = claim_element(section3_nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			br0 = claim_element(section0_nodes, "BR", {});
			t1 = claim_space(section0_nodes);
			claim_component(titlesubtitle.$$.fragment, section0_nodes);
			t2 = claim_space(section0_nodes);
			br1 = claim_element(section0_nodes, "BR", {});
			section0_nodes.forEach(detach_dev);
			t3 = claim_space(section3_nodes);
			section1 = claim_element(section3_nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			div = claim_element(section1_nodes, "DIV", { class: true });
			var div_nodes = children(div);
			claim_component(carousel.$$.fragment, div_nodes);
			div_nodes.forEach(detach_dev);
			t4 = claim_space(section1_nodes);
			ul = claim_element(section1_nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			claim_component(button0.$$.fragment, li0_nodes);
			li0_nodes.forEach(detach_dev);
			t5 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			claim_component(button1.$$.fragment, li1_nodes);
			li1_nodes.forEach(detach_dev);
			t6 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			claim_component(button2.$$.fragment, li2_nodes);
			li2_nodes.forEach(detach_dev);
			t7 = claim_space(ul_nodes);
			li3 = claim_element(ul_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			br2 = claim_element(li3_nodes, "BR", {});
			t8 = claim_space(li3_nodes);
			claim_component(input.$$.fragment, li3_nodes);
			t9 = claim_space(li3_nodes);
			datalist = claim_element(li3_nodes, "DATALIST", { id: true });
			var datalist_nodes = children(datalist);
			option0 = claim_element(datalist_nodes, "OPTION", { value: true });
			var option0_nodes = children(option0);
			option0_nodes.forEach(detach_dev);
			option1 = claim_element(datalist_nodes, "OPTION", { value: true });
			var option1_nodes = children(option1);
			option1_nodes.forEach(detach_dev);
			option2 = claim_element(datalist_nodes, "OPTION", { value: true });
			var option2_nodes = children(option2);
			option2_nodes.forEach(detach_dev);
			datalist_nodes.forEach(detach_dev);
			li3_nodes.forEach(detach_dev);
			t10 = claim_space(ul_nodes);
			li4 = claim_element(ul_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			claim_component(button3.$$.fragment, li4_nodes);
			li4_nodes.forEach(detach_dev);
			ul_nodes.forEach(detach_dev);
			section1_nodes.forEach(detach_dev);
			t11 = claim_space(section3_nodes);
			claim_component(progress.$$.fragment, section3_nodes);
			t12 = claim_space(section3_nodes);
			section2 = claim_element(section3_nodes, "SECTION", { class: true });
			var section2_nodes = children(section2);
			claim_component(avatarandname.$$.fragment, section2_nodes);
			t13 = claim_space(section2_nodes);
			claim_component(rate.$$.fragment, section2_nodes);
			section2_nodes.forEach(detach_dev);
			section3_nodes.forEach(detach_dev);
			t14 = claim_space(nodes);
			br3 = claim_element(nodes, "BR", {});
			t15 = claim_space(nodes);
			br4 = claim_element(nodes, "BR", {});
			t16 = claim_space(nodes);
			br5 = claim_element(nodes, "BR", {});
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - Charity page and donate.";
			add_location(br0, file, 116, 2, 2468);
			add_location(br1, file, 118, 2, 2494);
			attr_dev(section0, "class", "title-wrap svelte-jq6cxm");
			add_location(section0, file, 115, 1, 2437);
			attr_dev(div, "class", "pics-wrap svelte-jq6cxm");
			add_location(div, file, 122, 2, 2537);
			attr_dev(li0, "class", "svelte-jq6cxm");
			add_location(li0, file, 127, 3, 2621);
			attr_dev(li1, "class", "svelte-jq6cxm");
			add_location(li1, file, 130, 3, 2711);
			attr_dev(li2, "class", "svelte-jq6cxm");
			add_location(li2, file, 133, 3, 2802);
			add_location(br2, file, 137, 4, 2903);
			option0.__value = "20";
			option0.value = option0.__value;
			add_location(option0, file, 148, 5, 3095);
			option1.__value = "500";
			option1.value = option1.__value;
			add_location(option1, file, 149, 5, 3120);
			option2.__value = "1000";
			option2.value = option2.__value;
			add_location(option2, file, 150, 5, 3146);
			attr_dev(datalist, "id", "sum-suggestions");
			add_location(datalist, file, 147, 4, 3058);
			attr_dev(li3, "class", "svelte-jq6cxm");
			add_location(li3, file, 136, 3, 2894);
			attr_dev(li4, "class", "svelte-jq6cxm");
			add_location(li4, file, 153, 3, 3196);
			attr_dev(ul, "class", "options svelte-jq6cxm");
			add_location(ul, file, 126, 2, 2597);
			attr_dev(section1, "class", "top svelte-jq6cxm");
			add_location(section1, file, 121, 1, 2513);
			attr_dev(section2, "class", "rate-section svelte-jq6cxm");
			add_location(section2, file, 161, 1, 3352);
			attr_dev(section3, "class", "container");
			add_location(section3, file, 113, 0, 2407);
			add_location(br3, file, 172, 0, 3550);
			add_location(br4, file, 173, 0, 3555);
			add_location(br5, file, 174, 0, 3560);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section3, anchor);
			append_dev(section3, section0);
			append_dev(section0, br0);
			append_dev(section0, t1);
			mount_component(titlesubtitle, section0, null);
			append_dev(section0, t2);
			append_dev(section0, br1);
			append_dev(section3, t3);
			append_dev(section3, section1);
			append_dev(section1, div);
			mount_component(carousel, div, null);
			append_dev(section1, t4);
			append_dev(section1, ul);
			append_dev(ul, li0);
			mount_component(button0, li0, null);
			append_dev(ul, t5);
			append_dev(ul, li1);
			mount_component(button1, li1, null);
			append_dev(ul, t6);
			append_dev(ul, li2);
			mount_component(button2, li2, null);
			append_dev(ul, t7);
			append_dev(ul, li3);
			append_dev(li3, br2);
			append_dev(li3, t8);
			mount_component(input, li3, null);
			append_dev(li3, t9);
			append_dev(li3, datalist);
			append_dev(datalist, option0);
			append_dev(datalist, option1);
			append_dev(datalist, option2);
			append_dev(ul, t10);
			append_dev(ul, li4);
			mount_component(button3, li4, null);
			append_dev(section3, t11);
			mount_component(progress, section3, null);
			append_dev(section3, t12);
			append_dev(section3, section2);
			mount_component(avatarandname, section2, null);
			append_dev(section2, t13);
			mount_component(rate, section2, null);
			insert_dev(target, t14, anchor);
			insert_dev(target, br3, anchor);
			insert_dev(target, t15, anchor);
			insert_dev(target, br4, anchor);
			insert_dev(target, t16, anchor);
			insert_dev(target, br5, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const button0_changes = {};

			if (dirty & /*$$scope*/ 64) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};

			if (dirty & /*$$scope*/ 64) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
			const button2_changes = {};

			if (dirty & /*$$scope*/ 64) {
				button2_changes.$$scope = { dirty, ctx };
			}

			button2.$set(button2_changes);
			const button3_changes = {};

			if (dirty & /*$$scope*/ 64) {
				button3_changes.$$scope = { dirty, ctx };
			}

			button3.$set(button3_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(titlesubtitle.$$.fragment, local);
			transition_in(carousel.$$.fragment, local);
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			transition_in(button2.$$.fragment, local);
			transition_in(input.$$.fragment, local);
			transition_in(button3.$$.fragment, local);
			transition_in(progress.$$.fragment, local);
			transition_in(avatarandname.$$.fragment, local);
			transition_in(rate.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(titlesubtitle.$$.fragment, local);
			transition_out(carousel.$$.fragment, local);
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			transition_out(button2.$$.fragment, local);
			transition_out(input.$$.fragment, local);
			transition_out(button3.$$.fragment, local);
			transition_out(progress.$$.fragment, local);
			transition_out(avatarandname.$$.fragment, local);
			transition_out(rate.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section3);
			destroy_component(titlesubtitle);
			destroy_component(carousel);
			destroy_component(button0);
			destroy_component(button1);
			destroy_component(button2);
			destroy_component(input);
			destroy_component(button3);
			destroy_component(progress);
			destroy_component(avatarandname);
			destroy_component(rate);
			if (detaching) detach_dev(t14);
			if (detaching) detach_dev(br3);
			if (detaching) detach_dev(t15);
			if (detaching) detach_dev(br4);
			if (detaching) detach_dev(t16);
			if (detaching) detach_dev(br5);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self) {
	const cards = [
		{
			src: "https://placeimg.com/300/300/tech",
			title: "The main title and short description.",
			percent: 45,
			orgHead: "Tina Kandelaki",
			orgHeadSrc: "https://placeimg.com/300/300/people",
			organization: "ORG charity of Charitify."
		},
		{
			src: "https://placeimg.com/300/300/arch",
			title: "Second bigger major card title line with a bit longer description.",
			percent: 65,
			orgHead: "Tina Kandelaki",
			orgHeadSrc: "https://placeimg.com/300/300/people",
			organization: "ORG charity of Charitify."
		},
		{
			src: "https://placeimg.com/300/300/any",
			title: "The main title and short description.",
			percent: 5,
			orgHead: "Tinaramisimuss Kandelakinuskas",
			orgHeadSrc: "https://placeimg.com/300/300/people",
			organization: "ORG charity of Charitify."
		},
		{
			src: "https://placeimg.com/300/300/nature",
			title: "The main title and short description.",
			percent: 95,
			orgHead: "Tina Kandelaki",
			orgHeadSrc: "https://placeimg.com/300/300/people",
			organization: "ORG giant charity organization of big Charitify company."
		}
	];

	const images = cards.map(card => ({
		src: [card.src, card.src, card.src],
		alt: card.title
	}));

	const click_handler = e => console.log(e);
	const click_handler_1 = e => console.log(e);
	const click_handler_2 = e => console.log(e);
	const click_handler_3 = e => console.log(e);

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		
	};

	return [
		images,
		cards,
		click_handler,
		click_handler_1,
		click_handler_2,
		click_handler_3
	];
}

class Charity extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Charity",
			options,
			id: create_fragment.name
		});
	}
}

export default Charity;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcml0eS5hYzY0NmU1NS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9jaGFyaXR5LnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuXHRpbXBvcnQgeyBTd2lwZSwgU3dpcGVJdGVtIH0gZnJvbSAnLi4vcGx1Z2lucydcblx0aW1wb3J0IHsgVGl0bGVTdWJUaXRsZSwgQXZhdGFyQW5kTmFtZSwgQ2Fyb3VzZWwgfSBmcm9tICcuLi9sYXlvdXRzJ1xuXHRpbXBvcnQge1xuXHRcdEljb24sXG5cdFx0UmF0ZSxcblx0XHRJbnB1dCxcblx0XHRBdmF0YXIsXG5cdFx0QnV0dG9uLFxuXHRcdERpdmlkZXIsXG5cdFx0UHJvZ3Jlc3MsXG5cdH0gZnJvbSAnLi4vY29tcG9uZW50cydcblxuXHRjb25zdCBjYXJkcyA9IFtcblx0XHR7XG5cdFx0XHRzcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL3RlY2gnLFxuXHRcdFx0dGl0bGU6ICdUaGUgbWFpbiB0aXRsZSBhbmQgc2hvcnQgZGVzY3JpcHRpb24uJyxcblx0XHRcdHBlcmNlbnQ6IDQ1LFxuXHRcdFx0b3JnSGVhZDogJ1RpbmEgS2FuZGVsYWtpJyxcblx0XHRcdG9yZ0hlYWRTcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL3Blb3BsZScsXG5cdFx0XHRvcmdhbml6YXRpb246ICdPUkcgY2hhcml0eSBvZiBDaGFyaXRpZnkuJyxcblx0XHR9LFxuXHRcdHtcblx0XHRcdHNyYzogJ2h0dHBzOi8vcGxhY2VpbWcuY29tLzMwMC8zMDAvYXJjaCcsXG5cdFx0XHR0aXRsZTogJ1NlY29uZCBiaWdnZXIgbWFqb3IgY2FyZCB0aXRsZSBsaW5lIHdpdGggYSBiaXQgbG9uZ2VyIGRlc2NyaXB0aW9uLicsXG5cdFx0XHRwZXJjZW50OiA2NSxcblx0XHRcdG9yZ0hlYWQ6ICdUaW5hIEthbmRlbGFraScsXG5cdFx0XHRvcmdIZWFkU3JjOiAnaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAwLzMwMC9wZW9wbGUnLFxuXHRcdFx0b3JnYW5pemF0aW9uOiAnT1JHIGNoYXJpdHkgb2YgQ2hhcml0aWZ5LicsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRzcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL2FueScsXG5cdFx0XHR0aXRsZTogJ1RoZSBtYWluIHRpdGxlIGFuZCBzaG9ydCBkZXNjcmlwdGlvbi4nLFxuXHRcdFx0cGVyY2VudDogNSxcblx0XHRcdG9yZ0hlYWQ6ICdUaW5hcmFtaXNpbXVzcyBLYW5kZWxha2ludXNrYXMnLFxuXHRcdFx0b3JnSGVhZFNyYzogJ2h0dHBzOi8vcGxhY2VpbWcuY29tLzMwMC8zMDAvcGVvcGxlJyxcblx0XHRcdG9yZ2FuaXphdGlvbjogJ09SRyBjaGFyaXR5IG9mIENoYXJpdGlmeS4nLFxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0c3JjOiAnaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAwLzMwMC9uYXR1cmUnLFxuXHRcdFx0dGl0bGU6ICdUaGUgbWFpbiB0aXRsZSBhbmQgc2hvcnQgZGVzY3JpcHRpb24uJyxcblx0XHRcdHBlcmNlbnQ6IDk1LFxuXHRcdFx0b3JnSGVhZDogJ1RpbmEgS2FuZGVsYWtpJyxcblx0XHRcdG9yZ0hlYWRTcmM6ICdodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL3Blb3BsZScsXG5cdFx0XHRvcmdhbml6YXRpb246ICdPUkcgZ2lhbnQgY2hhcml0eSBvcmdhbml6YXRpb24gb2YgYmlnIENoYXJpdGlmeSBjb21wYW55LicsXG5cdFx0fSxcblx0XVxuXG5cdGNvbnN0IGltYWdlcyA9IGNhcmRzLm1hcChjYXJkID0+ICh7XG5cdFx0c3JjOiBbY2FyZC5zcmMsIGNhcmQuc3JjLCBjYXJkLnNyY10sXG5cdFx0YWx0OiBjYXJkLnRpdGxlLFxuXHR9KSlcbjwvc2NyaXB0PlxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5DaGFyaXRpZnkgLSBDaGFyaXR5IHBhZ2UgYW5kIGRvbmF0ZS48L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPHN0eWxlPlxuXHQudG9wIHtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdG1hcmdpbi1ib3R0b206IGNhbGModmFyKC0tc2NyZWVuLXBhZGRpbmcpICogMS41KTtcblx0XHRtYXJnaW4tdG9wOiB2YXIoLS1zY3JlZW4tcGFkZGluZyk7XG5cdH1cblxuXHQucGljcy13cmFwIHtcblx0XHR6LWluZGV4OiAwO1xuXHRcdGZsZXgtZ3JvdzogMTtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0bWFyZ2luLWJvdHRvbTogMnB4O1xuXHRcdGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpO1xuXHRcdGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1wcmltYXJ5KTtcblx0fVxuXG5cdC5vcHRpb25zIHtcblx0XHRmbGV4OiAwO1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRtYXJnaW46IGNhbGModmFyKC0tc2NyZWVuLXBhZGRpbmcpICogLTEgLyAyKSAwO1xuXHRcdHBhZGRpbmc6IDAgMCAwIHZhcigtLXNjcmVlbi1wYWRkaW5nKTtcblx0fVxuXG5cdC5vcHRpb25zIGxpIHtcblx0XHRmbGV4OiBub25lO1xuXHRcdG1hcmdpbjogY2FsYyh2YXIoLS1zY3JlZW4tcGFkZGluZykgLyAyKSAwO1xuXHR9XG5cblx0LnJhdGUtc2VjdGlvbiB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRhbGlnbi1pdGVtczogZmxleC1lbmQ7XG5cdFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXHRcdHBhZGRpbmc6IDEycHggMDtcblx0fVxuXG5cdC50aXRsZS13cmFwIHtcblx0XHRvdmVyZmxvdzogaGlkZGVuO1xuXHRcdGFuaW1hdGlvbjogdGl0bGUtYW5pbSAxcyBmb3J3YXJkcyBlYXNlLWluO1xuXHR9XG5cblx0QGtleWZyYW1lcyB0aXRsZS1hbmltIHtcblx0XHQwJSB7XG5cdFx0XHRtYXgtaGVpZ2h0OiAwO1xuXHRcdH1cblx0XHQ5OS45JSB7XG5cdFx0XHRtYXgtaGVpZ2h0OiAxMDB2aDtcblx0XHR9XG5cdFx0MTAwJSB7XG5cdFx0XHRtYXgtaGVpZ2h0OiBub25lO1xuXHRcdH1cblx0fVxuPC9zdHlsZT5cblxuPHNlY3Rpb24gY2xhc3M9XCJjb250YWluZXJcIj5cblxuXHQ8c2VjdGlvbiBjbGFzcz1cInRpdGxlLXdyYXBcIj5cblx0XHQ8YnI+XG5cdFx0PFRpdGxlU3ViVGl0bGUvPlxuXHRcdDxicj5cblx0PC9zZWN0aW9uPlxuXG5cdDxzZWN0aW9uIGNsYXNzPVwidG9wXCI+XG5cdFx0PGRpdiBjbGFzcz1cInBpY3Mtd3JhcFwiPlxuXHRcdFx0PENhcm91c2VsIHtpbWFnZXN9Lz5cblx0XHQ8L2Rpdj5cblxuXHRcdDx1bCBjbGFzcz1cIm9wdGlvbnNcIj5cblx0XHRcdDxsaT5cblx0XHRcdFx0PEJ1dHRvbiBpcz1cInN1Y2Nlc3NcIiBvbjpjbGljaz1cIntlID0+IGNvbnNvbGUubG9nKGUpfVwiPnRlc3QxPC9CdXR0b24+XG5cdFx0XHQ8L2xpPlxuXHRcdFx0PGxpPlxuXHRcdFx0XHQ8QnV0dG9uIGlzPVwic3VjY2Vzc1wiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCI+dGVzdDEyPC9CdXR0b24+XG5cdFx0XHQ8L2xpPlxuXHRcdFx0PGxpPlxuXHRcdFx0XHQ8QnV0dG9uIGlzPVwic3VjY2Vzc1wiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCI+dGVzdDEyMzwvQnV0dG9uPlxuXHRcdFx0PC9saT5cblx0XHRcdDxsaT5cblx0XHRcdFx0PGJyPlxuXHRcdFx0XHQ8SW5wdXRcblx0XHRcdFx0XHRcdHR5cGU9XCJudW1iZXJcIlxuXHRcdFx0XHRcdFx0bmFtZT1cIm51bVwiXG5cdFx0XHRcdFx0XHRsaXN0PVwic3VtLXN1Z2dlc3Rpb25zXCJcblx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPVwiTnVtXCJcblx0XHRcdFx0XHRcdGF1dG9zZWxlY3Rcblx0XHRcdFx0XHRcdGFsaWduPVwicmlnaHRcIlxuXHRcdFx0XHQvPlxuXG5cdFx0XHRcdDxkYXRhbGlzdCBpZD1cInN1bS1zdWdnZXN0aW9uc1wiPlxuXHRcdFx0XHRcdDxvcHRpb24gdmFsdWU9XCIyMFwiPlxuXHRcdFx0XHRcdDxvcHRpb24gdmFsdWU9XCI1MDBcIj5cblx0XHRcdFx0XHQ8b3B0aW9uIHZhbHVlPVwiMTAwMFwiPlxuXHRcdFx0XHQ8L2RhdGFsaXN0PlxuXHRcdFx0PC9saT5cblx0XHRcdDxsaT5cblx0XHRcdFx0PEJ1dHRvbiBpcz1cIndhcm5pbmdcIiBvbjpjbGljaz1cIntlID0+IGNvbnNvbGUubG9nKGUpfVwiPlN1Ym1pdDwvQnV0dG9uPlxuXHRcdFx0PC9saT5cblx0XHQ8L3VsPlxuXHQ8L3NlY3Rpb24+XG5cblx0PFByb2dyZXNzIHZhbHVlPVwiNjVcIiBzaXplPVwiYmlnXCI+PC9Qcm9ncmVzcz5cblxuXHQ8c2VjdGlvbiBjbGFzcz1cInJhdGUtc2VjdGlvblwiPlxuXHRcdDxBdmF0YXJBbmROYW1lXG5cdFx0XHRcdHNyYz1cImh0dHBzOi8vcGxhY2VpbWcuY29tLzMwMC8zMDAvcGVvcGxlXCJcblx0XHRcdFx0dGl0bGU9XCJUaW5hIEthbmRlbGFraVwiXG5cdFx0XHRcdHN1YlRpdGxlPVwiT1JHIGNoYXJpdHkgY2hhcml0aWZ5XCJcblx0XHQvPlxuXG5cdFx0PFJhdGUvPlxuXHQ8L3NlY3Rpb24+XG48L3NlY3Rpb24+XG5cbjxicj5cbjxicj5cbjxicj5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztPQWFPLEtBQUs7O0dBRVQsR0FBRyxFQUFFLG1DQUFtQztHQUN4QyxLQUFLLEVBQUUsdUNBQXVDO0dBQzlDLE9BQU8sRUFBRSxFQUFFO0dBQ1gsT0FBTyxFQUFFLGdCQUFnQjtHQUN6QixVQUFVLEVBQUUscUNBQXFDO0dBQ2pELFlBQVksRUFBRSwyQkFBMkI7OztHQUd6QyxHQUFHLEVBQUUsbUNBQW1DO0dBQ3hDLEtBQUssRUFBRSxvRUFBb0U7R0FDM0UsT0FBTyxFQUFFLEVBQUU7R0FDWCxPQUFPLEVBQUUsZ0JBQWdCO0dBQ3pCLFVBQVUsRUFBRSxxQ0FBcUM7R0FDakQsWUFBWSxFQUFFLDJCQUEyQjs7O0dBR3pDLEdBQUcsRUFBRSxrQ0FBa0M7R0FDdkMsS0FBSyxFQUFFLHVDQUF1QztHQUM5QyxPQUFPLEVBQUUsQ0FBQztHQUNWLE9BQU8sRUFBRSxnQ0FBZ0M7R0FDekMsVUFBVSxFQUFFLHFDQUFxQztHQUNqRCxZQUFZLEVBQUUsMkJBQTJCOzs7R0FHekMsR0FBRyxFQUFFLHFDQUFxQztHQUMxQyxLQUFLLEVBQUUsdUNBQXVDO0dBQzlDLE9BQU8sRUFBRSxFQUFFO0dBQ1gsT0FBTyxFQUFFLGdCQUFnQjtHQUN6QixVQUFVLEVBQUUscUNBQXFDO0dBQ2pELFlBQVksRUFBRSwwREFBMEQ7Ozs7T0FJcEUsTUFBTSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSTtFQUM1QixHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHO0VBQ2xDLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSzs7O3VCQThFbUIsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQzt5QkFHbEIsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQzt5QkFHbEIsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQzt5QkFvQmxCLENBQUMsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
