import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, r as space, e as element, H as create_component, u as claim_space, c as claim_element, a as children, I as claim_component, f as detach_dev, h as attr_dev, g as add_location, j as insert_dev, J as mount_component, k as append_dev, n as noop, x as transition_in, y as transition_out, K as destroy_component } from './index.f1512f61.js';
import { B as Br, b as ContentHolder } from './index.dbc0bcd5.js';

/* src/routes/about.svelte generated by Svelte v3.16.7 */
const file = "src/routes/about.svelte";

function create_fragment(ctx) {
	let t0;
	let section;
	let t1;
	let t2;
	let current;
	const br0 = new Br({ props: { amount: "2" }, $$inline: true });
	const contentholder = new ContentHolder({ $$inline: true });
	const br1 = new Br({ props: { amount: "2" }, $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			section = element("section");
			create_component(br0.$$.fragment);
			t1 = space();
			create_component(contentholder.$$.fragment);
			t2 = space();
			create_component(br1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			claim_component(br0.$$.fragment, section_nodes);
			t1 = claim_space(section_nodes);
			claim_component(contentholder.$$.fragment, section_nodes);
			t2 = claim_space(section_nodes);
			claim_component(br1.$$.fragment, section_nodes);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - Charity page and donate.";
			attr_dev(section, "class", "svelte-1rbc8m3");
			add_location(section, file, 17, 0, 288);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section, anchor);
			mount_component(br0, section, null);
			append_dev(section, t1);
			mount_component(contentholder, section, null);
			append_dev(section, t2);
			mount_component(br1, section, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(br0.$$.fragment, local);
			transition_in(contentholder.$$.fragment, local);
			transition_in(br1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(br0.$$.fragment, local);
			transition_out(contentholder.$$.fragment, local);
			transition_out(br1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section);
			destroy_component(br0);
			destroy_component(contentholder);
			destroy_component(br1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export default About;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQuODczM2Q0NGYuanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
