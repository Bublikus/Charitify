import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, o as create_slot, O as onMount, X as onDestroy, q as element, c as claim_element, f as children, g as detach_dev, h as attr_dev, j as add_location, k as insert_dev, Y as destroy_each, r as listen_dev, A as space, C as claim_space, l as append_dev, u as get_slot_context, v as get_slot_changes, w as transition_in, y as transition_out, K as run_all, Z as binding_callbacks, z as create_component, P as text, B as claim_component, Q as claim_text, R as set_style, D as mount_component, E as destroy_component, m as noop } from './index.b9336edf.js';
import { B as Button, I as Input, P as Progress, A as Avatar, R as Rate, D as Divider, F as Form, a as Icon, b as Picture } from './index.c027473d.js';

/* src/plugins/Swipe/Swipe.svelte generated by Svelte v3.16.7 */
const file = "src/plugins/Swipe/Swipe.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[18] = list[i];
	child_ctx[35] = i;
	return child_ctx;
}

// (246:4) {#if showIndicators}
function create_if_block(ctx) {
	let div;
	let each_value = /*indicators*/ ctx[2];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "swipe-indicator swipe-indicator-inside svelte-tx0axj");
			add_location(div, file, 246, 8, 6498);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*activeIndicator, changeItem, indicators*/ 70) {
				each_value = /*indicators*/ ctx[2];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(246:4) {#if showIndicators}",
		ctx
	});

	return block;
}

// (248:12) {#each indicators as x, i }
function create_each_block(ctx) {
	let span;
	let span_class_value;
	let dispose;

	function click_handler(...args) {
		return /*click_handler*/ ctx[33](/*i*/ ctx[35], ...args);
	}

	const block = {
		c: function create() {
			span = element("span");
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true });
			children(span).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", span_class_value = "dot " + (/*activeIndicator*/ ctx[1] == /*i*/ ctx[35]
			? "is-active"
			: "") + " svelte-tx0axj");

			add_location(span, file, 248, 16, 6607);
			dispose = listen_dev(span, "click", click_handler, false, false, false);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (dirty[0] & /*activeIndicator*/ 2 && span_class_value !== (span_class_value = "dot " + (/*activeIndicator*/ ctx[1] == /*i*/ ctx[35]
			? "is-active"
			: "") + " svelte-tx0axj")) {
				attr_dev(span, "class", span_class_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(248:12) {#each indicators as x, i }",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div4;
	let div2;
	let div1;
	let div0;
	let t0;
	let div3;
	let t1;
	let current;
	let dispose;
	const default_slot_template = /*$$slots*/ ctx[30].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[29], null);
	let if_block = /*showIndicators*/ ctx[0] && create_if_block(ctx);

	const block = {
		c: function create() {
			div4 = element("div");
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			if (default_slot) default_slot.c();
			t0 = space();
			div3 = element("div");
			t1 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div2 = claim_element(div4_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			if (default_slot) default_slot.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t0 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			children(div3).forEach(detach_dev);
			t1 = claim_space(div4_nodes);
			if (if_block) if_block.l(div4_nodes);
			div4_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "swipeable-slot-wrapper svelte-tx0axj");
			add_location(div0, file, 239, 12, 6244);
			attr_dev(div1, "class", "swipeable-items svelte-tx0axj");
			add_location(div1, file, 238, 8, 6202);
			attr_dev(div2, "class", "swipe-item-wrapper svelte-tx0axj");
			add_location(div2, file, 237, 4, 6136);
			attr_dev(div3, "class", "swipe-handler svelte-tx0axj");
			add_location(div3, file, 244, 4, 6355);
			attr_dev(div4, "class", "swipe-panel svelte-tx0axj");
			add_location(div4, file, 236, 0, 6106);

			dispose = [
				listen_dev(div3, "touchstart", /*moveStart*/ ctx[5], false, false, false),
				listen_dev(div3, "mousedown", /*moveStart*/ ctx[5], false, false, false)
			];
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div2);
			append_dev(div2, div1);
			append_dev(div1, div0);

			if (default_slot) {
				default_slot.m(div0, null);
			}

			/*div2_binding*/ ctx[31](div2);
			append_dev(div4, t0);
			append_dev(div4, div3);
			/*div3_binding*/ ctx[32](div3);
			append_dev(div4, t1);
			if (if_block) if_block.m(div4, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (default_slot && default_slot.p && dirty[0] & /*$$scope*/ 536870912) {
				default_slot.p(get_slot_context(default_slot_template, ctx, /*$$scope*/ ctx[29], null), get_slot_changes(default_slot_template, /*$$scope*/ ctx[29], dirty, null));
			}

			if (/*showIndicators*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(div4, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
			if (default_slot) default_slot.d(detaching);
			/*div2_binding*/ ctx[31](null);
			/*div3_binding*/ ctx[32](null);
			if (if_block) if_block.d();
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { transitionDuration = 200 } = $$props;
	let { showIndicators = false } = $$props;
	let { autoplay = false } = $$props;
	let { delay = 1000 } = $$props;
	let activeIndicator = 0;
	let indicators;
	let items = 0;
	let availableWidth = 0;
	let topClearence = 0;
	let elems;
	let diff = 0;
	let swipeWrapper;
	let swipeHandler;
	let min = 0;

	let touchingTpl = `
    -webkit-transition-duration: 0s;
    transition-duration: 0s;
    -webkit-transform: translate3d(-{{val}}px, 0, 0);
    -ms-transform: translate3d(-{{val}}px, 0, 0);`;

	let non_touchingTpl = `
    -webkit-transition-duration: ${transitionDuration}ms;
    transition-duration: ${transitionDuration}ms;
    -webkit-transform: translate3d(-{{val}}px, 0, 0);
    -ms-transform: translate3d(-{{val}}px, 0, 0);`;

	let touching = false;
	let posX = 0;
	let dir = 0;
	let x;
	let played = 0;
	let run_interval = false;

	function update() {
		$$invalidate(4, swipeHandler.style.top = topClearence + "px", swipeHandler);
		availableWidth = swipeWrapper.querySelector(".swipeable-items").offsetWidth;

		for (let i = 0; i < items; i++) {
			elems[i].style.transform = "translate3d(" + availableWidth * i + "px, 0, 0)";
		}

		diff = 0;
	}

	function init() {
		elems = swipeWrapper.querySelectorAll(".swipeable-item");
		$$invalidate(10, items = elems.length);
		update();
	}

	onMount(() => {
		init();
		window.addEventListener("resize", update);
	});

	onDestroy(() => {
		window.removeEventListener("resize", update);
	});

	function moveHandler(e) {
		if (touching) {
			e.stopImmediatePropagation();
			e.stopPropagation();
			let max = availableWidth;
			let _x = e.touches ? e.touches[0].pageX : e.pageX;
			let _diff = x - _x + posX;
			let dir = _x > x ? 0 : 1;

			if (!dir) {
				_diff = posX - (_x - x);
			}

			if (_diff <= max * (items - 1) && _diff >= min) {
				for (let i = 0; i < items; i++) {
					let template = i < 0 ? "{{val}}" : "-{{val}}";
					let _value = max * i - _diff;
					elems[i].style.cssText = touchingTpl.replace(template, _value).replace(template, _value);
				}

				diff = _diff;
			}
		}
	}

	function endHandler(e) {
		e && e.stopImmediatePropagation();
		e && e.stopPropagation();
		e && e.preventDefault();
		let max = availableWidth;
		touching = false;
		x = null;
		let delta = 0.05;
		let swipe_threshold = 0.85;
		let d_max = diff / max;
		let deltaDMax = d_max - Math.floor(d_max);

		let _target = deltaDMax > delta && deltaDMax < 0.5
		? Math.ceil(d_max)
		: Math.floor(d_max);

		if (Math.abs(_target - d_max) < swipe_threshold) {
			diff = _target * max;
		} else {
			diff = (dir ? _target - 1 : _target + 1) * max;
		}

		posX = diff;
		$$invalidate(1, activeIndicator = diff / max);

		for (let i = 0; i < items; i++) {
			let template = i < 0 ? "{{val}}" : "-{{val}}";
			let _value = max * i - posX;
			elems[i].style.cssText = non_touchingTpl.replace(template, _value).replace(template, _value);
		}

		window.removeEventListener("mousemove", moveHandler);
		window.removeEventListener("mouseup", endHandler);
		window.removeEventListener("touchmove", moveHandler);
		window.removeEventListener("touchend", endHandler);
	}

	function moveStart(e) {
		e.stopImmediatePropagation();
		e.stopPropagation();
		e.preventDefault();
		touching = true;
		x = e.touches ? e.touches[0].pageX : e.pageX;
		window.addEventListener("mousemove", moveHandler);
		window.addEventListener("mouseup", endHandler);
		window.addEventListener("touchmove", moveHandler);
		window.addEventListener("touchend", endHandler);
	}

	function changeItem(item) {
		let max = availableWidth;
		diff = max * item;
		$$invalidate(1, activeIndicator = item);
		endHandler();
	}

	function changeView() {
		changeItem(played);
		played = played < items - 1 ? ++played : 0;
	}

	const writable_props = ["transitionDuration", "showIndicators", "autoplay", "delay"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Swipe> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;

	function div2_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			$$invalidate(3, swipeWrapper = $$value);
		});
	}

	function div3_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			$$invalidate(4, swipeHandler = $$value);
		});
	}

	const click_handler = i => {
		changeItem(i);
	};

	$$self.$set = $$props => {
		if ("transitionDuration" in $$props) $$invalidate(7, transitionDuration = $$props.transitionDuration);
		if ("showIndicators" in $$props) $$invalidate(0, showIndicators = $$props.showIndicators);
		if ("autoplay" in $$props) $$invalidate(8, autoplay = $$props.autoplay);
		if ("delay" in $$props) $$invalidate(9, delay = $$props.delay);
		if ("$$scope" in $$props) $$invalidate(29, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => {
		return {
			transitionDuration,
			showIndicators,
			autoplay,
			delay,
			activeIndicator,
			indicators,
			items,
			availableWidth,
			topClearence,
			elems,
			diff,
			swipeWrapper,
			swipeHandler,
			min,
			touchingTpl,
			non_touchingTpl,
			touching,
			posX,
			dir,
			x,
			played,
			run_interval
		};
	};

	$$self.$inject_state = $$props => {
		if ("transitionDuration" in $$props) $$invalidate(7, transitionDuration = $$props.transitionDuration);
		if ("showIndicators" in $$props) $$invalidate(0, showIndicators = $$props.showIndicators);
		if ("autoplay" in $$props) $$invalidate(8, autoplay = $$props.autoplay);
		if ("delay" in $$props) $$invalidate(9, delay = $$props.delay);
		if ("activeIndicator" in $$props) $$invalidate(1, activeIndicator = $$props.activeIndicator);
		if ("indicators" in $$props) $$invalidate(2, indicators = $$props.indicators);
		if ("items" in $$props) $$invalidate(10, items = $$props.items);
		if ("availableWidth" in $$props) availableWidth = $$props.availableWidth;
		if ("topClearence" in $$props) topClearence = $$props.topClearence;
		if ("elems" in $$props) elems = $$props.elems;
		if ("diff" in $$props) diff = $$props.diff;
		if ("swipeWrapper" in $$props) $$invalidate(3, swipeWrapper = $$props.swipeWrapper);
		if ("swipeHandler" in $$props) $$invalidate(4, swipeHandler = $$props.swipeHandler);
		if ("min" in $$props) min = $$props.min;
		if ("touchingTpl" in $$props) touchingTpl = $$props.touchingTpl;
		if ("non_touchingTpl" in $$props) non_touchingTpl = $$props.non_touchingTpl;
		if ("touching" in $$props) touching = $$props.touching;
		if ("posX" in $$props) posX = $$props.posX;
		if ("dir" in $$props) dir = $$props.dir;
		if ("x" in $$props) x = $$props.x;
		if ("played" in $$props) played = $$props.played;
		if ("run_interval" in $$props) $$invalidate(17, run_interval = $$props.run_interval);
	};

	$$self.$$.update = () => {
		if ($$self.$$.dirty[0] & /*items*/ 1024) {
			 $$invalidate(2, indicators = Array(items));
		}

		if ($$self.$$.dirty[0] & /*autoplay, run_interval, delay*/ 131840) {
			 {
				if (autoplay && !run_interval) {
					$$invalidate(17, run_interval = setInterval(changeView, delay));
				}

				if (!autoplay && run_interval) {
					clearInterval(run_interval);
					$$invalidate(17, run_interval = false);
				}
			}
		}
	};

	return [
		showIndicators,
		activeIndicator,
		indicators,
		swipeWrapper,
		swipeHandler,
		moveStart,
		changeItem,
		transitionDuration,
		autoplay,
		delay,
		items,
		availableWidth,
		elems,
		diff,
		touching,
		posX,
		played,
		run_interval,
		x,
		topClearence,
		min,
		touchingTpl,
		non_touchingTpl,
		dir,
		update,
		init,
		moveHandler,
		endHandler,
		changeView,
		$$scope,
		$$slots,
		div2_binding,
		div3_binding,
		click_handler
	];
}

class Swipe extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(
			this,
			options,
			instance,
			create_fragment,
			safe_not_equal,
			{
				transitionDuration: 7,
				showIndicators: 0,
				autoplay: 8,
				delay: 9
			},
			[-1, -1]
		);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Swipe",
			options,
			id: create_fragment.name
		});
	}

	get transitionDuration() {
		throw new Error("<Swipe>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set transitionDuration(value) {
		throw new Error("<Swipe>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get showIndicators() {
		throw new Error("<Swipe>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set showIndicators(value) {
		throw new Error("<Swipe>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get autoplay() {
		throw new Error("<Swipe>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set autoplay(value) {
		throw new Error("<Swipe>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get delay() {
		throw new Error("<Swipe>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set delay(value) {
		throw new Error("<Swipe>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/plugins/Swipe/SwipeItem.svelte generated by Svelte v3.16.7 */

const file$1 = "src/plugins/Swipe/SwipeItem.svelte";

function create_fragment$1(ctx) {
	let div;
	let div_class_value;
	let current;
	const default_slot_template = /*$$slots*/ ctx[2].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[1], null);

	const block = {
		c: function create() {
			div = element("div");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			if (default_slot) default_slot.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", div_class_value = "swipeable-item " + /*classes*/ ctx[0] + " svelte-1c0dn3k");
			add_location(div, file$1, 17, 0, 291);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (default_slot && default_slot.p && dirty & /*$$scope*/ 2) {
				default_slot.p(get_slot_context(default_slot_template, ctx, /*$$scope*/ ctx[1], null), get_slot_changes(default_slot_template, /*$$scope*/ ctx[1], dirty, null));
			}

			if (!current || dirty & /*classes*/ 1 && div_class_value !== (div_class_value = "swipeable-item " + /*classes*/ ctx[0] + " svelte-1c0dn3k")) {
				attr_dev(div, "class", div_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (default_slot) default_slot.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { classes = "" } = $$props;
	const writable_props = ["classes"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<SwipeItem> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;

	$$self.$set = $$props => {
		if ("classes" in $$props) $$invalidate(0, classes = $$props.classes);
		if ("$$scope" in $$props) $$invalidate(1, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => {
		return { classes };
	};

	$$self.$inject_state = $$props => {
		if ("classes" in $$props) $$invalidate(0, classes = $$props.classes);
	};

	return [classes, $$scope, $$slots];
}

class SwipeItem extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { classes: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "SwipeItem",
			options,
			id: create_fragment$1.name
		});
	}

	get classes() {
		throw new Error("<SwipeItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set classes(value) {
		throw new Error("<SwipeItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/index.svelte generated by Svelte v3.16.7 */

const file$2 = "src/routes/index.svelte";

// (79:16) <SwipeItem>
function create_default_slot_24(ctx) {
	let current;

	const picture = new Picture({
			props: {
				src: "https://placeimg.com/300/300/people",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(picture.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(picture.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(picture, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(picture.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(picture, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_24.name,
		type: "slot",
		source: "(79:16) <SwipeItem>",
		ctx
	});

	return block;
}

// (82:16) <SwipeItem>
function create_default_slot_23(ctx) {
	let current;

	const picture = new Picture({
			props: {
				src: "https://placeimg.com/300/300/any",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(picture.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(picture.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(picture, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(picture.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(picture, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_23.name,
		type: "slot",
		source: "(82:16) <SwipeItem>",
		ctx
	});

	return block;
}

// (85:16) <SwipeItem>
function create_default_slot_22(ctx) {
	let current;

	const picture = new Picture({
			props: {
				src: "https://placeimg.com/300/300/arch",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(picture.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(picture.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(picture, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(picture.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(picture, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_22.name,
		type: "slot",
		source: "(85:16) <SwipeItem>",
		ctx
	});

	return block;
}

// (88:16) <SwipeItem>
function create_default_slot_21(ctx) {
	let current;

	const picture = new Picture({
			props: {
				src: "https://placeimg.com/300/300/nature",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(picture.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(picture.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(picture, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(picture.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(picture, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_21.name,
		type: "slot",
		source: "(88:16) <SwipeItem>",
		ctx
	});

	return block;
}

// (91:16) <SwipeItem>
function create_default_slot_20(ctx) {
	let current;

	const picture = new Picture({
			props: {
				src: "https://placeimg.com/300/300/tech",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(picture.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(picture.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(picture, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(picture.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(picture, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_20.name,
		type: "slot",
		source: "(91:16) <SwipeItem>",
		ctx
	});

	return block;
}

// (78:12) <Swipe>
function create_default_slot_19(ctx) {
	let t0;
	let t1;
	let t2;
	let t3;
	let current;

	const swipeitem0 = new SwipeItem({
			props: {
				$$slots: { default: [create_default_slot_24] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const swipeitem1 = new SwipeItem({
			props: {
				$$slots: { default: [create_default_slot_23] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const swipeitem2 = new SwipeItem({
			props: {
				$$slots: { default: [create_default_slot_22] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const swipeitem3 = new SwipeItem({
			props: {
				$$slots: { default: [create_default_slot_21] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const swipeitem4 = new SwipeItem({
			props: {
				$$slots: { default: [create_default_slot_20] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(swipeitem0.$$.fragment);
			t0 = space();
			create_component(swipeitem1.$$.fragment);
			t1 = space();
			create_component(swipeitem2.$$.fragment);
			t2 = space();
			create_component(swipeitem3.$$.fragment);
			t3 = space();
			create_component(swipeitem4.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(swipeitem0.$$.fragment, nodes);
			t0 = claim_space(nodes);
			claim_component(swipeitem1.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(swipeitem2.$$.fragment, nodes);
			t2 = claim_space(nodes);
			claim_component(swipeitem3.$$.fragment, nodes);
			t3 = claim_space(nodes);
			claim_component(swipeitem4.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(swipeitem0, target, anchor);
			insert_dev(target, t0, anchor);
			mount_component(swipeitem1, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(swipeitem2, target, anchor);
			insert_dev(target, t2, anchor);
			mount_component(swipeitem3, target, anchor);
			insert_dev(target, t3, anchor);
			mount_component(swipeitem4, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const swipeitem0_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				swipeitem0_changes.$$scope = { dirty, ctx };
			}

			swipeitem0.$set(swipeitem0_changes);
			const swipeitem1_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				swipeitem1_changes.$$scope = { dirty, ctx };
			}

			swipeitem1.$set(swipeitem1_changes);
			const swipeitem2_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				swipeitem2_changes.$$scope = { dirty, ctx };
			}

			swipeitem2.$set(swipeitem2_changes);
			const swipeitem3_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				swipeitem3_changes.$$scope = { dirty, ctx };
			}

			swipeitem3.$set(swipeitem3_changes);
			const swipeitem4_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				swipeitem4_changes.$$scope = { dirty, ctx };
			}

			swipeitem4.$set(swipeitem4_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(swipeitem0.$$.fragment, local);
			transition_in(swipeitem1.$$.fragment, local);
			transition_in(swipeitem2.$$.fragment, local);
			transition_in(swipeitem3.$$.fragment, local);
			transition_in(swipeitem4.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(swipeitem0.$$.fragment, local);
			transition_out(swipeitem1.$$.fragment, local);
			transition_out(swipeitem2.$$.fragment, local);
			transition_out(swipeitem3.$$.fragment, local);
			transition_out(swipeitem4.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(swipeitem0, detaching);
			if (detaching) detach_dev(t0);
			destroy_component(swipeitem1, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(swipeitem2, detaching);
			if (detaching) detach_dev(t2);
			destroy_component(swipeitem3, detaching);
			if (detaching) detach_dev(t3);
			destroy_component(swipeitem4, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_19.name,
		type: "slot",
		source: "(78:12) <Swipe>",
		ctx
	});

	return block;
}

// (99:16) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_18(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test1");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test1");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_18.name,
		type: "slot",
		source: "(99:16) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (102:16) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_17(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test12");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test12");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_17.name,
		type: "slot",
		source: "(102:16) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (105:16) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_16(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test123");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test123");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_16.name,
		type: "slot",
		source: "(105:16) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (125:16) <Button is="warning" on:click="{e => console.log(e)}">
function create_default_slot_15(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Submit");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Submit");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_15.name,
		type: "slot",
		source: "(125:16) <Button is=\\\"warning\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (206:4) <Button is="success" type="submit">
function create_default_slot_14(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Submit");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Submit");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_14.name,
		type: "slot",
		source: "(206:4) <Button is=\\\"success\\\" type=\\\"submit\\\">",
		ctx
	});

	return block;
}

// (162:0) <Form on:submit="{(e) => console.log(e)}" name="main-form">
function create_default_slot_13(ctx) {
	let br0;
	let t0;
	let br1;
	let t1;
	let t2;
	let br2;
	let t3;
	let br3;
	let t4;
	let t5;
	let br4;
	let t6;
	let br5;
	let t7;
	let t8;
	let br6;
	let t9;
	let br7;
	let t10;
	let t11;
	let br8;
	let t12;
	let br9;
	let t13;
	let t14;
	let br10;
	let t15;
	let br11;
	let t16;
	let t17;
	let br12;
	let t18;
	let br13;
	let t19;
	let t20;
	let br14;
	let t21;
	let br15;
	let t22;
	let t23;
	let br16;
	let t24;
	let br17;
	let t25;
	let current;

	const input0 = new Input({
			props: {
				name: "test1",
				type: "number",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input1 = new Input({
			props: {
				name: "test2",
				type: "text",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input2 = new Input({
			props: {
				name: "test3",
				type: "email",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input3 = new Input({
			props: {
				name: "test4",
				type: "url",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input4 = new Input({
			props: {
				name: "test5",
				type: "search",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input5 = new Input({
			props: {
				name: "test6",
				type: "date",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input6 = new Input({
			props: {
				name: "test7",
				type: "password",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input7 = new Input({
			props: {
				name: "test8",
				type: "tel",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const button = new Button({
			props: {
				is: "success",
				type: "submit",
				$$slots: { default: [create_default_slot_14] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			br0 = element("br");
			t0 = space();
			br1 = element("br");
			t1 = space();
			create_component(input0.$$.fragment);
			t2 = space();
			br2 = element("br");
			t3 = space();
			br3 = element("br");
			t4 = space();
			create_component(input1.$$.fragment);
			t5 = space();
			br4 = element("br");
			t6 = space();
			br5 = element("br");
			t7 = space();
			create_component(input2.$$.fragment);
			t8 = space();
			br6 = element("br");
			t9 = space();
			br7 = element("br");
			t10 = space();
			create_component(input3.$$.fragment);
			t11 = space();
			br8 = element("br");
			t12 = space();
			br9 = element("br");
			t13 = space();
			create_component(input4.$$.fragment);
			t14 = space();
			br10 = element("br");
			t15 = space();
			br11 = element("br");
			t16 = space();
			create_component(input5.$$.fragment);
			t17 = space();
			br12 = element("br");
			t18 = space();
			br13 = element("br");
			t19 = space();
			create_component(input6.$$.fragment);
			t20 = space();
			br14 = element("br");
			t21 = space();
			br15 = element("br");
			t22 = space();
			create_component(input7.$$.fragment);
			t23 = space();
			br16 = element("br");
			t24 = space();
			br17 = element("br");
			t25 = space();
			create_component(button.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			br0 = claim_element(nodes, "BR", {});
			t0 = claim_space(nodes);
			br1 = claim_element(nodes, "BR", {});
			t1 = claim_space(nodes);
			claim_component(input0.$$.fragment, nodes);
			t2 = claim_space(nodes);
			br2 = claim_element(nodes, "BR", {});
			t3 = claim_space(nodes);
			br3 = claim_element(nodes, "BR", {});
			t4 = claim_space(nodes);
			claim_component(input1.$$.fragment, nodes);
			t5 = claim_space(nodes);
			br4 = claim_element(nodes, "BR", {});
			t6 = claim_space(nodes);
			br5 = claim_element(nodes, "BR", {});
			t7 = claim_space(nodes);
			claim_component(input2.$$.fragment, nodes);
			t8 = claim_space(nodes);
			br6 = claim_element(nodes, "BR", {});
			t9 = claim_space(nodes);
			br7 = claim_element(nodes, "BR", {});
			t10 = claim_space(nodes);
			claim_component(input3.$$.fragment, nodes);
			t11 = claim_space(nodes);
			br8 = claim_element(nodes, "BR", {});
			t12 = claim_space(nodes);
			br9 = claim_element(nodes, "BR", {});
			t13 = claim_space(nodes);
			claim_component(input4.$$.fragment, nodes);
			t14 = claim_space(nodes);
			br10 = claim_element(nodes, "BR", {});
			t15 = claim_space(nodes);
			br11 = claim_element(nodes, "BR", {});
			t16 = claim_space(nodes);
			claim_component(input5.$$.fragment, nodes);
			t17 = claim_space(nodes);
			br12 = claim_element(nodes, "BR", {});
			t18 = claim_space(nodes);
			br13 = claim_element(nodes, "BR", {});
			t19 = claim_space(nodes);
			claim_component(input6.$$.fragment, nodes);
			t20 = claim_space(nodes);
			br14 = claim_element(nodes, "BR", {});
			t21 = claim_space(nodes);
			br15 = claim_element(nodes, "BR", {});
			t22 = claim_space(nodes);
			claim_component(input7.$$.fragment, nodes);
			t23 = claim_space(nodes);
			br16 = claim_element(nodes, "BR", {});
			t24 = claim_space(nodes);
			br17 = claim_element(nodes, "BR", {});
			t25 = claim_space(nodes);
			claim_component(button.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			add_location(br0, file$2, 162, 4, 4200);
			add_location(br1, file$2, 163, 4, 4209);
			add_location(br2, file$2, 167, 4, 4283);
			add_location(br3, file$2, 168, 4, 4292);
			add_location(br4, file$2, 172, 4, 4364);
			add_location(br5, file$2, 173, 4, 4373);
			add_location(br6, file$2, 177, 4, 4446);
			add_location(br7, file$2, 178, 4, 4455);
			add_location(br8, file$2, 182, 4, 4526);
			add_location(br9, file$2, 183, 4, 4535);
			add_location(br10, file$2, 187, 4, 4609);
			add_location(br11, file$2, 188, 4, 4618);
			add_location(br12, file$2, 192, 4, 4690);
			add_location(br13, file$2, 193, 4, 4699);
			add_location(br14, file$2, 197, 4, 4775);
			add_location(br15, file$2, 198, 4, 4784);
			add_location(br16, file$2, 202, 4, 4855);
			add_location(br17, file$2, 203, 4, 4864);
		},
		m: function mount(target, anchor) {
			insert_dev(target, br0, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, br1, anchor);
			insert_dev(target, t1, anchor);
			mount_component(input0, target, anchor);
			insert_dev(target, t2, anchor);
			insert_dev(target, br2, anchor);
			insert_dev(target, t3, anchor);
			insert_dev(target, br3, anchor);
			insert_dev(target, t4, anchor);
			mount_component(input1, target, anchor);
			insert_dev(target, t5, anchor);
			insert_dev(target, br4, anchor);
			insert_dev(target, t6, anchor);
			insert_dev(target, br5, anchor);
			insert_dev(target, t7, anchor);
			mount_component(input2, target, anchor);
			insert_dev(target, t8, anchor);
			insert_dev(target, br6, anchor);
			insert_dev(target, t9, anchor);
			insert_dev(target, br7, anchor);
			insert_dev(target, t10, anchor);
			mount_component(input3, target, anchor);
			insert_dev(target, t11, anchor);
			insert_dev(target, br8, anchor);
			insert_dev(target, t12, anchor);
			insert_dev(target, br9, anchor);
			insert_dev(target, t13, anchor);
			mount_component(input4, target, anchor);
			insert_dev(target, t14, anchor);
			insert_dev(target, br10, anchor);
			insert_dev(target, t15, anchor);
			insert_dev(target, br11, anchor);
			insert_dev(target, t16, anchor);
			mount_component(input5, target, anchor);
			insert_dev(target, t17, anchor);
			insert_dev(target, br12, anchor);
			insert_dev(target, t18, anchor);
			insert_dev(target, br13, anchor);
			insert_dev(target, t19, anchor);
			mount_component(input6, target, anchor);
			insert_dev(target, t20, anchor);
			insert_dev(target, br14, anchor);
			insert_dev(target, t21, anchor);
			insert_dev(target, br15, anchor);
			insert_dev(target, t22, anchor);
			mount_component(input7, target, anchor);
			insert_dev(target, t23, anchor);
			insert_dev(target, br16, anchor);
			insert_dev(target, t24, anchor);
			insert_dev(target, br17, anchor);
			insert_dev(target, t25, anchor);
			mount_component(button, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const button_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(input0.$$.fragment, local);
			transition_in(input1.$$.fragment, local);
			transition_in(input2.$$.fragment, local);
			transition_in(input3.$$.fragment, local);
			transition_in(input4.$$.fragment, local);
			transition_in(input5.$$.fragment, local);
			transition_in(input6.$$.fragment, local);
			transition_in(input7.$$.fragment, local);
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(input0.$$.fragment, local);
			transition_out(input1.$$.fragment, local);
			transition_out(input2.$$.fragment, local);
			transition_out(input3.$$.fragment, local);
			transition_out(input4.$$.fragment, local);
			transition_out(input5.$$.fragment, local);
			transition_out(input6.$$.fragment, local);
			transition_out(input7.$$.fragment, local);
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(br0);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(br1);
			if (detaching) detach_dev(t1);
			destroy_component(input0, detaching);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(br2);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(br3);
			if (detaching) detach_dev(t4);
			destroy_component(input1, detaching);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(br4);
			if (detaching) detach_dev(t6);
			if (detaching) detach_dev(br5);
			if (detaching) detach_dev(t7);
			destroy_component(input2, detaching);
			if (detaching) detach_dev(t8);
			if (detaching) detach_dev(br6);
			if (detaching) detach_dev(t9);
			if (detaching) detach_dev(br7);
			if (detaching) detach_dev(t10);
			destroy_component(input3, detaching);
			if (detaching) detach_dev(t11);
			if (detaching) detach_dev(br8);
			if (detaching) detach_dev(t12);
			if (detaching) detach_dev(br9);
			if (detaching) detach_dev(t13);
			destroy_component(input4, detaching);
			if (detaching) detach_dev(t14);
			if (detaching) detach_dev(br10);
			if (detaching) detach_dev(t15);
			if (detaching) detach_dev(br11);
			if (detaching) detach_dev(t16);
			destroy_component(input5, detaching);
			if (detaching) detach_dev(t17);
			if (detaching) detach_dev(br12);
			if (detaching) detach_dev(t18);
			if (detaching) detach_dev(br13);
			if (detaching) detach_dev(t19);
			destroy_component(input6, detaching);
			if (detaching) detach_dev(t20);
			if (detaching) detach_dev(br14);
			if (detaching) detach_dev(t21);
			if (detaching) detach_dev(br15);
			if (detaching) detach_dev(t22);
			destroy_component(input7, detaching);
			if (detaching) detach_dev(t23);
			if (detaching) detach_dev(br16);
			if (detaching) detach_dev(t24);
			if (detaching) detach_dev(br17);
			if (detaching) detach_dev(t25);
			destroy_component(button, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_13.name,
		type: "slot",
		source: "(162:0) <Form on:submit=\\\"{(e) => console.log(e)}\\\" name=\\\"main-form\\\">",
		ctx
	});

	return block;
}

// (261:8) <Button on:click="{e => console.log(e)}">
function create_default_slot_12(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_12.name,
		type: "slot",
		source: "(261:8) <Button on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (264:8) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_11(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_11.name,
		type: "slot",
		source: "(264:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (267:8) <Button is="success" on:click="{e => console.log(e)}" ariaLabel="text">
function create_default_slot_10(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_10.name,
		type: "slot",
		source: "(267:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\" ariaLabel=\\\"text\\\">",
		ctx
	});

	return block;
}

// (271:8) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_9(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_9.name,
		type: "slot",
		source: "(271:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (275:8) <Button is="warning" on:click="{e => console.log(e)}">
function create_default_slot_8(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Some example of Button");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Some example of Button");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_8.name,
		type: "slot",
		source: "(275:8) <Button is=\\\"warning\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (278:8) <Button is="danger" on:click="{e => console.log(e)}">
function create_default_slot_7(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Some example of Button");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Some example of Button");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_7.name,
		type: "slot",
		source: "(278:8) <Button is=\\\"danger\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (288:8) <Button on:click="{e => console.log(e)}" href="#">
function create_default_slot_6(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_6.name,
		type: "slot",
		source: "(288:8) <Button on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (291:8) <Button is="success" on:click="{e => console.log(e)}" href="#">
function create_default_slot_5(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_5.name,
		type: "slot",
		source: "(291:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (294:8) <Button is="success" on:click="{e => console.log(e)}" href="#">
function create_default_slot_4(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_4.name,
		type: "slot",
		source: "(294:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (298:8) <Button is="success" on:click="{e => console.log(e)}" href="#">
function create_default_slot_3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(298:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (302:8) <Button is="warning" on:click="{e => console.log(e)}" href="#">
function create_default_slot_2(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Some example of Button");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Some example of Button");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(302:8) <Button is=\\\"warning\\\" on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (305:8) <Button is="danger" on:click="{e => console.log(e)}" href="#">
function create_default_slot_1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Some example of Button");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Some example of Button");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(305:8) <Button is=\\\"danger\\\" on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (357:0) <Picture alt="Borat" src="great-success.png" class="picture">
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("HIGH FIVE!");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "HIGH FIVE!");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(357:0) <Picture alt=\\\"Borat\\\" src=\\\"great-success.png\\\" class=\\\"picture\\\">",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let t0;
	let section2;
	let section0;
	let div0;
	let t1;
	let ul0;
	let li0;
	let t2;
	let li1;
	let t3;
	let li2;
	let t4;
	let li3;
	let br0;
	let t5;
	let t6;
	let datalist0;
	let option0;
	let option1;
	let option2;
	let t7;
	let li4;
	let t8;
	let t9;
	let section1;
	let div1;
	let t10;
	let span0;
	let h3;
	let t11;
	let t12;
	let p0;
	let t13;
	let t14;
	let t15;
	let br1;
	let t16;
	let h10;
	let t17;
	let t18;
	let br2;
	let t19;
	let p1;
	let t20;
	let t21;
	let br3;
	let t22;
	let br4;
	let t23;
	let t24;
	let t25;
	let h11;
	let t26;
	let t27;
	let br5;
	let t28;
	let br6;
	let t29;
	let h20;
	let t30;
	let t31;
	let br7;
	let t32;
	let br8;
	let t33;
	let p2;
	let t34;
	let t35;
	let p3;
	let t36;
	let t37;
	let p4;
	let t38;
	let t39;
	let br9;
	let t40;
	let br10;
	let t41;
	let h21;
	let t42;
	let t43;
	let ul1;
	let li5;
	let span1;
	let t44;
	let t45;
	let t46;
	let li6;
	let span2;
	let t47;
	let t48;
	let t49;
	let li7;
	let span3;
	let t50;
	let t51;
	let t52;
	let br11;
	let t53;
	let br12;
	let t54;
	let section3;
	let div2;
	let br13;
	let t55;
	let br14;
	let t56;
	let br15;
	let t57;
	let t58;
	let br16;
	let t59;
	let br17;
	let t60;
	let t61;
	let br18;
	let t62;
	let br19;
	let t63;
	let t64;
	let br20;
	let t65;
	let br21;
	let t66;
	let t67;
	let br22;
	let t68;
	let br23;
	let t69;
	let t70;
	let br24;
	let t71;
	let br25;
	let t72;
	let t73;
	let br26;
	let t74;
	let br27;
	let t75;
	let div3;
	let br28;
	let t76;
	let br29;
	let t77;
	let br30;
	let t78;
	let t79;
	let br31;
	let t80;
	let br32;
	let t81;
	let t82;
	let br33;
	let t83;
	let br34;
	let t84;
	let t85;
	let br35;
	let t86;
	let br36;
	let t87;
	let t88;
	let br37;
	let t89;
	let br38;
	let t90;
	let t91;
	let br39;
	let t92;
	let br40;
	let t93;
	let t94;
	let br41;
	let t95;
	let br42;
	let t96;
	let br43;
	let t97;
	let br44;
	let t98;
	let h22;
	let t99;
	let t100;
	let br45;
	let t101;
	let br46;
	let t102;
	let section4;
	let t103;
	let br47;
	let t104;
	let br48;
	let t105;
	let t106;
	let br49;
	let t107;
	let br50;
	let t108;
	let t109;
	let datalist1;
	let option3;
	let option4;
	let option5;
	let t110;
	let label;
	let t111;
	let t112;
	let input4;
	let t113;
	let br51;
	let t114;
	let br52;
	let t115;
	let a;
	let t116;
	let t117;
	let br53;
	let t118;
	let br54;
	let t119;
	let button16;
	let t120;
	let t121;
	let br55;
	let t122;
	let br56;
	let t123;
	let h23;
	let t124;
	let t125;
	let t126;
	let br57;
	let t127;
	let br58;
	let t128;
	let t129;
	let br59;
	let t130;
	let br60;
	let t131;
	let h24;
	let t132;
	let t133;
	let p5;
	let strong;
	let t134;
	let t135;
	let p6;
	let t136;
	let current;

	const swipe = new Swipe({
			props: {
				$$slots: { default: [create_default_slot_19] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const button0 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_18] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*click_handler*/ ctx[0]);

	const button1 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_17] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*click_handler_1*/ ctx[1]);

	const button2 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_16] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button2.$on("click", /*click_handler_2*/ ctx[2]);

	const input0 = new Input({
			props: {
				type: "number",
				name: "num",
				list: "sum-suggestions",
				placeholder: "Num",
				autoselect: true,
				align: "right"
			},
			$$inline: true
		});

	const button3 = new Button({
			props: {
				is: "warning",
				$$slots: { default: [create_default_slot_15] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button3.$on("click", /*click_handler_3*/ ctx[3]);
	const progress = new Progress({ props: { value: "65" }, $$inline: true });

	const avatar = new Avatar({
			props: {
				src: "https://placeimg.com/300/300/people",
				alt: "avatar"
			},
			$$inline: true
		});

	const rate = new Rate({ $$inline: true });
	const divider = new Divider({ $$inline: true });

	const form = new Form({
			props: {
				name: "main-form",
				$$slots: { default: [create_default_slot_13] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	form.$on("submit", /*submit_handler*/ ctx[4]);

	const icon0 = new Icon({
			props: { size: "small", type: "heart-filled" },
			$$inline: true
		});

	const icon1 = new Icon({
			props: {
				size: "small",
				type: "heart-filled",
				is: "warning"
			},
			$$inline: true
		});

	const icon2 = new Icon({
			props: {
				size: "small",
				type: "heart-filled",
				is: "danger"
			},
			$$inline: true
		});

	const icon3 = new Icon({
			props: { type: "heart-filled" },
			$$inline: true
		});

	const icon4 = new Icon({
			props: { type: "heart-filled", is: "warning" },
			$$inline: true
		});

	const icon5 = new Icon({
			props: { type: "heart-filled", is: "danger" },
			$$inline: true
		});

	const icon6 = new Icon({
			props: { size: "big", type: "heart-filled" },
			$$inline: true
		});

	const icon7 = new Icon({
			props: {
				size: "big",
				type: "heart-filled",
				is: "warning"
			},
			$$inline: true
		});

	const icon8 = new Icon({
			props: {
				size: "big",
				type: "heart-filled",
				is: "danger"
			},
			$$inline: true
		});

	const button4 = new Button({
			props: {
				$$slots: { default: [create_default_slot_12] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button4.$on("click", /*click_handler_4*/ ctx[5]);

	const button5 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_11] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button5.$on("click", /*click_handler_5*/ ctx[6]);

	const button6 = new Button({
			props: {
				is: "success",
				ariaLabel: "text",
				$$slots: { default: [create_default_slot_10] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button6.$on("click", /*click_handler_6*/ ctx[7]);

	const button7 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_9] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button7.$on("click", /*click_handler_7*/ ctx[8]);

	const button8 = new Button({
			props: {
				is: "warning",
				$$slots: { default: [create_default_slot_8] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button8.$on("click", /*click_handler_8*/ ctx[9]);

	const button9 = new Button({
			props: {
				is: "danger",
				$$slots: { default: [create_default_slot_7] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button9.$on("click", /*click_handler_9*/ ctx[10]);

	const button10 = new Button({
			props: {
				href: "#",
				$$slots: { default: [create_default_slot_6] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button10.$on("click", /*click_handler_10*/ ctx[11]);

	const button11 = new Button({
			props: {
				is: "success",
				href: "#",
				$$slots: { default: [create_default_slot_5] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button11.$on("click", /*click_handler_11*/ ctx[12]);

	const button12 = new Button({
			props: {
				is: "success",
				href: "#",
				$$slots: { default: [create_default_slot_4] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button12.$on("click", /*click_handler_12*/ ctx[13]);

	const button13 = new Button({
			props: {
				is: "success",
				href: "#",
				$$slots: { default: [create_default_slot_3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button13.$on("click", /*click_handler_13*/ ctx[14]);

	const button14 = new Button({
			props: {
				is: "warning",
				href: "#",
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button14.$on("click", /*click_handler_14*/ ctx[15]);

	const button15 = new Button({
			props: {
				is: "danger",
				href: "#",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button15.$on("click", /*click_handler_15*/ ctx[16]);

	const input1 = new Input({
			props: { rows: 2, name: "tex", list: "lis" },
			$$inline: true
		});

	const input2 = new Input({
			props: {
				name: "tex1",
				list: "lis",
				placeholder: "Some placeholder text"
			},
			$$inline: true
		});

	const input3 = new Input({
			props: {
				type: "number",
				name: "tex2",
				list: "lis"
			},
			$$inline: true
		});

	const picture0 = new Picture({
			props: {
				alt: "Borat",
				src: "great-success.png",
				class: "picture",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const picture1 = new Picture({
			props: {
				src: "https://placeimg.com/1000/1000/any",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			t0 = space();
			section2 = element("section");
			section0 = element("section");
			div0 = element("div");
			create_component(swipe.$$.fragment);
			t1 = space();
			ul0 = element("ul");
			li0 = element("li");
			create_component(button0.$$.fragment);
			t2 = space();
			li1 = element("li");
			create_component(button1.$$.fragment);
			t3 = space();
			li2 = element("li");
			create_component(button2.$$.fragment);
			t4 = space();
			li3 = element("li");
			br0 = element("br");
			t5 = space();
			create_component(input0.$$.fragment);
			t6 = space();
			datalist0 = element("datalist");
			option0 = element("option");
			option1 = element("option");
			option2 = element("option");
			t7 = space();
			li4 = element("li");
			create_component(button3.$$.fragment);
			t8 = space();
			create_component(progress.$$.fragment);
			t9 = space();
			section1 = element("section");
			div1 = element("div");
			create_component(avatar.$$.fragment);
			t10 = space();
			span0 = element("span");
			h3 = element("h3");
			t11 = text("Tina Kandelaki");
			t12 = space();
			p0 = element("p");
			t13 = text("ORG charity charitify");
			t14 = space();
			create_component(rate.$$.fragment);
			t15 = space();
			br1 = element("br");
			t16 = space();
			h10 = element("h1");
			t17 = text("The main title");
			t18 = space();
			br2 = element("br");
			t19 = space();
			p1 = element("p");
			t20 = text("A small description that describes the title above and just makes text longer.");
			t21 = space();
			br3 = element("br");
			t22 = space();
			br4 = element("br");
			t23 = space();
			create_component(divider.$$.fragment);
			t24 = space();
			create_component(form.$$.fragment);
			t25 = space();
			h11 = element("h1");
			t26 = text("Charitify - is the application for helping those in need.");
			t27 = space();
			br5 = element("br");
			t28 = space();
			br6 = element("br");
			t29 = space();
			h20 = element("h2");
			t30 = text("Typography");
			t31 = space();
			br7 = element("br");
			t32 = space();
			br8 = element("br");
			t33 = space();
			p2 = element("p");
			t34 = text("Few paragraphs to text fonts");
			t35 = space();
			p3 = element("p");
			t36 = text("Декілька параграфів для тесту тексту");
			t37 = space();
			p4 = element("p");
			t38 = text("Несколько параграфов для теста текста");
			t39 = space();
			br9 = element("br");
			t40 = space();
			br10 = element("br");
			t41 = space();
			h21 = element("h2");
			t42 = text("Interactive elements");
			t43 = space();
			ul1 = element("ul");
			li5 = element("li");
			span1 = element("span");
			create_component(icon0.$$.fragment);
			t44 = space();
			create_component(icon1.$$.fragment);
			t45 = space();
			create_component(icon2.$$.fragment);
			t46 = space();
			li6 = element("li");
			span2 = element("span");
			create_component(icon3.$$.fragment);
			t47 = space();
			create_component(icon4.$$.fragment);
			t48 = space();
			create_component(icon5.$$.fragment);
			t49 = space();
			li7 = element("li");
			span3 = element("span");
			create_component(icon6.$$.fragment);
			t50 = space();
			create_component(icon7.$$.fragment);
			t51 = space();
			create_component(icon8.$$.fragment);
			t52 = space();
			br11 = element("br");
			t53 = space();
			br12 = element("br");
			t54 = space();
			section3 = element("section");
			div2 = element("div");
			br13 = element("br");
			t55 = text("\n        Buttons\n        ");
			br14 = element("br");
			t56 = space();
			br15 = element("br");
			t57 = space();
			create_component(button4.$$.fragment);
			t58 = space();
			br16 = element("br");
			t59 = space();
			br17 = element("br");
			t60 = space();
			create_component(button5.$$.fragment);
			t61 = space();
			br18 = element("br");
			t62 = space();
			br19 = element("br");
			t63 = space();
			create_component(button6.$$.fragment);
			t64 = space();
			br20 = element("br");
			t65 = space();
			br21 = element("br");
			t66 = text("\n        With text\n        ");
			create_component(button7.$$.fragment);
			t67 = text("\n        and behind.\n        ");
			br22 = element("br");
			t68 = space();
			br23 = element("br");
			t69 = space();
			create_component(button8.$$.fragment);
			t70 = space();
			br24 = element("br");
			t71 = space();
			br25 = element("br");
			t72 = space();
			create_component(button9.$$.fragment);
			t73 = space();
			br26 = element("br");
			t74 = space();
			br27 = element("br");
			t75 = space();
			div3 = element("div");
			br28 = element("br");
			t76 = text("\n        Links as buttons\n        ");
			br29 = element("br");
			t77 = space();
			br30 = element("br");
			t78 = space();
			create_component(button10.$$.fragment);
			t79 = space();
			br31 = element("br");
			t80 = space();
			br32 = element("br");
			t81 = space();
			create_component(button11.$$.fragment);
			t82 = space();
			br33 = element("br");
			t83 = space();
			br34 = element("br");
			t84 = space();
			create_component(button12.$$.fragment);
			t85 = space();
			br35 = element("br");
			t86 = space();
			br36 = element("br");
			t87 = text("\n        With text\n        ");
			create_component(button13.$$.fragment);
			t88 = text("\n        and behind.\n        ");
			br37 = element("br");
			t89 = space();
			br38 = element("br");
			t90 = space();
			create_component(button14.$$.fragment);
			t91 = space();
			br39 = element("br");
			t92 = space();
			br40 = element("br");
			t93 = space();
			create_component(button15.$$.fragment);
			t94 = space();
			br41 = element("br");
			t95 = space();
			br42 = element("br");
			t96 = space();
			br43 = element("br");
			t97 = space();
			br44 = element("br");
			t98 = space();
			h22 = element("h2");
			t99 = text("Input fields");
			t100 = space();
			br45 = element("br");
			t101 = space();
			br46 = element("br");
			t102 = space();
			section4 = element("section");
			create_component(input1.$$.fragment);
			t103 = space();
			br47 = element("br");
			t104 = space();
			br48 = element("br");
			t105 = space();
			create_component(input2.$$.fragment);
			t106 = space();
			br49 = element("br");
			t107 = space();
			br50 = element("br");
			t108 = space();
			create_component(input3.$$.fragment);
			t109 = space();
			datalist1 = element("datalist");
			option3 = element("option");
			option4 = element("option");
			option5 = element("option");
			t110 = space();
			label = element("label");
			t111 = text("label");
			t112 = space();
			input4 = element("input");
			t113 = space();
			br51 = element("br");
			t114 = space();
			br52 = element("br");
			t115 = space();
			a = element("a");
			t116 = text("Some link");
			t117 = space();
			br53 = element("br");
			t118 = space();
			br54 = element("br");
			t119 = space();
			button16 = element("button");
			t120 = text("Button example");
			t121 = space();
			br55 = element("br");
			t122 = space();
			br56 = element("br");
			t123 = space();
			h23 = element("h2");
			t124 = text("Images");
			t125 = space();
			create_component(picture0.$$.fragment);
			t126 = space();
			br57 = element("br");
			t127 = space();
			br58 = element("br");
			t128 = space();
			create_component(picture1.$$.fragment);
			t129 = space();
			br59 = element("br");
			t130 = space();
			br60 = element("br");
			t131 = space();
			h24 = element("h2");
			t132 = text("Other");
			t133 = space();
			p5 = element("p");
			strong = element("strong");
			t134 = text("Try editing this file (src/routes/index.svelte) to test live reloading.");
			t135 = space();
			p6 = element("p");
			t136 = text("A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.");
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			section2 = claim_element(nodes, "SECTION", { class: true });
			var section2_nodes = children(section2);
			section0 = claim_element(section2_nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			div0 = claim_element(section0_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(swipe.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(section0_nodes);
			ul0 = claim_element(section0_nodes, "UL", { class: true });
			var ul0_nodes = children(ul0);
			li0 = claim_element(ul0_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			claim_component(button0.$$.fragment, li0_nodes);
			li0_nodes.forEach(detach_dev);
			t2 = claim_space(ul0_nodes);
			li1 = claim_element(ul0_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			claim_component(button1.$$.fragment, li1_nodes);
			li1_nodes.forEach(detach_dev);
			t3 = claim_space(ul0_nodes);
			li2 = claim_element(ul0_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			claim_component(button2.$$.fragment, li2_nodes);
			li2_nodes.forEach(detach_dev);
			t4 = claim_space(ul0_nodes);
			li3 = claim_element(ul0_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			br0 = claim_element(li3_nodes, "BR", {});
			t5 = claim_space(li3_nodes);
			claim_component(input0.$$.fragment, li3_nodes);
			t6 = claim_space(li3_nodes);
			datalist0 = claim_element(li3_nodes, "DATALIST", { id: true });
			var datalist0_nodes = children(datalist0);
			option0 = claim_element(datalist0_nodes, "OPTION", { value: true });
			var option0_nodes = children(option0);
			option0_nodes.forEach(detach_dev);
			option1 = claim_element(datalist0_nodes, "OPTION", { value: true });
			var option1_nodes = children(option1);
			option1_nodes.forEach(detach_dev);
			option2 = claim_element(datalist0_nodes, "OPTION", { value: true });
			var option2_nodes = children(option2);
			option2_nodes.forEach(detach_dev);
			datalist0_nodes.forEach(detach_dev);
			li3_nodes.forEach(detach_dev);
			t7 = claim_space(ul0_nodes);
			li4 = claim_element(ul0_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			claim_component(button3.$$.fragment, li4_nodes);
			li4_nodes.forEach(detach_dev);
			ul0_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t8 = claim_space(section2_nodes);
			claim_component(progress.$$.fragment, section2_nodes);
			t9 = claim_space(section2_nodes);
			section1 = claim_element(section2_nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			div1 = claim_element(section1_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(avatar.$$.fragment, div1_nodes);
			t10 = claim_space(div1_nodes);
			span0 = claim_element(div1_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			h3 = claim_element(span0_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t11 = claim_text(h3_nodes, "Tina Kandelaki");
			h3_nodes.forEach(detach_dev);
			t12 = claim_space(span0_nodes);
			p0 = claim_element(span0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t13 = claim_text(p0_nodes, "ORG charity charitify");
			p0_nodes.forEach(detach_dev);
			span0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t14 = claim_space(section1_nodes);
			claim_component(rate.$$.fragment, section1_nodes);
			section1_nodes.forEach(detach_dev);
			t15 = claim_space(section2_nodes);
			br1 = claim_element(section2_nodes, "BR", {});
			t16 = claim_space(section2_nodes);
			h10 = claim_element(section2_nodes, "H1", { class: true });
			var h10_nodes = children(h10);
			t17 = claim_text(h10_nodes, "The main title");
			h10_nodes.forEach(detach_dev);
			t18 = claim_space(section2_nodes);
			br2 = claim_element(section2_nodes, "BR", {});
			t19 = claim_space(section2_nodes);
			p1 = claim_element(section2_nodes, "P", { class: true, style: true });
			var p1_nodes = children(p1);
			t20 = claim_text(p1_nodes, "A small description that describes the title above and just makes text longer.");
			p1_nodes.forEach(detach_dev);
			section2_nodes.forEach(detach_dev);
			t21 = claim_space(nodes);
			br3 = claim_element(nodes, "BR", {});
			t22 = claim_space(nodes);
			br4 = claim_element(nodes, "BR", {});
			t23 = claim_space(nodes);
			claim_component(divider.$$.fragment, nodes);
			t24 = claim_space(nodes);
			claim_component(form.$$.fragment, nodes);
			t25 = claim_space(nodes);
			h11 = claim_element(nodes, "H1", { class: true });
			var h11_nodes = children(h11);
			t26 = claim_text(h11_nodes, "Charitify - is the application for helping those in need.");
			h11_nodes.forEach(detach_dev);
			t27 = claim_space(nodes);
			br5 = claim_element(nodes, "BR", {});
			t28 = claim_space(nodes);
			br6 = claim_element(nodes, "BR", {});
			t29 = claim_space(nodes);
			h20 = claim_element(nodes, "H2", { class: true });
			var h20_nodes = children(h20);
			t30 = claim_text(h20_nodes, "Typography");
			h20_nodes.forEach(detach_dev);
			t31 = claim_space(nodes);
			br7 = claim_element(nodes, "BR", {});
			t32 = claim_space(nodes);
			br8 = claim_element(nodes, "BR", {});
			t33 = claim_space(nodes);
			p2 = claim_element(nodes, "P", {});
			var p2_nodes = children(p2);
			t34 = claim_text(p2_nodes, "Few paragraphs to text fonts");
			p2_nodes.forEach(detach_dev);
			t35 = claim_space(nodes);
			p3 = claim_element(nodes, "P", {});
			var p3_nodes = children(p3);
			t36 = claim_text(p3_nodes, "Декілька параграфів для тесту тексту");
			p3_nodes.forEach(detach_dev);
			t37 = claim_space(nodes);
			p4 = claim_element(nodes, "P", {});
			var p4_nodes = children(p4);
			t38 = claim_text(p4_nodes, "Несколько параграфов для теста текста");
			p4_nodes.forEach(detach_dev);
			t39 = claim_space(nodes);
			br9 = claim_element(nodes, "BR", {});
			t40 = claim_space(nodes);
			br10 = claim_element(nodes, "BR", {});
			t41 = claim_space(nodes);
			h21 = claim_element(nodes, "H2", { class: true });
			var h21_nodes = children(h21);
			t42 = claim_text(h21_nodes, "Interactive elements");
			h21_nodes.forEach(detach_dev);
			t43 = claim_space(nodes);
			ul1 = claim_element(nodes, "UL", {});
			var ul1_nodes = children(ul1);
			li5 = claim_element(ul1_nodes, "LI", {});
			var li5_nodes = children(li5);
			span1 = claim_element(li5_nodes, "SPAN", {});
			var span1_nodes = children(span1);
			claim_component(icon0.$$.fragment, span1_nodes);
			t44 = claim_space(span1_nodes);
			claim_component(icon1.$$.fragment, span1_nodes);
			t45 = claim_space(span1_nodes);
			claim_component(icon2.$$.fragment, span1_nodes);
			span1_nodes.forEach(detach_dev);
			li5_nodes.forEach(detach_dev);
			t46 = claim_space(ul1_nodes);
			li6 = claim_element(ul1_nodes, "LI", {});
			var li6_nodes = children(li6);
			span2 = claim_element(li6_nodes, "SPAN", {});
			var span2_nodes = children(span2);
			claim_component(icon3.$$.fragment, span2_nodes);
			t47 = claim_space(span2_nodes);
			claim_component(icon4.$$.fragment, span2_nodes);
			t48 = claim_space(span2_nodes);
			claim_component(icon5.$$.fragment, span2_nodes);
			span2_nodes.forEach(detach_dev);
			li6_nodes.forEach(detach_dev);
			t49 = claim_space(ul1_nodes);
			li7 = claim_element(ul1_nodes, "LI", {});
			var li7_nodes = children(li7);
			span3 = claim_element(li7_nodes, "SPAN", {});
			var span3_nodes = children(span3);
			claim_component(icon6.$$.fragment, span3_nodes);
			t50 = claim_space(span3_nodes);
			claim_component(icon7.$$.fragment, span3_nodes);
			t51 = claim_space(span3_nodes);
			claim_component(icon8.$$.fragment, span3_nodes);
			span3_nodes.forEach(detach_dev);
			li7_nodes.forEach(detach_dev);
			ul1_nodes.forEach(detach_dev);
			t52 = claim_space(nodes);
			br11 = claim_element(nodes, "BR", {});
			t53 = claim_space(nodes);
			br12 = claim_element(nodes, "BR", {});
			t54 = claim_space(nodes);
			section3 = claim_element(nodes, "SECTION", { style: true });
			var section3_nodes = children(section3);
			div2 = claim_element(section3_nodes, "DIV", {});
			var div2_nodes = children(div2);
			br13 = claim_element(div2_nodes, "BR", {});
			t55 = claim_text(div2_nodes, "\n        Buttons\n        ");
			br14 = claim_element(div2_nodes, "BR", {});
			t56 = claim_space(div2_nodes);
			br15 = claim_element(div2_nodes, "BR", {});
			t57 = claim_space(div2_nodes);
			claim_component(button4.$$.fragment, div2_nodes);
			t58 = claim_space(div2_nodes);
			br16 = claim_element(div2_nodes, "BR", {});
			t59 = claim_space(div2_nodes);
			br17 = claim_element(div2_nodes, "BR", {});
			t60 = claim_space(div2_nodes);
			claim_component(button5.$$.fragment, div2_nodes);
			t61 = claim_space(div2_nodes);
			br18 = claim_element(div2_nodes, "BR", {});
			t62 = claim_space(div2_nodes);
			br19 = claim_element(div2_nodes, "BR", {});
			t63 = claim_space(div2_nodes);
			claim_component(button6.$$.fragment, div2_nodes);
			t64 = claim_space(div2_nodes);
			br20 = claim_element(div2_nodes, "BR", {});
			t65 = claim_space(div2_nodes);
			br21 = claim_element(div2_nodes, "BR", {});
			t66 = claim_text(div2_nodes, "\n        With text\n        ");
			claim_component(button7.$$.fragment, div2_nodes);
			t67 = claim_text(div2_nodes, "\n        and behind.\n        ");
			br22 = claim_element(div2_nodes, "BR", {});
			t68 = claim_space(div2_nodes);
			br23 = claim_element(div2_nodes, "BR", {});
			t69 = claim_space(div2_nodes);
			claim_component(button8.$$.fragment, div2_nodes);
			t70 = claim_space(div2_nodes);
			br24 = claim_element(div2_nodes, "BR", {});
			t71 = claim_space(div2_nodes);
			br25 = claim_element(div2_nodes, "BR", {});
			t72 = claim_space(div2_nodes);
			claim_component(button9.$$.fragment, div2_nodes);
			t73 = claim_space(div2_nodes);
			br26 = claim_element(div2_nodes, "BR", {});
			t74 = claim_space(div2_nodes);
			br27 = claim_element(div2_nodes, "BR", {});
			div2_nodes.forEach(detach_dev);
			t75 = claim_space(section3_nodes);
			div3 = claim_element(section3_nodes, "DIV", {});
			var div3_nodes = children(div3);
			br28 = claim_element(div3_nodes, "BR", {});
			t76 = claim_text(div3_nodes, "\n        Links as buttons\n        ");
			br29 = claim_element(div3_nodes, "BR", {});
			t77 = claim_space(div3_nodes);
			br30 = claim_element(div3_nodes, "BR", {});
			t78 = claim_space(div3_nodes);
			claim_component(button10.$$.fragment, div3_nodes);
			t79 = claim_space(div3_nodes);
			br31 = claim_element(div3_nodes, "BR", {});
			t80 = claim_space(div3_nodes);
			br32 = claim_element(div3_nodes, "BR", {});
			t81 = claim_space(div3_nodes);
			claim_component(button11.$$.fragment, div3_nodes);
			t82 = claim_space(div3_nodes);
			br33 = claim_element(div3_nodes, "BR", {});
			t83 = claim_space(div3_nodes);
			br34 = claim_element(div3_nodes, "BR", {});
			t84 = claim_space(div3_nodes);
			claim_component(button12.$$.fragment, div3_nodes);
			t85 = claim_space(div3_nodes);
			br35 = claim_element(div3_nodes, "BR", {});
			t86 = claim_space(div3_nodes);
			br36 = claim_element(div3_nodes, "BR", {});
			t87 = claim_text(div3_nodes, "\n        With text\n        ");
			claim_component(button13.$$.fragment, div3_nodes);
			t88 = claim_text(div3_nodes, "\n        and behind.\n        ");
			br37 = claim_element(div3_nodes, "BR", {});
			t89 = claim_space(div3_nodes);
			br38 = claim_element(div3_nodes, "BR", {});
			t90 = claim_space(div3_nodes);
			claim_component(button14.$$.fragment, div3_nodes);
			t91 = claim_space(div3_nodes);
			br39 = claim_element(div3_nodes, "BR", {});
			t92 = claim_space(div3_nodes);
			br40 = claim_element(div3_nodes, "BR", {});
			t93 = claim_space(div3_nodes);
			claim_component(button15.$$.fragment, div3_nodes);
			t94 = claim_space(div3_nodes);
			br41 = claim_element(div3_nodes, "BR", {});
			t95 = claim_space(div3_nodes);
			br42 = claim_element(div3_nodes, "BR", {});
			div3_nodes.forEach(detach_dev);
			section3_nodes.forEach(detach_dev);
			t96 = claim_space(nodes);
			br43 = claim_element(nodes, "BR", {});
			t97 = claim_space(nodes);
			br44 = claim_element(nodes, "BR", {});
			t98 = claim_space(nodes);
			h22 = claim_element(nodes, "H2", { class: true });
			var h22_nodes = children(h22);
			t99 = claim_text(h22_nodes, "Input fields");
			h22_nodes.forEach(detach_dev);
			t100 = claim_space(nodes);
			br45 = claim_element(nodes, "BR", {});
			t101 = claim_space(nodes);
			br46 = claim_element(nodes, "BR", {});
			t102 = claim_space(nodes);
			section4 = claim_element(nodes, "SECTION", {});
			var section4_nodes = children(section4);
			claim_component(input1.$$.fragment, section4_nodes);
			t103 = claim_space(section4_nodes);
			br47 = claim_element(section4_nodes, "BR", {});
			t104 = claim_space(section4_nodes);
			br48 = claim_element(section4_nodes, "BR", {});
			t105 = claim_space(section4_nodes);
			claim_component(input2.$$.fragment, section4_nodes);
			t106 = claim_space(section4_nodes);
			br49 = claim_element(section4_nodes, "BR", {});
			t107 = claim_space(section4_nodes);
			br50 = claim_element(section4_nodes, "BR", {});
			t108 = claim_space(section4_nodes);
			claim_component(input3.$$.fragment, section4_nodes);
			t109 = claim_space(section4_nodes);
			datalist1 = claim_element(section4_nodes, "DATALIST", { id: true });
			var datalist1_nodes = children(datalist1);
			option3 = claim_element(datalist1_nodes, "OPTION", { value: true });
			var option3_nodes = children(option3);
			option3_nodes.forEach(detach_dev);
			option4 = claim_element(datalist1_nodes, "OPTION", { value: true });
			var option4_nodes = children(option4);
			option4_nodes.forEach(detach_dev);
			option5 = claim_element(datalist1_nodes, "OPTION", { value: true });
			var option5_nodes = children(option5);
			option5_nodes.forEach(detach_dev);
			datalist1_nodes.forEach(detach_dev);
			t110 = claim_space(section4_nodes);
			label = claim_element(section4_nodes, "LABEL", { for: true, class: true });
			var label_nodes = children(label);
			t111 = claim_text(label_nodes, "label");
			label_nodes.forEach(detach_dev);
			t112 = claim_space(section4_nodes);
			input4 = claim_element(section4_nodes, "INPUT", { id: true, type: true, value: true });
			t113 = claim_space(section4_nodes);
			br51 = claim_element(section4_nodes, "BR", {});
			t114 = claim_space(section4_nodes);
			br52 = claim_element(section4_nodes, "BR", {});
			t115 = claim_space(section4_nodes);
			a = claim_element(section4_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			t116 = claim_text(a_nodes, "Some link");
			a_nodes.forEach(detach_dev);
			t117 = claim_space(section4_nodes);
			br53 = claim_element(section4_nodes, "BR", {});
			t118 = claim_space(section4_nodes);
			br54 = claim_element(section4_nodes, "BR", {});
			t119 = claim_space(section4_nodes);
			button16 = claim_element(section4_nodes, "BUTTON", { type: true, class: true });
			var button16_nodes = children(button16);
			t120 = claim_text(button16_nodes, "Button example");
			button16_nodes.forEach(detach_dev);
			section4_nodes.forEach(detach_dev);
			t121 = claim_space(nodes);
			br55 = claim_element(nodes, "BR", {});
			t122 = claim_space(nodes);
			br56 = claim_element(nodes, "BR", {});
			t123 = claim_space(nodes);
			h23 = claim_element(nodes, "H2", { class: true });
			var h23_nodes = children(h23);
			t124 = claim_text(h23_nodes, "Images");
			h23_nodes.forEach(detach_dev);
			t125 = claim_space(nodes);
			claim_component(picture0.$$.fragment, nodes);
			t126 = claim_space(nodes);
			br57 = claim_element(nodes, "BR", {});
			t127 = claim_space(nodes);
			br58 = claim_element(nodes, "BR", {});
			t128 = claim_space(nodes);
			claim_component(picture1.$$.fragment, nodes);
			t129 = claim_space(nodes);
			br59 = claim_element(nodes, "BR", {});
			t130 = claim_space(nodes);
			br60 = claim_element(nodes, "BR", {});
			t131 = claim_space(nodes);
			h24 = claim_element(nodes, "H2", { class: true });
			var h24_nodes = children(h24);
			t132 = claim_text(h24_nodes, "Other");
			h24_nodes.forEach(detach_dev);
			t133 = claim_space(nodes);
			p5 = claim_element(nodes, "P", {});
			var p5_nodes = children(p5);
			strong = claim_element(p5_nodes, "STRONG", {});
			var strong_nodes = children(strong);
			t134 = claim_text(strong_nodes, "Try editing this file (src/routes/index.svelte) to test live reloading.");
			strong_nodes.forEach(detach_dev);
			p5_nodes.forEach(detach_dev);
			t135 = claim_space(nodes);
			p6 = claim_element(nodes, "P", { style: true });
			var p6_nodes = children(p6);
			t136 = claim_text(p6_nodes, "A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.");
			p6_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - is the application for helping those in need.";
			attr_dev(div0, "class", "top-pic svelte-ycbgek");
			add_location(div0, file$2, 76, 8, 1683);
			attr_dev(li0, "class", "svelte-ycbgek");
			add_location(li0, file$2, 97, 12, 2511);
			attr_dev(li1, "class", "svelte-ycbgek");
			add_location(li1, file$2, 100, 12, 2631);
			attr_dev(li2, "class", "svelte-ycbgek");
			add_location(li2, file$2, 103, 12, 2752);
			add_location(br0, file$2, 107, 16, 2895);
			option0.__value = "20";
			option0.value = option0.__value;
			add_location(option0, file$2, 118, 20, 3246);
			option1.__value = "500";
			option1.value = option1.__value;
			add_location(option1, file$2, 119, 20, 3286);
			option2.__value = "1000";
			option2.value = option2.__value;
			add_location(option2, file$2, 120, 20, 3327);
			attr_dev(datalist0, "id", "sum-suggestions");
			add_location(datalist0, file$2, 117, 16, 3194);
			attr_dev(li3, "class", "svelte-ycbgek");
			add_location(li3, file$2, 106, 12, 2874);
			attr_dev(li4, "class", "svelte-ycbgek");
			add_location(li4, file$2, 123, 12, 3407);
			attr_dev(ul0, "class", "options svelte-ycbgek");
			add_location(ul0, file$2, 96, 8, 2478);
			attr_dev(section0, "class", "top svelte-ycbgek");
			add_location(section0, file$2, 75, 4, 1653);
			attr_dev(h3, "class", "svelte-ycbgek");
			add_location(h3, file$2, 136, 16, 3766);
			attr_dev(p0, "class", "svelte-ycbgek");
			add_location(p0, file$2, 137, 16, 3806);
			attr_dev(span0, "class", "svelte-ycbgek");
			add_location(span0, file$2, 135, 12, 3743);
			attr_dev(div1, "class", "ava-section svelte-ycbgek");
			add_location(div1, file$2, 132, 8, 3627);
			attr_dev(section1, "class", "rate-section svelte-ycbgek");
			add_location(section1, file$2, 131, 4, 3588);
			add_location(br1, file$2, 144, 4, 3907);
			attr_dev(h10, "class", "svelte-ycbgek");
			add_location(h10, file$2, 146, 4, 3917);
			add_location(br2, file$2, 148, 4, 3946);
			attr_dev(p1, "class", "text-center");
			set_style(p1, "padding", "0 10vw");
			add_location(p1, file$2, 150, 4, 3956);
			attr_dev(section2, "class", "container");
			add_location(section2, file$2, 74, 0, 1621);
			add_location(br3, file$2, 155, 0, 4112);
			add_location(br4, file$2, 156, 0, 4117);
			attr_dev(h11, "class", "svelte-ycbgek");
			add_location(h11, file$2, 208, 0, 4934);
			add_location(br5, file$2, 210, 0, 5002);
			add_location(br6, file$2, 211, 0, 5007);
			attr_dev(h20, "class", "text-success");
			add_location(h20, file$2, 213, 0, 5013);
			add_location(br7, file$2, 215, 0, 5055);
			add_location(br8, file$2, 216, 0, 5060);
			add_location(p2, file$2, 218, 0, 5066);
			add_location(p3, file$2, 219, 0, 5102);
			add_location(p4, file$2, 220, 0, 5146);
			add_location(br9, file$2, 222, 0, 5192);
			add_location(br10, file$2, 223, 0, 5197);
			attr_dev(h21, "class", "text-warning");
			add_location(h21, file$2, 225, 0, 5203);
			add_location(span1, file$2, 229, 8, 5277);
			add_location(li5, file$2, 228, 4, 5264);
			add_location(span2, file$2, 236, 8, 5511);
			add_location(li6, file$2, 235, 4, 5498);
			add_location(span3, file$2, 243, 8, 5706);
			add_location(li7, file$2, 242, 4, 5693);
			add_location(ul1, file$2, 227, 0, 5255);
			add_location(br11, file$2, 251, 0, 5924);
			add_location(br12, file$2, 252, 0, 5929);
			add_location(br13, file$2, 256, 8, 6036);
			add_location(br14, file$2, 258, 8, 6065);
			add_location(br15, file$2, 259, 8, 6078);
			add_location(br16, file$2, 261, 8, 6154);
			add_location(br17, file$2, 262, 8, 6167);
			add_location(br18, file$2, 264, 8, 6256);
			add_location(br19, file$2, 265, 8, 6269);
			add_location(br20, file$2, 267, 8, 6375);
			add_location(br21, file$2, 268, 8, 6388);
			add_location(br22, file$2, 272, 8, 6515);
			add_location(br23, file$2, 273, 8, 6528);
			add_location(br24, file$2, 275, 8, 6635);
			add_location(br25, file$2, 276, 8, 6648);
			add_location(br26, file$2, 278, 8, 6754);
			add_location(br27, file$2, 279, 8, 6767);
			add_location(div2, file$2, 255, 4, 6022);
			add_location(br28, file$2, 283, 8, 6802);
			add_location(br29, file$2, 285, 8, 6840);
			add_location(br30, file$2, 286, 8, 6853);
			add_location(br31, file$2, 288, 8, 6938);
			add_location(br32, file$2, 289, 8, 6951);
			add_location(br33, file$2, 291, 8, 7049);
			add_location(br34, file$2, 292, 8, 7062);
			add_location(br35, file$2, 294, 8, 7160);
			add_location(br36, file$2, 295, 8, 7173);
			add_location(br37, file$2, 299, 8, 7309);
			add_location(br38, file$2, 300, 8, 7322);
			add_location(br39, file$2, 302, 8, 7438);
			add_location(br40, file$2, 303, 8, 7451);
			add_location(br41, file$2, 305, 8, 7566);
			add_location(br42, file$2, 306, 8, 7579);
			add_location(div3, file$2, 282, 4, 6788);
			set_style(section3, "text-align", "center");
			set_style(section3, "display", "flex");
			set_style(section3, "justify-content", "space-around");
			add_location(section3, file$2, 254, 0, 5935);
			add_location(br43, file$2, 310, 0, 7607);
			add_location(br44, file$2, 311, 0, 7612);
			attr_dev(h22, "class", "text-danger");
			add_location(h22, file$2, 313, 0, 7618);
			add_location(br45, file$2, 315, 0, 7661);
			add_location(br46, file$2, 316, 0, 7666);
			add_location(br47, file$2, 321, 4, 7731);
			add_location(br48, file$2, 322, 4, 7740);
			add_location(br49, file$2, 326, 4, 7823);
			add_location(br50, file$2, 327, 4, 7832);
			option3.__value = "1";
			option3.value = option3.__value;
			add_location(option3, file$2, 332, 8, 7921);
			option4.__value = "2";
			option4.value = option4.__value;
			add_location(option4, file$2, 333, 8, 7948);
			option5.__value = "3";
			option5.value = option5.__value;
			add_location(option5, file$2, 334, 8, 7975);
			attr_dev(datalist1, "id", "lis");
			add_location(datalist1, file$2, 331, 4, 7893);
			attr_dev(label, "for", "input");
			attr_dev(label, "class", "text-success");
			add_location(label, file$2, 337, 4, 8015);
			attr_dev(input4, "id", "input");
			attr_dev(input4, "type", "text");
			input4.value = "text";
			add_location(input4, file$2, 338, 4, 8073);
			add_location(br51, file$2, 340, 4, 8122);
			add_location(br52, file$2, 341, 4, 8131);
			attr_dev(a, "href", ".");
			attr_dev(a, "class", "text-warning");
			add_location(a, file$2, 343, 4, 8141);
			add_location(br53, file$2, 345, 4, 8193);
			add_location(br54, file$2, 346, 4, 8202);
			attr_dev(button16, "type", "button");
			attr_dev(button16, "class", "text-info");
			add_location(button16, file$2, 348, 4, 8212);
			add_location(section4, file$2, 318, 0, 7672);
			add_location(br55, file$2, 351, 0, 8288);
			add_location(br56, file$2, 352, 0, 8293);
			attr_dev(h23, "class", "text-info");
			add_location(h23, file$2, 354, 0, 8299);
			add_location(br57, file$2, 360, 0, 8423);
			add_location(br58, file$2, 361, 0, 8428);
			add_location(br59, file$2, 365, 0, 8500);
			add_location(br60, file$2, 366, 0, 8505);
			attr_dev(h24, "class", "text-success");
			add_location(h24, file$2, 368, 0, 8511);
			add_location(strong, file$2, 371, 4, 8556);
			add_location(p5, file$2, 370, 0, 8548);
			set_style(p6, "text-align", "justify");
			add_location(p6, file$2, 376, 0, 8665);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section2, anchor);
			append_dev(section2, section0);
			append_dev(section0, div0);
			mount_component(swipe, div0, null);
			append_dev(section0, t1);
			append_dev(section0, ul0);
			append_dev(ul0, li0);
			mount_component(button0, li0, null);
			append_dev(ul0, t2);
			append_dev(ul0, li1);
			mount_component(button1, li1, null);
			append_dev(ul0, t3);
			append_dev(ul0, li2);
			mount_component(button2, li2, null);
			append_dev(ul0, t4);
			append_dev(ul0, li3);
			append_dev(li3, br0);
			append_dev(li3, t5);
			mount_component(input0, li3, null);
			append_dev(li3, t6);
			append_dev(li3, datalist0);
			append_dev(datalist0, option0);
			append_dev(datalist0, option1);
			append_dev(datalist0, option2);
			append_dev(ul0, t7);
			append_dev(ul0, li4);
			mount_component(button3, li4, null);
			append_dev(section2, t8);
			mount_component(progress, section2, null);
			append_dev(section2, t9);
			append_dev(section2, section1);
			append_dev(section1, div1);
			mount_component(avatar, div1, null);
			append_dev(div1, t10);
			append_dev(div1, span0);
			append_dev(span0, h3);
			append_dev(h3, t11);
			append_dev(span0, t12);
			append_dev(span0, p0);
			append_dev(p0, t13);
			append_dev(section1, t14);
			mount_component(rate, section1, null);
			append_dev(section2, t15);
			append_dev(section2, br1);
			append_dev(section2, t16);
			append_dev(section2, h10);
			append_dev(h10, t17);
			append_dev(section2, t18);
			append_dev(section2, br2);
			append_dev(section2, t19);
			append_dev(section2, p1);
			append_dev(p1, t20);
			insert_dev(target, t21, anchor);
			insert_dev(target, br3, anchor);
			insert_dev(target, t22, anchor);
			insert_dev(target, br4, anchor);
			insert_dev(target, t23, anchor);
			mount_component(divider, target, anchor);
			insert_dev(target, t24, anchor);
			mount_component(form, target, anchor);
			insert_dev(target, t25, anchor);
			insert_dev(target, h11, anchor);
			append_dev(h11, t26);
			insert_dev(target, t27, anchor);
			insert_dev(target, br5, anchor);
			insert_dev(target, t28, anchor);
			insert_dev(target, br6, anchor);
			insert_dev(target, t29, anchor);
			insert_dev(target, h20, anchor);
			append_dev(h20, t30);
			insert_dev(target, t31, anchor);
			insert_dev(target, br7, anchor);
			insert_dev(target, t32, anchor);
			insert_dev(target, br8, anchor);
			insert_dev(target, t33, anchor);
			insert_dev(target, p2, anchor);
			append_dev(p2, t34);
			insert_dev(target, t35, anchor);
			insert_dev(target, p3, anchor);
			append_dev(p3, t36);
			insert_dev(target, t37, anchor);
			insert_dev(target, p4, anchor);
			append_dev(p4, t38);
			insert_dev(target, t39, anchor);
			insert_dev(target, br9, anchor);
			insert_dev(target, t40, anchor);
			insert_dev(target, br10, anchor);
			insert_dev(target, t41, anchor);
			insert_dev(target, h21, anchor);
			append_dev(h21, t42);
			insert_dev(target, t43, anchor);
			insert_dev(target, ul1, anchor);
			append_dev(ul1, li5);
			append_dev(li5, span1);
			mount_component(icon0, span1, null);
			append_dev(span1, t44);
			mount_component(icon1, span1, null);
			append_dev(span1, t45);
			mount_component(icon2, span1, null);
			append_dev(ul1, t46);
			append_dev(ul1, li6);
			append_dev(li6, span2);
			mount_component(icon3, span2, null);
			append_dev(span2, t47);
			mount_component(icon4, span2, null);
			append_dev(span2, t48);
			mount_component(icon5, span2, null);
			append_dev(ul1, t49);
			append_dev(ul1, li7);
			append_dev(li7, span3);
			mount_component(icon6, span3, null);
			append_dev(span3, t50);
			mount_component(icon7, span3, null);
			append_dev(span3, t51);
			mount_component(icon8, span3, null);
			insert_dev(target, t52, anchor);
			insert_dev(target, br11, anchor);
			insert_dev(target, t53, anchor);
			insert_dev(target, br12, anchor);
			insert_dev(target, t54, anchor);
			insert_dev(target, section3, anchor);
			append_dev(section3, div2);
			append_dev(div2, br13);
			append_dev(div2, t55);
			append_dev(div2, br14);
			append_dev(div2, t56);
			append_dev(div2, br15);
			append_dev(div2, t57);
			mount_component(button4, div2, null);
			append_dev(div2, t58);
			append_dev(div2, br16);
			append_dev(div2, t59);
			append_dev(div2, br17);
			append_dev(div2, t60);
			mount_component(button5, div2, null);
			append_dev(div2, t61);
			append_dev(div2, br18);
			append_dev(div2, t62);
			append_dev(div2, br19);
			append_dev(div2, t63);
			mount_component(button6, div2, null);
			append_dev(div2, t64);
			append_dev(div2, br20);
			append_dev(div2, t65);
			append_dev(div2, br21);
			append_dev(div2, t66);
			mount_component(button7, div2, null);
			append_dev(div2, t67);
			append_dev(div2, br22);
			append_dev(div2, t68);
			append_dev(div2, br23);
			append_dev(div2, t69);
			mount_component(button8, div2, null);
			append_dev(div2, t70);
			append_dev(div2, br24);
			append_dev(div2, t71);
			append_dev(div2, br25);
			append_dev(div2, t72);
			mount_component(button9, div2, null);
			append_dev(div2, t73);
			append_dev(div2, br26);
			append_dev(div2, t74);
			append_dev(div2, br27);
			append_dev(section3, t75);
			append_dev(section3, div3);
			append_dev(div3, br28);
			append_dev(div3, t76);
			append_dev(div3, br29);
			append_dev(div3, t77);
			append_dev(div3, br30);
			append_dev(div3, t78);
			mount_component(button10, div3, null);
			append_dev(div3, t79);
			append_dev(div3, br31);
			append_dev(div3, t80);
			append_dev(div3, br32);
			append_dev(div3, t81);
			mount_component(button11, div3, null);
			append_dev(div3, t82);
			append_dev(div3, br33);
			append_dev(div3, t83);
			append_dev(div3, br34);
			append_dev(div3, t84);
			mount_component(button12, div3, null);
			append_dev(div3, t85);
			append_dev(div3, br35);
			append_dev(div3, t86);
			append_dev(div3, br36);
			append_dev(div3, t87);
			mount_component(button13, div3, null);
			append_dev(div3, t88);
			append_dev(div3, br37);
			append_dev(div3, t89);
			append_dev(div3, br38);
			append_dev(div3, t90);
			mount_component(button14, div3, null);
			append_dev(div3, t91);
			append_dev(div3, br39);
			append_dev(div3, t92);
			append_dev(div3, br40);
			append_dev(div3, t93);
			mount_component(button15, div3, null);
			append_dev(div3, t94);
			append_dev(div3, br41);
			append_dev(div3, t95);
			append_dev(div3, br42);
			insert_dev(target, t96, anchor);
			insert_dev(target, br43, anchor);
			insert_dev(target, t97, anchor);
			insert_dev(target, br44, anchor);
			insert_dev(target, t98, anchor);
			insert_dev(target, h22, anchor);
			append_dev(h22, t99);
			insert_dev(target, t100, anchor);
			insert_dev(target, br45, anchor);
			insert_dev(target, t101, anchor);
			insert_dev(target, br46, anchor);
			insert_dev(target, t102, anchor);
			insert_dev(target, section4, anchor);
			mount_component(input1, section4, null);
			append_dev(section4, t103);
			append_dev(section4, br47);
			append_dev(section4, t104);
			append_dev(section4, br48);
			append_dev(section4, t105);
			mount_component(input2, section4, null);
			append_dev(section4, t106);
			append_dev(section4, br49);
			append_dev(section4, t107);
			append_dev(section4, br50);
			append_dev(section4, t108);
			mount_component(input3, section4, null);
			append_dev(section4, t109);
			append_dev(section4, datalist1);
			append_dev(datalist1, option3);
			append_dev(datalist1, option4);
			append_dev(datalist1, option5);
			append_dev(section4, t110);
			append_dev(section4, label);
			append_dev(label, t111);
			append_dev(section4, t112);
			append_dev(section4, input4);
			append_dev(section4, t113);
			append_dev(section4, br51);
			append_dev(section4, t114);
			append_dev(section4, br52);
			append_dev(section4, t115);
			append_dev(section4, a);
			append_dev(a, t116);
			append_dev(section4, t117);
			append_dev(section4, br53);
			append_dev(section4, t118);
			append_dev(section4, br54);
			append_dev(section4, t119);
			append_dev(section4, button16);
			append_dev(button16, t120);
			insert_dev(target, t121, anchor);
			insert_dev(target, br55, anchor);
			insert_dev(target, t122, anchor);
			insert_dev(target, br56, anchor);
			insert_dev(target, t123, anchor);
			insert_dev(target, h23, anchor);
			append_dev(h23, t124);
			insert_dev(target, t125, anchor);
			mount_component(picture0, target, anchor);
			insert_dev(target, t126, anchor);
			insert_dev(target, br57, anchor);
			insert_dev(target, t127, anchor);
			insert_dev(target, br58, anchor);
			insert_dev(target, t128, anchor);
			mount_component(picture1, target, anchor);
			insert_dev(target, t129, anchor);
			insert_dev(target, br59, anchor);
			insert_dev(target, t130, anchor);
			insert_dev(target, br60, anchor);
			insert_dev(target, t131, anchor);
			insert_dev(target, h24, anchor);
			append_dev(h24, t132);
			insert_dev(target, t133, anchor);
			insert_dev(target, p5, anchor);
			append_dev(p5, strong);
			append_dev(strong, t134);
			insert_dev(target, t135, anchor);
			insert_dev(target, p6, anchor);
			append_dev(p6, t136);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const swipe_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				swipe_changes.$$scope = { dirty, ctx };
			}

			swipe.$set(swipe_changes);
			const button0_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
			const button2_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button2_changes.$$scope = { dirty, ctx };
			}

			button2.$set(button2_changes);
			const button3_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button3_changes.$$scope = { dirty, ctx };
			}

			button3.$set(button3_changes);
			const form_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				form_changes.$$scope = { dirty, ctx };
			}

			form.$set(form_changes);
			const button4_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button4_changes.$$scope = { dirty, ctx };
			}

			button4.$set(button4_changes);
			const button5_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button5_changes.$$scope = { dirty, ctx };
			}

			button5.$set(button5_changes);
			const button6_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button6_changes.$$scope = { dirty, ctx };
			}

			button6.$set(button6_changes);
			const button7_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button7_changes.$$scope = { dirty, ctx };
			}

			button7.$set(button7_changes);
			const button8_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button8_changes.$$scope = { dirty, ctx };
			}

			button8.$set(button8_changes);
			const button9_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button9_changes.$$scope = { dirty, ctx };
			}

			button9.$set(button9_changes);
			const button10_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button10_changes.$$scope = { dirty, ctx };
			}

			button10.$set(button10_changes);
			const button11_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button11_changes.$$scope = { dirty, ctx };
			}

			button11.$set(button11_changes);
			const button12_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button12_changes.$$scope = { dirty, ctx };
			}

			button12.$set(button12_changes);
			const button13_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button13_changes.$$scope = { dirty, ctx };
			}

			button13.$set(button13_changes);
			const button14_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button14_changes.$$scope = { dirty, ctx };
			}

			button14.$set(button14_changes);
			const button15_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button15_changes.$$scope = { dirty, ctx };
			}

			button15.$set(button15_changes);
			const picture0_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				picture0_changes.$$scope = { dirty, ctx };
			}

			picture0.$set(picture0_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(swipe.$$.fragment, local);
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			transition_in(button2.$$.fragment, local);
			transition_in(input0.$$.fragment, local);
			transition_in(button3.$$.fragment, local);
			transition_in(progress.$$.fragment, local);
			transition_in(avatar.$$.fragment, local);
			transition_in(rate.$$.fragment, local);
			transition_in(divider.$$.fragment, local);
			transition_in(form.$$.fragment, local);
			transition_in(icon0.$$.fragment, local);
			transition_in(icon1.$$.fragment, local);
			transition_in(icon2.$$.fragment, local);
			transition_in(icon3.$$.fragment, local);
			transition_in(icon4.$$.fragment, local);
			transition_in(icon5.$$.fragment, local);
			transition_in(icon6.$$.fragment, local);
			transition_in(icon7.$$.fragment, local);
			transition_in(icon8.$$.fragment, local);
			transition_in(button4.$$.fragment, local);
			transition_in(button5.$$.fragment, local);
			transition_in(button6.$$.fragment, local);
			transition_in(button7.$$.fragment, local);
			transition_in(button8.$$.fragment, local);
			transition_in(button9.$$.fragment, local);
			transition_in(button10.$$.fragment, local);
			transition_in(button11.$$.fragment, local);
			transition_in(button12.$$.fragment, local);
			transition_in(button13.$$.fragment, local);
			transition_in(button14.$$.fragment, local);
			transition_in(button15.$$.fragment, local);
			transition_in(input1.$$.fragment, local);
			transition_in(input2.$$.fragment, local);
			transition_in(input3.$$.fragment, local);
			transition_in(picture0.$$.fragment, local);
			transition_in(picture1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(swipe.$$.fragment, local);
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			transition_out(button2.$$.fragment, local);
			transition_out(input0.$$.fragment, local);
			transition_out(button3.$$.fragment, local);
			transition_out(progress.$$.fragment, local);
			transition_out(avatar.$$.fragment, local);
			transition_out(rate.$$.fragment, local);
			transition_out(divider.$$.fragment, local);
			transition_out(form.$$.fragment, local);
			transition_out(icon0.$$.fragment, local);
			transition_out(icon1.$$.fragment, local);
			transition_out(icon2.$$.fragment, local);
			transition_out(icon3.$$.fragment, local);
			transition_out(icon4.$$.fragment, local);
			transition_out(icon5.$$.fragment, local);
			transition_out(icon6.$$.fragment, local);
			transition_out(icon7.$$.fragment, local);
			transition_out(icon8.$$.fragment, local);
			transition_out(button4.$$.fragment, local);
			transition_out(button5.$$.fragment, local);
			transition_out(button6.$$.fragment, local);
			transition_out(button7.$$.fragment, local);
			transition_out(button8.$$.fragment, local);
			transition_out(button9.$$.fragment, local);
			transition_out(button10.$$.fragment, local);
			transition_out(button11.$$.fragment, local);
			transition_out(button12.$$.fragment, local);
			transition_out(button13.$$.fragment, local);
			transition_out(button14.$$.fragment, local);
			transition_out(button15.$$.fragment, local);
			transition_out(input1.$$.fragment, local);
			transition_out(input2.$$.fragment, local);
			transition_out(input3.$$.fragment, local);
			transition_out(picture0.$$.fragment, local);
			transition_out(picture1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section2);
			destroy_component(swipe);
			destroy_component(button0);
			destroy_component(button1);
			destroy_component(button2);
			destroy_component(input0);
			destroy_component(button3);
			destroy_component(progress);
			destroy_component(avatar);
			destroy_component(rate);
			if (detaching) detach_dev(t21);
			if (detaching) detach_dev(br3);
			if (detaching) detach_dev(t22);
			if (detaching) detach_dev(br4);
			if (detaching) detach_dev(t23);
			destroy_component(divider, detaching);
			if (detaching) detach_dev(t24);
			destroy_component(form, detaching);
			if (detaching) detach_dev(t25);
			if (detaching) detach_dev(h11);
			if (detaching) detach_dev(t27);
			if (detaching) detach_dev(br5);
			if (detaching) detach_dev(t28);
			if (detaching) detach_dev(br6);
			if (detaching) detach_dev(t29);
			if (detaching) detach_dev(h20);
			if (detaching) detach_dev(t31);
			if (detaching) detach_dev(br7);
			if (detaching) detach_dev(t32);
			if (detaching) detach_dev(br8);
			if (detaching) detach_dev(t33);
			if (detaching) detach_dev(p2);
			if (detaching) detach_dev(t35);
			if (detaching) detach_dev(p3);
			if (detaching) detach_dev(t37);
			if (detaching) detach_dev(p4);
			if (detaching) detach_dev(t39);
			if (detaching) detach_dev(br9);
			if (detaching) detach_dev(t40);
			if (detaching) detach_dev(br10);
			if (detaching) detach_dev(t41);
			if (detaching) detach_dev(h21);
			if (detaching) detach_dev(t43);
			if (detaching) detach_dev(ul1);
			destroy_component(icon0);
			destroy_component(icon1);
			destroy_component(icon2);
			destroy_component(icon3);
			destroy_component(icon4);
			destroy_component(icon5);
			destroy_component(icon6);
			destroy_component(icon7);
			destroy_component(icon8);
			if (detaching) detach_dev(t52);
			if (detaching) detach_dev(br11);
			if (detaching) detach_dev(t53);
			if (detaching) detach_dev(br12);
			if (detaching) detach_dev(t54);
			if (detaching) detach_dev(section3);
			destroy_component(button4);
			destroy_component(button5);
			destroy_component(button6);
			destroy_component(button7);
			destroy_component(button8);
			destroy_component(button9);
			destroy_component(button10);
			destroy_component(button11);
			destroy_component(button12);
			destroy_component(button13);
			destroy_component(button14);
			destroy_component(button15);
			if (detaching) detach_dev(t96);
			if (detaching) detach_dev(br43);
			if (detaching) detach_dev(t97);
			if (detaching) detach_dev(br44);
			if (detaching) detach_dev(t98);
			if (detaching) detach_dev(h22);
			if (detaching) detach_dev(t100);
			if (detaching) detach_dev(br45);
			if (detaching) detach_dev(t101);
			if (detaching) detach_dev(br46);
			if (detaching) detach_dev(t102);
			if (detaching) detach_dev(section4);
			destroy_component(input1);
			destroy_component(input2);
			destroy_component(input3);
			if (detaching) detach_dev(t121);
			if (detaching) detach_dev(br55);
			if (detaching) detach_dev(t122);
			if (detaching) detach_dev(br56);
			if (detaching) detach_dev(t123);
			if (detaching) detach_dev(h23);
			if (detaching) detach_dev(t125);
			destroy_component(picture0, detaching);
			if (detaching) detach_dev(t126);
			if (detaching) detach_dev(br57);
			if (detaching) detach_dev(t127);
			if (detaching) detach_dev(br58);
			if (detaching) detach_dev(t128);
			destroy_component(picture1, detaching);
			if (detaching) detach_dev(t129);
			if (detaching) detach_dev(br59);
			if (detaching) detach_dev(t130);
			if (detaching) detach_dev(br60);
			if (detaching) detach_dev(t131);
			if (detaching) detach_dev(h24);
			if (detaching) detach_dev(t133);
			if (detaching) detach_dev(p5);
			if (detaching) detach_dev(t135);
			if (detaching) detach_dev(p6);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self) {
	const click_handler = e => console.log(e);
	const click_handler_1 = e => console.log(e);
	const click_handler_2 = e => console.log(e);
	const click_handler_3 = e => console.log(e);
	const submit_handler = e => console.log(e);
	const click_handler_4 = e => console.log(e);
	const click_handler_5 = e => console.log(e);
	const click_handler_6 = e => console.log(e);
	const click_handler_7 = e => console.log(e);
	const click_handler_8 = e => console.log(e);
	const click_handler_9 = e => console.log(e);
	const click_handler_10 = e => console.log(e);
	const click_handler_11 = e => console.log(e);
	const click_handler_12 = e => console.log(e);
	const click_handler_13 = e => console.log(e);
	const click_handler_14 = e => console.log(e);
	const click_handler_15 = e => console.log(e);

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		
	};

	return [
		click_handler,
		click_handler_1,
		click_handler_2,
		click_handler_3,
		submit_handler,
		click_handler_4,
		click_handler_5,
		click_handler_6,
		click_handler_7,
		click_handler_8,
		click_handler_9,
		click_handler_10,
		click_handler_11,
		click_handler_12,
		click_handler_13,
		click_handler_14,
		click_handler_15
	];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$2.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
