import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, r as space, e as element, H as create_component, u as claim_space, c as claim_element, a as children, I as claim_component, f as detach_dev, h as attr_dev, g as add_location, j as insert_dev, k as append_dev, J as mount_component, n as noop, x as transition_in, y as transition_out, K as destroy_component } from './index.f1512f61.js';
import { C as Carousel, D as DonatingGroup, P as Progress, A as AvatarAndName, R as Rate, B as Br, T as TitleSubTitle, a as CharityCards } from './index.dbc0bcd5.js';

/* src/routes/list.svelte generated by Svelte v3.16.7 */
const file = "src/routes/list.svelte";

function create_fragment(ctx) {
	let t0;
	let section2;
	let section0;
	let div0;
	let t1;
	let t2;
	let t3;
	let section1;
	let t4;
	let t5;
	let t6;
	let t7;
	let t8;
	let div1;
	let t9;
	let t10;
	let div2;
	let t11;
	let current;
	const carousel = new Carousel({ $$inline: true });
	const donatinggroup = new DonatingGroup({ $$inline: true });

	const progress = new Progress({
			props: { value: "65", size: "big" },
			$$inline: true
		});

	const avatarandname = new AvatarAndName({
			props: {
				src: "https://placeimg.com/300/300/people",
				title: "Tina Kandelaki",
				subtitle: "ORG charity charitify"
			},
			$$inline: true
		});

	const rate = new Rate({ $$inline: true });
	const br0 = new Br({ props: { amount: "2" }, $$inline: true });
	const titlesubtitle = new TitleSubTitle({ $$inline: true });
	const br1 = new Br({ props: { amount: "3" }, $$inline: true });
	const charitycards0 = new CharityCards({ $$inline: true });
	const br2 = new Br({ props: { amount: "5" }, $$inline: true });
	const charitycards1 = new CharityCards({ $$inline: true });
	const br3 = new Br({ props: { amount: "5" }, $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			section2 = element("section");
			section0 = element("section");
			div0 = element("div");
			create_component(carousel.$$.fragment);
			t1 = space();
			create_component(donatinggroup.$$.fragment);
			t2 = space();
			create_component(progress.$$.fragment);
			t3 = space();
			section1 = element("section");
			create_component(avatarandname.$$.fragment);
			t4 = space();
			create_component(rate.$$.fragment);
			t5 = space();
			create_component(br0.$$.fragment);
			t6 = space();
			create_component(titlesubtitle.$$.fragment);
			t7 = space();
			create_component(br1.$$.fragment);
			t8 = space();
			div1 = element("div");
			create_component(charitycards0.$$.fragment);
			t9 = space();
			create_component(br2.$$.fragment);
			t10 = space();
			div2 = element("div");
			create_component(charitycards1.$$.fragment);
			t11 = space();
			create_component(br3.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			section2 = claim_element(nodes, "SECTION", { class: true });
			var section2_nodes = children(section2);
			section0 = claim_element(section2_nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			div0 = claim_element(section0_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(carousel.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(section0_nodes);
			claim_component(donatinggroup.$$.fragment, section0_nodes);
			section0_nodes.forEach(detach_dev);
			t2 = claim_space(section2_nodes);
			claim_component(progress.$$.fragment, section2_nodes);
			t3 = claim_space(section2_nodes);
			section1 = claim_element(section2_nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			claim_component(avatarandname.$$.fragment, section1_nodes);
			t4 = claim_space(section1_nodes);
			claim_component(rate.$$.fragment, section1_nodes);
			section1_nodes.forEach(detach_dev);
			t5 = claim_space(section2_nodes);
			claim_component(br0.$$.fragment, section2_nodes);
			t6 = claim_space(section2_nodes);
			claim_component(titlesubtitle.$$.fragment, section2_nodes);
			section2_nodes.forEach(detach_dev);
			t7 = claim_space(nodes);
			claim_component(br1.$$.fragment, nodes);
			t8 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(charitycards0.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach_dev);
			t9 = claim_space(nodes);
			claim_component(br2.$$.fragment, nodes);
			t10 = claim_space(nodes);
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			claim_component(charitycards1.$$.fragment, div2_nodes);
			div2_nodes.forEach(detach_dev);
			t11 = claim_space(nodes);
			claim_component(br3.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - is the application for helping those in need.";
			attr_dev(div0, "class", "pics-wrap svelte-9uj01k");
			add_location(div0, file, 44, 8, 1015);
			attr_dev(section0, "class", "top svelte-9uj01k");
			add_location(section0, file, 42, 4, 984);
			attr_dev(section1, "class", "rate-section svelte-9uj01k");
			add_location(section1, file, 53, 4, 1173);
			attr_dev(section2, "class", "container");
			add_location(section2, file, 41, 0, 952);
			attr_dev(div1, "class", "container");
			add_location(div1, file, 70, 0, 1490);
			attr_dev(div2, "class", "container");
			add_location(div2, file, 76, 0, 1560);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section2, anchor);
			append_dev(section2, section0);
			append_dev(section0, div0);
			mount_component(carousel, div0, null);
			append_dev(section0, t1);
			mount_component(donatinggroup, section0, null);
			append_dev(section2, t2);
			mount_component(progress, section2, null);
			append_dev(section2, t3);
			append_dev(section2, section1);
			mount_component(avatarandname, section1, null);
			append_dev(section1, t4);
			mount_component(rate, section1, null);
			append_dev(section2, t5);
			mount_component(br0, section2, null);
			append_dev(section2, t6);
			mount_component(titlesubtitle, section2, null);
			insert_dev(target, t7, anchor);
			mount_component(br1, target, anchor);
			insert_dev(target, t8, anchor);
			insert_dev(target, div1, anchor);
			mount_component(charitycards0, div1, null);
			insert_dev(target, t9, anchor);
			mount_component(br2, target, anchor);
			insert_dev(target, t10, anchor);
			insert_dev(target, div2, anchor);
			mount_component(charitycards1, div2, null);
			insert_dev(target, t11, anchor);
			mount_component(br3, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(carousel.$$.fragment, local);
			transition_in(donatinggroup.$$.fragment, local);
			transition_in(progress.$$.fragment, local);
			transition_in(avatarandname.$$.fragment, local);
			transition_in(rate.$$.fragment, local);
			transition_in(br0.$$.fragment, local);
			transition_in(titlesubtitle.$$.fragment, local);
			transition_in(br1.$$.fragment, local);
			transition_in(charitycards0.$$.fragment, local);
			transition_in(br2.$$.fragment, local);
			transition_in(charitycards1.$$.fragment, local);
			transition_in(br3.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(carousel.$$.fragment, local);
			transition_out(donatinggroup.$$.fragment, local);
			transition_out(progress.$$.fragment, local);
			transition_out(avatarandname.$$.fragment, local);
			transition_out(rate.$$.fragment, local);
			transition_out(br0.$$.fragment, local);
			transition_out(titlesubtitle.$$.fragment, local);
			transition_out(br1.$$.fragment, local);
			transition_out(charitycards0.$$.fragment, local);
			transition_out(br2.$$.fragment, local);
			transition_out(charitycards1.$$.fragment, local);
			transition_out(br3.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section2);
			destroy_component(carousel);
			destroy_component(donatinggroup);
			destroy_component(progress);
			destroy_component(avatarandname);
			destroy_component(rate);
			destroy_component(br0);
			destroy_component(titlesubtitle);
			if (detaching) detach_dev(t7);
			destroy_component(br1, detaching);
			if (detaching) detach_dev(t8);
			if (detaching) detach_dev(div1);
			destroy_component(charitycards0);
			if (detaching) detach_dev(t9);
			destroy_component(br2, detaching);
			if (detaching) detach_dev(t10);
			if (detaching) detach_dev(div2);
			destroy_component(charitycards1);
			if (detaching) detach_dev(t11);
			destroy_component(br3, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

class List extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "List",
			options,
			id: create_fragment.name
		});
	}
}

export default List;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC42YmUyMDFmZC5qcyIsInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W10sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
