main.svelte-7sd4o8{position:relative;max-width:56em;margin:0 auto;box-sizing:border-box}
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
h1.svelte-1kmv00v.svelte-1kmv00v,p.svelte-1kmv00v.svelte-1kmv00v{text-align:center;margin:0 auto}h1.svelte-1kmv00v.svelte-1kmv00v{text-transform:uppercase;margin:0 0 0.5em 0}.top-wrap.svelte-1kmv00v.svelte-1kmv00v{padding-left:5px}.top.svelte-1kmv00v.svelte-1kmv00v{display:flex}.top-pic.svelte-1kmv00v.svelte-1kmv00v{display:flex;flex-grow:1}.options.svelte-1kmv00v.svelte-1kmv00v{flex:0;display:flex;flex-direction:column;margin:-7px 0;padding:0 10px}.options.svelte-1kmv00v li.svelte-1kmv00v{flex:none;margin:7px 0}
.inp.svelte-xp6uy5{width:100%;flex:1 1 0;color:inherit;border-radius:var(--border-radius);min-width:var(--min-interactive-size);min-height:var(--min-interactive-size);border:2px solid rgb(var(--color-info))}.inp.svelte-xp6uy5:focus{border-color:rgb(var(--color-success))}.inp.svelte-xp6uy5:invalid,.inp.invalid.svelte-xp6uy5{border-color:rgb(var(--color-danger))}
.picture.svelte-v25mjj.svelte-v25mjj{display:inline-flex;flex-direction:column;align-items:stretch;justify-content:stretch}.picture.svelte-v25mjj .pic.svelte-v25mjj{flex-grow:1;align-self:stretch;object-fit:cover;object-position:center;transition:opacity .3s ease-in}.picture.loading.svelte-v25mjj .pic.svelte-v25mjj{opacity:0}
.btn.svelte-18ko52n{flex:none;width:100%;color:inherit;max-width:100%;user-select:none;padding:5px 15px;font-weight:bold;text-align:center;align-items:center;display:inline-flex;justify-content:center;border-radius:var(--border-radius);min-width:var(--min-interactive-size);min-height:var(--min-interactive-size);text-shadow:1px 1px rgba(0, 0, 0, .3)}.btn.svelte-18ko52n:focus{background-color:rgba(0, 0, 0, 0.1)}.btn.svelte-18ko52n:hover{box-shadow:0 2px rgba(0, 0, 0, 0.2);background-color:rgba(0, 0, 0, 0.1)}.btn.svelte-18ko52n:active{transform:translateY(1px);box-shadow:0 1px rgba(0, 0, 0, 0.2);background-color:rgba(0, 0, 0, 0.1)}.btn.success.svelte-18ko52n{color:var(--color-light-font);background-color:rgb(var(--color-success));box-shadow:0 3px rgb(var(--color-success-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.success.svelte-18ko52n:focus{background-color:rgb(var(--color-success), .85)}.btn.success.svelte-18ko52n:hover{transform:translateY(1px);box-shadow:0 2px rgb(var(--color-success-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.success.svelte-18ko52n:active{transform:translateY(2px);box-shadow:0 1px rgb(var(--color-success-dark)), 0 10px 15px 0 rgba(0, 0, 0, 0.2)}.btn.warning.svelte-18ko52n{color:var(--color-light-font);background-color:rgb(var(--color-warning));box-shadow:0 3px rgb(var(--color-warning-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.warning.svelte-18ko52n:focus{background-color:rgb(var(--color-warning), .85)}.btn.warning.svelte-18ko52n:hover{transform:translateY(1px);box-shadow:0 2px rgb(var(--color-warning-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.warning.svelte-18ko52n:active{transform:translateY(2px);box-shadow:0 1px rgb(var(--color-warning-dark)), 0 10px 15px 0 rgba(0, 0, 0, 0.2)}.btn.danger.svelte-18ko52n{color:var(--color-light-font);background-color:rgb(var(--color-danger));box-shadow:0 3px rgb(var(--color-danger-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.danger.svelte-18ko52n:focus{background-color:rgb(var(--color-danger), .85)}.btn.danger.svelte-18ko52n:hover{transform:translateY(1px);box-shadow:0 2px rgb(var(--color-danger-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.danger.svelte-18ko52n:active{transform:translateY(2px);box-shadow:0 1px rgb(var(--color-danger-dark)), 0 10px 15px 0 rgba(0, 0, 0, 0.2)}
nav.svelte-6p7zkm{position:sticky;top:0;display:flex;justify-content:space-between;border-bottom:1px solid rgba(var(--color-danger), .1);padding:0 1em;z-index:1}.selected.svelte-6p7zkm{position:relative;display:inline-block}.selected.svelte-6p7zkm::after{position:absolute;content:"";width:calc(100% - 1em);height:2px;background-color:rgb(var(--color-danger));display:block;bottom:-1px}a.svelte-6p7zkm{padding:1em 0.5em}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */