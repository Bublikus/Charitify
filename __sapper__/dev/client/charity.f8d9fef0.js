import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, r as space, e as element, q as create_component, v as claim_space, c as claim_element, a as children, u as claim_component, f as detach_dev, g as add_location, h as attr_dev, j as insert_dev, k as append_dev, w as mount_component, n as noop, y as transition_in, _ as add_render_callback, $ as create_in_transition, z as transition_out, a0 as create_out_transition, A as destroy_component } from './index.49625391.js';
import { T as TitleSubTitle, C as Carousel, D as DonatingGroup, P as Progress, A as AvatarAndName, R as Rate } from './index.c47b4ad7.js';
import { r as receive, s as send } from './index.5c88432a.js';

/* src/routes/charity.svelte generated by Svelte v3.16.7 */
const file = "src/routes/charity.svelte";

function create_fragment(ctx) {
	let t0;
	let main;
	let section3;
	let div1;
	let section0;
	let br0;
	let t1;
	let t2;
	let br1;
	let section0_intro;
	let section0_outro;
	let t3;
	let section1;
	let div0;
	let t4;
	let t5;
	let t6;
	let section2;
	let t7;
	let div1_intro;
	let div1_outro;
	let t8;
	let br2;
	let t9;
	let br3;
	let t10;
	let br4;
	let current;
	const titlesubtitle = new TitleSubTitle({ $$inline: true });
	const carousel = new Carousel({ $$inline: true });
	const donatinggroup = new DonatingGroup({ $$inline: true });

	const progress = new Progress({
			props: { value: "65", size: "big" },
			$$inline: true
		});

	const avatarandname = new AvatarAndName({
			props: {
				src: "https://placeimg.com/300/300/people",
				title: "Tina Kandelaki",
				subTitle: "ORG charity charitify"
			},
			$$inline: true
		});

	const rate = new Rate({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			main = element("main");
			section3 = element("section");
			div1 = element("div");
			section0 = element("section");
			br0 = element("br");
			t1 = space();
			create_component(titlesubtitle.$$.fragment);
			t2 = space();
			br1 = element("br");
			t3 = space();
			section1 = element("section");
			div0 = element("div");
			create_component(carousel.$$.fragment);
			t4 = space();
			create_component(donatinggroup.$$.fragment);
			t5 = space();
			create_component(progress.$$.fragment);
			t6 = space();
			section2 = element("section");
			create_component(avatarandname.$$.fragment);
			t7 = space();
			create_component(rate.$$.fragment);
			t8 = space();
			br2 = element("br");
			t9 = space();
			br3 = element("br");
			t10 = space();
			br4 = element("br");
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			section3 = claim_element(main_nodes, "SECTION", { class: true });
			var section3_nodes = children(section3);
			div1 = claim_element(section3_nodes, "DIV", {});
			var div1_nodes = children(div1);
			section0 = claim_element(div1_nodes, "SECTION", {});
			var section0_nodes = children(section0);
			br0 = claim_element(section0_nodes, "BR", {});
			t1 = claim_space(section0_nodes);
			claim_component(titlesubtitle.$$.fragment, section0_nodes);
			t2 = claim_space(section0_nodes);
			br1 = claim_element(section0_nodes, "BR", {});
			section0_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			section1 = claim_element(div1_nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			div0 = claim_element(section1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(carousel.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t4 = claim_space(section1_nodes);
			claim_component(donatinggroup.$$.fragment, section1_nodes);
			section1_nodes.forEach(detach_dev);
			t5 = claim_space(div1_nodes);
			claim_component(progress.$$.fragment, div1_nodes);
			t6 = claim_space(div1_nodes);
			section2 = claim_element(div1_nodes, "SECTION", { class: true });
			var section2_nodes = children(section2);
			claim_component(avatarandname.$$.fragment, section2_nodes);
			t7 = claim_space(section2_nodes);
			claim_component(rate.$$.fragment, section2_nodes);
			section2_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			section3_nodes.forEach(detach_dev);
			t8 = claim_space(main_nodes);
			br2 = claim_element(main_nodes, "BR", {});
			t9 = claim_space(main_nodes);
			br3 = claim_element(main_nodes, "BR", {});
			t10 = claim_space(main_nodes);
			br4 = claim_element(main_nodes, "BR", {});
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - Charity page and donate.";
			add_location(br0, file, 41, 16, 1103);
			add_location(br1, file, 43, 16, 1157);
			add_location(section0, file, 40, 12, 1019);
			attr_dev(div0, "class", "pics-wrap svelte-uz5elz");
			add_location(div0, file, 47, 16, 1236);
			attr_dev(section1, "class", "top svelte-uz5elz");
			add_location(section1, file, 46, 12, 1198);
			attr_dev(section2, "class", "rate-section svelte-uz5elz");
			add_location(section2, file, 56, 12, 1432);
			add_location(div1, file, 39, 8, 937);
			attr_dev(section3, "class", "container");
			add_location(section3, file, 37, 4, 900);
			add_location(br2, file, 68, 4, 1766);
			add_location(br3, file, 69, 4, 1775);
			add_location(br4, file, 70, 4, 1784);
			attr_dev(main, "class", "page");
			add_location(main, file, 36, 0, 876);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, main, anchor);
			append_dev(main, section3);
			append_dev(section3, div1);
			append_dev(div1, section0);
			append_dev(section0, br0);
			append_dev(section0, t1);
			mount_component(titlesubtitle, section0, null);
			append_dev(section0, t2);
			append_dev(section0, br1);
			append_dev(div1, t3);
			append_dev(div1, section1);
			append_dev(section1, div0);
			mount_component(carousel, div0, null);
			append_dev(section1, t4);
			mount_component(donatinggroup, section1, null);
			append_dev(div1, t5);
			mount_component(progress, div1, null);
			append_dev(div1, t6);
			append_dev(div1, section2);
			mount_component(avatarandname, section2, null);
			append_dev(section2, t7);
			mount_component(rate, section2, null);
			append_dev(main, t8);
			append_dev(main, br2);
			append_dev(main, t9);
			append_dev(main, br3);
			append_dev(main, t10);
			append_dev(main, br4);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(titlesubtitle.$$.fragment, local);

			add_render_callback(() => {
				if (section0_outro) section0_outro.end(1);
				if (!section0_intro) section0_intro = create_in_transition(section0, receive, { key: "title" });
				section0_intro.start();
			});

			transition_in(carousel.$$.fragment, local);
			transition_in(donatinggroup.$$.fragment, local);
			transition_in(progress.$$.fragment, local);
			transition_in(avatarandname.$$.fragment, local);
			transition_in(rate.$$.fragment, local);

			add_render_callback(() => {
				if (div1_outro) div1_outro.end(1);
				if (!div1_intro) div1_intro = create_in_transition(div1, receive, { key: "pictures" });
				div1_intro.start();
			});

			current = true;
		},
		o: function outro(local) {
			transition_out(titlesubtitle.$$.fragment, local);
			if (section0_intro) section0_intro.invalidate();
			section0_outro = create_out_transition(section0, send, { key: "title" });
			transition_out(carousel.$$.fragment, local);
			transition_out(donatinggroup.$$.fragment, local);
			transition_out(progress.$$.fragment, local);
			transition_out(avatarandname.$$.fragment, local);
			transition_out(rate.$$.fragment, local);
			if (div1_intro) div1_intro.invalidate();
			div1_outro = create_out_transition(div1, send, { key: "pictures" });
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(main);
			destroy_component(titlesubtitle);
			if (detaching && section0_outro) section0_outro.end();
			destroy_component(carousel);
			destroy_component(donatinggroup);
			destroy_component(progress);
			destroy_component(avatarandname);
			destroy_component(rate);
			if (detaching && div1_outro) div1_outro.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

class Charity extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Charity",
			options,
			id: create_fragment.name
		});
	}
}

export default Charity;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcml0eS5mOGQ5ZmVmMC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9jaGFyaXR5LnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICAgIGltcG9ydCB7IFN3aXBlLCBTd2lwZUl0ZW0gfSBmcm9tICcuLi9wbHVnaW5zJ1xuICAgIGltcG9ydCB7IFRpdGxlU3ViVGl0bGUsIEF2YXRhckFuZE5hbWUsIENhcm91c2VsLCBEb25hdGluZ0dyb3VwIH0gZnJvbSAnLi4vbGF5b3V0cydcbiAgICBpbXBvcnQgeyBSYXRlLCBQcm9ncmVzcyB9IGZyb20gJy4uL2NvbXBvbmVudHMnXG4gICAgaW1wb3J0IHsgc2VuZCwgcmVjZWl2ZSB9IGZyb20gJy4uL3NoYXJlZCdcbjwvc2NyaXB0PlxuXG48c3ZlbHRlOmhlYWQ+XG4gICAgPHRpdGxlPkNoYXJpdGlmeSAtIENoYXJpdHkgcGFnZSBhbmQgZG9uYXRlLjwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48c3R5bGU+XG4gICAgLnRvcCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IGNhbGModmFyKC0tc2NyZWVuLXBhZGRpbmcpICogMS41KTtcbiAgICAgICAgbWFyZ2luLXRvcDogdmFyKC0tc2NyZWVuLXBhZGRpbmcpO1xuICAgIH1cblxuICAgIC5waWNzLXdyYXAge1xuICAgICAgICB6LWluZGV4OiAwO1xuICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7XG4gICAgICAgIGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1wcmltYXJ5KTtcbiAgICB9XG5cbiAgICAucmF0ZS1zZWN0aW9uIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIHBhZGRpbmc6IDEycHggMDtcbiAgICB9XG48L3N0eWxlPlxuXG48bWFpbiBjbGFzcz1cInBhZ2VcIj5cbiAgICA8c2VjdGlvbiBjbGFzcz1cImNvbnRhaW5lclwiPlxuXG4gICAgICAgIDxkaXYgb3V0OnNlbmQ9XCJ7e2tleTogJ3BpY3R1cmVzJ319XCIgaW46cmVjZWl2ZT1cInt7a2V5OiAncGljdHVyZXMnfX1cIj5cbiAgICAgICAgICAgIDxzZWN0aW9uIG91dDpzZW5kPVwie3trZXk6ICd0aXRsZSd9fVwiIGluOnJlY2VpdmU9XCJ7e2tleTogJ3RpdGxlJ319XCI+XG4gICAgICAgICAgICAgICAgPGJyPlxuICAgICAgICAgICAgICAgIDxUaXRsZVN1YlRpdGxlLz5cbiAgICAgICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPVwidG9wXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInBpY3Mtd3JhcFwiPlxuICAgICAgICAgICAgICAgICAgICA8Q2Fyb3VzZWwvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPERvbmF0aW5nR3JvdXAvPlxuICAgICAgICAgICAgPC9zZWN0aW9uPlxuXG4gICAgICAgICAgICA8UHJvZ3Jlc3MgdmFsdWU9XCI2NVwiIHNpemU9XCJiaWdcIi8+XG5cbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPVwicmF0ZS1zZWN0aW9uXCI+XG4gICAgICAgICAgICAgICAgPEF2YXRhckFuZE5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vcGxhY2VpbWcuY29tLzMwMC8zMDAvcGVvcGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiVGluYSBLYW5kZWxha2lcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc3ViVGl0bGU9XCJPUkcgY2hhcml0eSBjaGFyaXRpZnlcIlxuICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICA8UmF0ZS8+XG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvc2VjdGlvbj5cblxuICAgIDxicj5cbiAgICA8YnI+XG4gICAgPGJyPlxuXG48L21haW4+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0ZBd0MrRCxHQUFHLEVBQUUsT0FBTzs7Ozs7Ozs7Ozs7O3dFQURqQixHQUFHLEVBQUUsVUFBVTs7Ozs7Ozs7OzREQUN4QyxHQUFHLEVBQUUsT0FBTzs7Ozs7OztvREFEcEIsR0FBRyxFQUFFLFVBQVU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
