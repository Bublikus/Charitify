.swipe-panel.svelte-wqpzbz.svelte-wqpzbz{position:relative;height:var(--sv-swipe-panel-height, 100%);width:var(--sv-swipe-panel-width, inherit)}.swipe-item-wrapper.svelte-wqpzbz.svelte-wqpzbz{overflow:hidden;position:relative;height:inherit;z-index:var(--sv-swipe-panel-wrapper-index, 2);pointer-events:none}.swipeable-items.svelte-wqpzbz.svelte-wqpzbz,.swipeable-slot-wrapper.svelte-wqpzbz.svelte-wqpzbz{position:relative;width:inherit;height:inherit}.swipe-handler.svelte-wqpzbz.svelte-wqpzbz{width:100%;position:absolute;top:40px;bottom:0px;left:0;right:0;background:rgba(0,0,0,0)}.swipe-indicator.svelte-wqpzbz.svelte-wqpzbz{position:relative;bottom:1.5rem;display:flex;justify-content:center;z-index:var(--sv-swipe-panel-wrapper-index, 2);pointer-events:none}.dot.svelte-wqpzbz.svelte-wqpzbz{height:10px;width:10px;background-color:transparent;border:1px solid grey;border-radius:50%;display:inline-block;margin:0px 2px;cursor:pointer;pointer-events:fill}.swipe-indicator.svelte-wqpzbz .is-active.svelte-wqpzbz{background-color:var(--sv-swipe-indicator-active-color, grey)}
.swipeable-item.svelte-1l8yv16{position:absolute;top:0;bottom:0;left:0;right:0;transition-timing-function:ease-out}
h1.svelte-5i1boq.svelte-5i1boq{text-transform:uppercase;text-align:center}.top-wrap.svelte-5i1boq.svelte-5i1boq{padding-left:5px}.top.svelte-5i1boq.svelte-5i1boq{display:flex}.top-pic.svelte-5i1boq.svelte-5i1boq{height:330px;flex-grow:1}.options.svelte-5i1boq.svelte-5i1boq{flex:0;display:flex;flex-direction:column;margin:-7px 0;padding:0 10px}.options.svelte-5i1boq li.svelte-5i1boq{flex:none;margin:7px 0}.top-wrap.svelte-5i1boq.svelte-5i1boq .swipe-item{display:flex}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */