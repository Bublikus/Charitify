main.svelte-7sd4o8{position:relative;max-width:56em;margin:0 auto;box-sizing:border-box}
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
h1.svelte-5i1boq.svelte-5i1boq{text-transform:uppercase;text-align:center}.top-wrap.svelte-5i1boq.svelte-5i1boq{padding-left:5px}.top.svelte-5i1boq.svelte-5i1boq{display:flex}.top-pic.svelte-5i1boq.svelte-5i1boq{height:330px;flex-grow:1}.options.svelte-5i1boq.svelte-5i1boq{flex:0;display:flex;flex-direction:column;margin:-7px 0;padding:0 10px}.options.svelte-5i1boq li.svelte-5i1boq{flex:none;margin:7px 0}.top-wrap.svelte-5i1boq.svelte-5i1boq .swipe-item{display:flex}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
svg.svelte-3suh4w.svelte-3suh4w{display:inherit}.small.svelte-3suh4w.svelte-3suh4w{width:15px;height:15px}.medium.svelte-3suh4w.svelte-3suh4w{width:25px;height:25px}.big.svelte-3suh4w.svelte-3suh4w{width:35px;height:35px}.primary.svelte-3suh4w .svelte-3suh4w{fill:rgb(var(--color-success));stroke:rgb(var(--color-success))}.warning.svelte-3suh4w .svelte-3suh4w{fill:rgb(var(--color-warning));stroke:rgb(var(--color-warning))}.danger.svelte-3suh4w .svelte-3suh4w{fill:rgb(var(--color-danger));stroke:rgb(var(--color-danger))}
.inp.svelte-xp6uy5{width:100%;flex:1 1 0;color:inherit;border-radius:var(--border-radius);min-width:var(--min-interactive-size);min-height:var(--min-interactive-size);border:2px solid rgb(var(--color-info))}.inp.svelte-xp6uy5:focus{border-color:rgb(var(--color-success))}.inp.svelte-xp6uy5:invalid,.inp.invalid.svelte-xp6uy5{border-color:rgb(var(--color-danger))}
.btn.svelte-18ko52n{flex:none;width:100%;color:inherit;max-width:100%;user-select:none;padding:5px 15px;font-weight:bold;text-align:center;align-items:center;display:inline-flex;justify-content:center;border-radius:var(--border-radius);min-width:var(--min-interactive-size);min-height:var(--min-interactive-size);text-shadow:1px 1px rgba(0, 0, 0, .3)}.btn.svelte-18ko52n:focus{background-color:rgba(0, 0, 0, 0.1)}.btn.svelte-18ko52n:hover{box-shadow:0 2px rgba(0, 0, 0, 0.2);background-color:rgba(0, 0, 0, 0.1)}.btn.svelte-18ko52n:active{transform:translateY(1px);box-shadow:0 1px rgba(0, 0, 0, 0.2);background-color:rgba(0, 0, 0, 0.1)}.btn.success.svelte-18ko52n{color:var(--color-light-font);background-color:rgb(var(--color-success));box-shadow:0 3px rgb(var(--color-success-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.success.svelte-18ko52n:focus{background-color:rgb(var(--color-success), .85)}.btn.success.svelte-18ko52n:hover{transform:translateY(1px);box-shadow:0 2px rgb(var(--color-success-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.success.svelte-18ko52n:active{transform:translateY(2px);box-shadow:0 1px rgb(var(--color-success-dark)), 0 10px 15px 0 rgba(0, 0, 0, 0.2)}.btn.warning.svelte-18ko52n{color:var(--color-light-font);background-color:rgb(var(--color-warning));box-shadow:0 3px rgb(var(--color-warning-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.warning.svelte-18ko52n:focus{background-color:rgb(var(--color-warning), .85)}.btn.warning.svelte-18ko52n:hover{transform:translateY(1px);box-shadow:0 2px rgb(var(--color-warning-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.warning.svelte-18ko52n:active{transform:translateY(2px);box-shadow:0 1px rgb(var(--color-warning-dark)), 0 10px 15px 0 rgba(0, 0, 0, 0.2)}.btn.danger.svelte-18ko52n{color:var(--color-light-font);background-color:rgb(var(--color-danger));box-shadow:0 3px rgb(var(--color-danger-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.danger.svelte-18ko52n:focus{background-color:rgb(var(--color-danger), .85)}.btn.danger.svelte-18ko52n:hover{transform:translateY(1px);box-shadow:0 2px rgb(var(--color-danger-dark)), 0 10px 10px 0 rgba(0, 0, 0, 0.2)}.btn.danger.svelte-18ko52n:active{transform:translateY(2px);box-shadow:0 1px rgb(var(--color-danger-dark)), 0 10px 15px 0 rgba(0, 0, 0, 0.2)}
.picture.svelte-1rkw8xk.svelte-1rkw8xk{flex-grow:1;align-self:stretch;display:inline-flex;flex-direction:column;align-items:stretch;justify-content:stretch}.picture.svelte-1rkw8xk .pic.svelte-1rkw8xk{flex-grow:1;align-self:stretch;object-fit:cover;object-position:center;transition:opacity .3s ease-in}.picture.loading.svelte-1rkw8xk .pic.svelte-1rkw8xk{opacity:0}
.progress.svelte-4bl8vj{flex:0;width:100%;border-radius:9999px;background-color:rgba(255, 255, 255, .2);height:calc(var(--min-interactive-size) / 1.5);padding:calc(var(--min-interactive-size) / 1.5 / 3.5)}.progress-inner-frame.svelte-4bl8vj{display:flex;width:100%;height:100%;overflow:hidden;border-radius:9999px}.progress-core.svelte-4bl8vj{flex:none;align-self:stretch;transition:1s ease-in-out;border-radius:var(--border-radius);background-color:rgb(var(--color-success))}
nav.svelte-6p7zkm{position:sticky;top:0;display:flex;justify-content:space-between;border-bottom:1px solid rgba(var(--color-danger), .1);padding:0 1em;z-index:1}.selected.svelte-6p7zkm{position:relative;display:inline-block}.selected.svelte-6p7zkm::after{position:absolute;content:"";width:calc(100% - 1em);height:2px;background-color:rgb(var(--color-danger));display:block;bottom:-1px}a.svelte-6p7zkm{padding:1em 0.5em}
.swipe-panel.svelte-hja3vj.svelte-hja3vj{position:relative;height:var(--sv-swipe-panel-height, 100%);width:var(--sv-swipe-panel-width, inherit)}.swipe-item-wrapper.svelte-hja3vj.svelte-hja3vj{overflow:hidden;position:relative;height:inherit;z-index:var(--sv-swipe-panel-wrapper-index, 2);pointer-events:none}.swipeable-items.svelte-hja3vj.svelte-hja3vj,.swipeable-slot-wrapper.svelte-hja3vj.svelte-hja3vj{position:relative;width:inherit;height:inherit}.swipe-handler.svelte-hja3vj.svelte-hja3vj{width:100%;position:absolute;top:40px;bottom:0px;left:0;right:0;background:rgba(0,0,0,0)}.swipe-indicator.svelte-hja3vj.svelte-hja3vj{position:relative;bottom:1.5rem;display:flex;justify-content:center;z-index:var(--sv-swipe-panel-wrapper-index, 2);pointer-events:none}.dot.svelte-hja3vj.svelte-hja3vj{height:10px;width:10px;background-color:transparent;border:1px solid grey;border-radius:50%;display:inline-block;margin:0px 2px;cursor:pointer;pointer-events:fill}.swipe-indicator.svelte-hja3vj .is-active.svelte-hja3vj{background-color:var(--sv-swipe-indicator-active-color, grey)}
.swipeable-item.svelte-1ks2opm{position:absolute;top:0;bottom:0;left:0;right:0;transition-timing-function:ease-out}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4xNDI0NTk5NzEwLmNzcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vX2xheW91dC5zdmVsdGUiLCIuLi8uLi8uLi9fZXJyb3Iuc3ZlbHRlIiwiLi4vLi4vLi4vaW5kZXguc3ZlbHRlIiwiLi4vLi4vLi4vaW5kZXguc3ZlbHRlIiwiLi4vLi4vLi4vW3NsdWddLnN2ZWx0ZSIsIi4uLy4uLy4uL0ljb24uc3ZlbHRlIiwiLi4vLi4vLi4vSW5wdXQuc3ZlbHRlIiwiLi4vLi4vLi4vQnV0dG9uLnN2ZWx0ZSIsIi4uLy4uLy4uL1BpY3R1cmUuc3ZlbHRlIiwiLi4vLi4vLi4vUHJvZ3Jlc3Muc3ZlbHRlIiwiLi4vLi4vLi4vTmF2LnN2ZWx0ZSIsIi4uLy4uLy4uL1N3aXBlLnN2ZWx0ZSIsIi4uLy4uLy4uL1N3aXBlSXRlbS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cblx0aW1wb3J0IHsgTmF2IH0gZnJvbSAnLi4vY29tcG9uZW50cyc7XG5cdGltcG9ydCBJY29ucyBmcm9tICcuL19pY29ucy5zdmVsdGUnO1xuXG5cdGV4cG9ydCBsZXQgc2VnbWVudDtcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG5cdG1haW4ge1xuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRtYXgtd2lkdGg6IDU2ZW07XG5cdFx0bWFyZ2luOiAwIGF1dG87XG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0fVxuPC9zdHlsZT5cblxuPE5hdiB7c2VnbWVudH0vPlxuXG48SWNvbnMvPlxuXG48bWFpbj5cblx0PHNsb3Q+PC9zbG90PlxuPC9tYWluPlxuIiwiPHNjcmlwdD5cblx0ZXhwb3J0IGxldCBzdGF0dXM7XG5cdGV4cG9ydCBsZXQgZXJyb3I7XG5cblx0Y29uc3QgZGV2ID0gXCJkZXZlbG9wbWVudFwiID09PSAnZGV2ZWxvcG1lbnQnO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblx0aDEsIHAge1xuXHRcdG1hcmdpbjogMCBhdXRvO1xuXHR9XG5cblx0aDEge1xuXHRcdGZvbnQtc2l6ZTogMi44ZW07XG5cdFx0Zm9udC13ZWlnaHQ6IDcwMDtcblx0XHRtYXJnaW46IDAgMCAwLjVlbSAwO1xuXHR9XG5cblx0cCB7XG5cdFx0bWFyZ2luOiAxZW0gYXV0bztcblx0fVxuXG5cdEBtZWRpYSAobWluLXdpZHRoOiA0ODBweCkge1xuXHRcdGgxIHtcblx0XHRcdGZvbnQtc2l6ZTogNGVtO1xuXHRcdH1cblx0fVxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+e3N0YXR1c308L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPntzdGF0dXN9PC9oMT5cblxuPHA+e2Vycm9yLm1lc3NhZ2V9PC9wPlxuXG57I2lmIGRldiAmJiBlcnJvci5zdGFja31cblx0PHByZT57ZXJyb3Iuc3RhY2t9PC9wcmU+XG57L2lmfVxuIiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgeyBTd2lwZSwgU3dpcGVJdGVtIH0gZnJvbSBcInN2ZWx0ZS1zd2lwZVwiO1xuICAgIGltcG9ydCB7IEJ1dHRvbiwgUGljdHVyZSwgSW5wdXQsIFByb2dyZXNzLCBJY29uLCBGb3JtIH0gZnJvbSAnLi4vY29tcG9uZW50cydcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4gICAgaDEge1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLnRvcC13cmFwIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gICAgfVxuXG4gICAgLnRvcCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuXG4gICAgLnRvcC1waWMge1xuICAgICAgICBoZWlnaHQ6IDMzMHB4O1xuICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgfVxuXG4gICAgLm9wdGlvbnMge1xuICAgICAgICBmbGV4OiAwO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBtYXJnaW46IC03cHggMDtcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xuICAgIH1cblxuICAgIC5vcHRpb25zIGxpIHtcbiAgICAgICAgZmxleDogbm9uZTtcbiAgICAgICAgbWFyZ2luOiA3cHggMDtcbiAgICB9XG5cbiAgICAudG9wLXdyYXAgOmdsb2JhbCguc3dpcGUtaXRlbSkge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgIH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgICA8dGl0bGU+Q2hhcml0aWZ5IC0gaXMgdGhlIGFwcGxpY2F0aW9uIGZvciBoZWxwaW5nIHRob3NlIGluIG5lZWQuPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxicj5cblxuPHNlY3Rpb24gY2xhc3M9XCJ0b3Atd3JhcFwiPlxuICAgIDxzZWN0aW9uIGNsYXNzPVwidG9wXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0b3AtcGljXCI+XG4gICAgICAgICAgICA8U3dpcGU+XG4gICAgICAgICAgICAgICAgPFN3aXBlSXRlbSBjbGFzc2VzPVwic3dpcGUtaXRlbVwiPlxuICAgICAgICAgICAgICAgICAgICA8UGljdHVyZSBzcmM9XCJodHRwczovL3BsYWNlaW1nLmNvbS8xMDAwLzEwMDAvcGVvcGxlXCIgYWx0PVwic2FtcGxlXCIvPlxuICAgICAgICAgICAgICAgIDwvU3dpcGVJdGVtPlxuICAgICAgICAgICAgICAgIDxTd2lwZUl0ZW0gY2xhc3Nlcz1cInN3aXBlLWl0ZW1cIj5cbiAgICAgICAgICAgICAgICAgICAgPFBpY3R1cmUgc3JjPVwiaHR0cHM6Ly9wbGFjZWltZy5jb20vMTAwMC8xMDAwL2FueVwiIGFsdD1cInNhbXBsZVwiLz5cbiAgICAgICAgICAgICAgICA8L1N3aXBlSXRlbT5cbiAgICAgICAgICAgICAgICA8U3dpcGVJdGVtIGNsYXNzZXM9XCJzd2lwZS1pdGVtXCI+XG4gICAgICAgICAgICAgICAgICAgIDxQaWN0dXJlIHNyYz1cImh0dHBzOi8vcGxhY2VpbWcuY29tLzEwMDAvMTAwMC9wbGFjZVwiIGFsdD1cInNhbXBsZVwiLz5cbiAgICAgICAgICAgICAgICA8L1N3aXBlSXRlbT5cbiAgICAgICAgICAgIDwvU3dpcGU+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDx1bCBjbGFzcz1cIm9wdGlvbnNcIj5cbiAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICA8QnV0dG9uIGlzPVwic3VjY2Vzc1wiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCI+dGVzdDE8L0J1dHRvbj5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBpcz1cInN1Y2Nlc3NcIiBvbjpjbGljaz1cIntlID0+IGNvbnNvbGUubG9nKGUpfVwiPnRlc3QxMjwvQnV0dG9uPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICA8QnV0dG9uIGlzPVwic3VjY2Vzc1wiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCI+dGVzdDEyMzwvQnV0dG9uPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICA8YnI+XG4gICAgICAgICAgICAgICAgPElucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwibnVtYmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJudW1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgbGlzdD1cInN1bS1zdWdnZXN0aW9uc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIk51bVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvc2VsZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGlnbj1cInJpZ2h0XCJcbiAgICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgICAgPGRhdGFsaXN0IGlkPVwic3VtLXN1Z2dlc3Rpb25zXCI+XG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIyMFwiPlxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiNTAwXCI+XG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIxMDAwXCI+XG4gICAgICAgICAgICAgICAgPC9kYXRhbGlzdD5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBpcz1cIndhcm5pbmdcIiBvbjpjbGljaz1cIntlID0+IGNvbnNvbGUubG9nKGUpfVwiPlN1Ym1pdDwvQnV0dG9uPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICA8L3NlY3Rpb24+XG5cbiAgICA8c2VjdGlvbiBzdHlsZT1cInBhZGRpbmc6IDIwcHggNXB4IDIwcHggMFwiPlxuICAgICAgICA8UHJvZ3Jlc3MgdmFsdWU9XCI2NVwiPjwvUHJvZ3Jlc3M+XG4gICAgPC9zZWN0aW9uPlxuXG4gICAgPHNwYW4+XG4gICAgICAgICAgICA8SWNvbiB0eXBlPVwiaGVhcnQtZmlsbGVkXCIgaXM9XCJkYW5nZXJcIi8+XG4gICAgICAgICAgICA8SWNvbiB0eXBlPVwiaGVhcnQtZmlsbGVkXCIgaXM9XCJkYW5nZXJcIi8+XG4gICAgICAgICAgICA8SWNvbiB0eXBlPVwiaGVhcnQtZmlsbGVkXCIgaXM9XCJkYW5nZXJcIi8+XG4gICAgICAgICAgICA8SWNvbiB0eXBlPVwiaGVhcnQtZmlsbGVkXCIgaXM9XCJkYW5nZXJcIi8+XG4gICAgICAgICAgICA8SWNvbiB0eXBlPVwiaGVhcnQtZmlsbGVkXCIgaXM9XCJkYW5nZXJcIi8+XG4gICAgPC9zcGFuPlxuXG4gICAgPGJyPlxuICAgIDxicj5cblxuICAgIDxoMT5UaGUgbWFpbiB0aXRsZTwvaDE+XG5cbiAgICA8YnI+XG5cbiAgICA8cCBjbGFzcz1cInRleHQtY2VudGVyXCIgc3R5bGU9XCJwYWRkaW5nOiAwIDEwdndcIj5cbiAgICAgICAgQSBzbWFsbCBkZXNjcmlwdGlvbiB0aGF0IGRlc2NyaWJlcyB0aGUgdGl0bGUgYWJvdmUgYW5kIGp1c3QgbWFrZXMgdGV4dCBsb25nZXIuXG4gICAgPC9wPlxuPC9zZWN0aW9uPlxuXG5cbjxGb3JtIG9uOnN1Ym1pdD1cInsoZSkgPT4gY29uc29sZS5sb2coZSl9XCIgbmFtZT1cIm1haW4tZm9ybVwiPlxuICAgIDxicj5cbiAgICA8YnI+XG5cbiAgICA8SW5wdXQgbmFtZT1cInRlc3QxXCIgdHlwZT1cIm51bWJlclwiIGxpc3Q9XCJzdW0tc3VnZ2VzdGlvbnNcIi8+XG5cbiAgICA8YnI+XG4gICAgPGJyPlxuXG4gICAgPElucHV0IG5hbWU9XCJ0ZXN0MlwiIHR5cGU9XCJ0ZXh0XCIgbGlzdD1cInN1bS1zdWdnZXN0aW9uc1wiLz5cblxuICAgIDxicj5cbiAgICA8YnI+XG5cbiAgICA8SW5wdXQgbmFtZT1cInRlc3QzXCIgdHlwZT1cImVtYWlsXCIgbGlzdD1cInN1bS1zdWdnZXN0aW9uc1wiLz5cblxuICAgIDxicj5cbiAgICA8YnI+XG5cbiAgICA8SW5wdXQgbmFtZT1cInRlc3Q0XCIgdHlwZT1cInVybFwiIGxpc3Q9XCJzdW0tc3VnZ2VzdGlvbnNcIi8+XG5cbiAgICA8YnI+XG4gICAgPGJyPlxuXG4gICAgPElucHV0IG5hbWU9XCJ0ZXN0NVwiIHR5cGU9XCJzZWFyY2hcIiBsaXN0PVwic3VtLXN1Z2dlc3Rpb25zXCIvPlxuXG4gICAgPGJyPlxuICAgIDxicj5cblxuICAgIDxJbnB1dCBuYW1lPVwidGVzdDZcIiB0eXBlPVwiZGF0ZVwiIGxpc3Q9XCJzdW0tc3VnZ2VzdGlvbnNcIi8+XG5cbiAgICA8YnI+XG4gICAgPGJyPlxuXG4gICAgPElucHV0IG5hbWU9XCJ0ZXN0N1wiIHR5cGU9XCJwYXNzd29yZFwiIGxpc3Q9XCJzdW0tc3VnZ2VzdGlvbnNcIi8+XG5cbiAgICA8YnI+XG4gICAgPGJyPlxuXG4gICAgPElucHV0IG5hbWU9XCJ0ZXN0OFwiIHR5cGU9XCJ0ZWxcIiBsaXN0PVwic3VtLXN1Z2dlc3Rpb25zXCIvPlxuXG4gICAgPGJyPlxuICAgIDxicj5cblxuICAgIDxCdXR0b24gaXM9XCJzdWNjZXNzXCIgdHlwZT1cInN1Ym1pdFwiPlN1Ym1pdDwvQnV0dG9uPlxuPC9Gb3JtPlxuXG48aDE+Q2hhcml0aWZ5IC0gaXMgdGhlIGFwcGxpY2F0aW9uIGZvciBoZWxwaW5nIHRob3NlIGluIG5lZWQuPC9oMT5cblxuPGJyPlxuPGJyPlxuXG48aDIgY2xhc3M9XCJ0ZXh0LXN1Y2Nlc3NcIj5UeXBvZ3JhcGh5PC9oMj5cblxuPGJyPlxuPGJyPlxuXG48cD5GZXcgcGFyYWdyYXBocyB0byB0ZXh0IGZvbnRzPC9wPlxuPHA+0JTQtdC60ZbQu9GM0LrQsCDQv9Cw0YDQsNCz0YDQsNGE0ZbQsiDQtNC70Y8g0YLQtdGB0YLRgyDRgtC10LrRgdGC0YM8L3A+XG48cD7QndC10YHQutC+0LvRjNC60L4g0L/QsNGA0LDQs9GA0LDRhNC+0LIg0LTQu9GPINGC0LXRgdGC0LAg0YLQtdC60YHRgtCwPC9wPlxuXG48YnI+XG48YnI+XG5cbjxoMiBjbGFzcz1cInRleHQtd2FybmluZ1wiPkludGVyYWN0aXZlIGVsZW1lbnRzPC9oMj5cblxuPHVsPlxuICAgIDxsaT5cbiAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICA8SWNvbiBzaXplPVwic21hbGxcIiB0eXBlPVwiaGVhcnQtZmlsbGVkXCIvPlxuICAgICAgICAgICAgPEljb24gc2l6ZT1cInNtYWxsXCIgdHlwZT1cImhlYXJ0LWZpbGxlZFwiIGlzPVwid2FybmluZ1wiLz5cbiAgICAgICAgICAgIDxJY29uIHNpemU9XCJzbWFsbFwiIHR5cGU9XCJoZWFydC1maWxsZWRcIiBpcz1cImRhbmdlclwiLz5cbiAgICAgICAgPC9zcGFuPlxuICAgIDwvbGk+XG4gICAgPGxpPlxuICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgIDxJY29uIHR5cGU9XCJoZWFydC1maWxsZWRcIi8+XG4gICAgICAgICAgICA8SWNvbiB0eXBlPVwiaGVhcnQtZmlsbGVkXCIgaXM9XCJ3YXJuaW5nXCIvPlxuICAgICAgICAgICAgPEljb24gdHlwZT1cImhlYXJ0LWZpbGxlZFwiIGlzPVwiZGFuZ2VyXCIvPlxuICAgICAgICA8L3NwYW4+XG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgPEljb24gc2l6ZT1cImJpZ1wiIHR5cGU9XCJoZWFydC1maWxsZWRcIi8+XG4gICAgICAgICAgICA8SWNvbiBzaXplPVwiYmlnXCIgdHlwZT1cImhlYXJ0LWZpbGxlZFwiIGlzPVwid2FybmluZ1wiLz5cbiAgICAgICAgICAgIDxJY29uIHNpemU9XCJiaWdcIiB0eXBlPVwiaGVhcnQtZmlsbGVkXCIgaXM9XCJkYW5nZXJcIi8+XG4gICAgICAgIDwvc3Bhbj5cbiAgICA8L2xpPlxuPC91bD5cblxuPGJyPlxuPGJyPlxuXG48c2VjdGlvbiBzdHlsZT1cInRleHQtYWxpZ246IGNlbnRlcjsgZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmRcIj5cbiAgICA8ZGl2PlxuICAgICAgICA8YnI+XG4gICAgICAgIEJ1dHRvbnNcbiAgICAgICAgPGJyPlxuICAgICAgICA8YnI+XG4gICAgICAgIDxCdXR0b24gb246Y2xpY2s9XCJ7ZSA9PiBjb25zb2xlLmxvZyhlKX1cIj50ZXN0PC9CdXR0b24+XG4gICAgICAgIDxicj5cbiAgICAgICAgPGJyPlxuICAgICAgICA8QnV0dG9uIGlzPVwic3VjY2Vzc1wiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCI+dGVzdDwvQnV0dG9uPlxuICAgICAgICA8YnI+XG4gICAgICAgIDxicj5cbiAgICAgICAgPEJ1dHRvbiBpcz1cInN1Y2Nlc3NcIiBvbjpjbGljaz1cIntlID0+IGNvbnNvbGUubG9nKGUpfVwiIGFyaWFMYWJlbD1cInRleHRcIj50ZXN0PC9CdXR0b24+XG4gICAgICAgIDxicj5cbiAgICAgICAgPGJyPlxuICAgICAgICBXaXRoIHRleHRcbiAgICAgICAgPEJ1dHRvbiBpcz1cInN1Y2Nlc3NcIiBvbjpjbGljaz1cIntlID0+IGNvbnNvbGUubG9nKGUpfVwiPnRlc3Q8L0J1dHRvbj5cbiAgICAgICAgYW5kIGJlaGluZC5cbiAgICAgICAgPGJyPlxuICAgICAgICA8YnI+XG4gICAgICAgIDxCdXR0b24gaXM9XCJ3YXJuaW5nXCIgb246Y2xpY2s9XCJ7ZSA9PiBjb25zb2xlLmxvZyhlKX1cIj5Tb21lIGV4YW1wbGUgb2YgQnV0dG9uPC9CdXR0b24+XG4gICAgICAgIDxicj5cbiAgICAgICAgPGJyPlxuICAgICAgICA8QnV0dG9uIGlzPVwiZGFuZ2VyXCIgb246Y2xpY2s9XCJ7ZSA9PiBjb25zb2xlLmxvZyhlKX1cIj5Tb21lIGV4YW1wbGUgb2YgQnV0dG9uPC9CdXR0b24+XG4gICAgICAgIDxicj5cbiAgICAgICAgPGJyPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdj5cbiAgICAgICAgPGJyPlxuICAgICAgICBMaW5rcyBhcyBidXR0b25zXG4gICAgICAgIDxicj5cbiAgICAgICAgPGJyPlxuICAgICAgICA8QnV0dG9uIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCIgaHJlZj1cIiNcIj50ZXN0PC9CdXR0b24+XG4gICAgICAgIDxicj5cbiAgICAgICAgPGJyPlxuICAgICAgICA8QnV0dG9uIGlzPVwic3VjY2Vzc1wiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCIgaHJlZj1cIiNcIj50ZXN0PC9CdXR0b24+XG4gICAgICAgIDxicj5cbiAgICAgICAgPGJyPlxuICAgICAgICA8QnV0dG9uIGlzPVwic3VjY2Vzc1wiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCIgaHJlZj1cIiNcIj50ZXN0PC9CdXR0b24+XG4gICAgICAgIDxicj5cbiAgICAgICAgPGJyPlxuICAgICAgICBXaXRoIHRleHRcbiAgICAgICAgPEJ1dHRvbiBpcz1cInN1Y2Nlc3NcIiBvbjpjbGljaz1cIntlID0+IGNvbnNvbGUubG9nKGUpfVwiIGhyZWY9XCIjXCI+dGVzdDwvQnV0dG9uPlxuICAgICAgICBhbmQgYmVoaW5kLlxuICAgICAgICA8YnI+XG4gICAgICAgIDxicj5cbiAgICAgICAgPEJ1dHRvbiBpcz1cIndhcm5pbmdcIiBvbjpjbGljaz1cIntlID0+IGNvbnNvbGUubG9nKGUpfVwiIGhyZWY9XCIjXCI+U29tZSBleGFtcGxlIG9mIEJ1dHRvbjwvQnV0dG9uPlxuICAgICAgICA8YnI+XG4gICAgICAgIDxicj5cbiAgICAgICAgPEJ1dHRvbiBpcz1cImRhbmdlclwiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCIgaHJlZj1cIiNcIj5Tb21lIGV4YW1wbGUgb2YgQnV0dG9uPC9CdXR0b24+XG4gICAgICAgIDxicj5cbiAgICAgICAgPGJyPlxuICAgIDwvZGl2PlxuPC9zZWN0aW9uPlxuXG48YnI+XG48YnI+XG5cbjxoMiBjbGFzcz1cInRleHQtZGFuZ2VyXCI+SW5wdXQgZmllbGRzPC9oMj5cblxuPGJyPlxuPGJyPlxuXG48c2VjdGlvbj5cbiAgICA8SW5wdXQgcm93cz17Mn0gbmFtZT1cInRleFwiIGxpc3Q9XCJsaXNcIi8+XG5cbiAgICA8YnI+XG4gICAgPGJyPlxuXG4gICAgPElucHV0IG5hbWU9XCJ0ZXgxXCIgbGlzdD1cImxpc1wiIHBsYWNlaG9sZGVyPVwiU29tZSBwbGFjZWhvbGRlciB0ZXh0XCIvPlxuXG4gICAgPGJyPlxuICAgIDxicj5cblxuICAgIDxJbnB1dCB0eXBlPVwibnVtYmVyXCIgbmFtZT1cInRleDJcIiBsaXN0PVwibGlzXCIvPlxuXG4gICAgPGRhdGFsaXN0IGlkPVwibGlzXCI+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCIxXCI+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCIyXCI+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCIzXCI+XG4gICAgPC9kYXRhbGlzdD5cblxuICAgIDxsYWJlbCBmb3I9XCJpbnB1dFwiIGNsYXNzPVwidGV4dC1zdWNjZXNzXCI+bGFiZWw8L2xhYmVsPlxuICAgIDxpbnB1dCBpZD1cImlucHV0XCIgdHlwZT1cInRleHRcIiB2YWx1ZT1cInRleHRcIj5cblxuICAgIDxicj5cbiAgICA8YnI+XG5cbiAgICA8YSBocmVmPVwiLlwiIGNsYXNzPVwidGV4dC13YXJuaW5nXCI+U29tZSBsaW5rPC9hPlxuXG4gICAgPGJyPlxuICAgIDxicj5cblxuICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwidGV4dC1pbmZvXCI+QnV0dG9uIGV4YW1wbGU8L2J1dHRvbj5cbjwvc2VjdGlvbj5cblxuPGJyPlxuPGJyPlxuXG48aDIgY2xhc3M9XCJ0ZXh0LWluZm9cIj5JbWFnZXM8L2gyPlxuXG48UGljdHVyZSBhbHQ9XCJCb3JhdFwiIHNyYz1cImdyZWF0LXN1Y2Nlc3MucG5nXCIgY2xhc3M9XCJwaWN0dXJlXCI+XG4gICAgSElHSCBGSVZFIVxuPC9QaWN0dXJlPlxuXG48YnI+XG48YnI+XG5cbjxQaWN0dXJlIHNyYz1cImh0dHBzOi8vcGxhY2VpbWcuY29tLzEwMDAvMTAwMC9hbnlcIiBhbHQ9XCJzYW1wbGVcIi8+XG5cbjxicj5cbjxicj5cblxuPGgyIGNsYXNzPVwidGV4dC1zdWNjZXNzXCI+T3RoZXI8L2gyPlxuXG48cD5cbiAgICA8c3Ryb25nPlxuICAgICAgICBUcnkgZWRpdGluZyB0aGlzIGZpbGUgKHNyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlKSB0byB0ZXN0IGxpdmUgcmVsb2FkaW5nLlxuICAgIDwvc3Ryb25nPlxuPC9wPlxuXG48cCBzdHlsZT1cInRleHQtYWxpZ246IGp1c3RpZnlcIj5cbiAgICBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuXG4gICAgQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LlxuICAgIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC5cbiAgICBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuXG4gICAgQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LlxuXG4gICAgQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LlxuICAgIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC5cbiAgICBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuXG4gICAgQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LlxuICAgIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC5cblxuICAgIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC5cbiAgICBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuXG4gICAgQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LlxuICAgIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC5cbiAgICBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuXG5cbiAgICBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuXG4gICAgQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LlxuICAgIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC5cbiAgICBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuXG4gICAgQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LlxuXG4gICAgQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LlxuICAgIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC5cbiAgICBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuXG4gICAgQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LlxuICAgIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC4gQSBsb3Qgb2YgRW5nbGlzaCB0ZXh0LiBBIGxvdCBvZiBFbmdsaXNoIHRleHQuIEEgbG90IG9mIEVuZ2xpc2ggdGV4dC5cbjwvcD5cbiIsIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuXHRleHBvcnQgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuXHRcdHJldHVybiB0aGlzLmZldGNoKGBibG9nLmpzb25gKS50aGVuKHIgPT4gci5qc29uKCkpLnRoZW4ocG9zdHMgPT4ge1xuXHRcdFx0cmV0dXJuIHsgcG9zdHMgfTtcblx0XHR9KTtcblx0fVxuPC9zY3JpcHQ+XG5cbjxzY3JpcHQ+XG5cdGV4cG9ydCBsZXQgcG9zdHM7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuXHR1bCB7XG5cdFx0bWFyZ2luOiAwIDAgMWVtIDA7XG5cdFx0bGluZS1oZWlnaHQ6IDEuNTtcblx0fVxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+QmxvZzwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48aDE+UmVjZW50IHBvc3RzPC9oMT5cblxuPHVsPlxuXHR7I2VhY2ggcG9zdHMgYXMgcG9zdH1cblx0XHQ8IS0tIHdlJ3JlIHVzaW5nIHRoZSBub24tc3RhbmRhcmQgYHJlbD1wcmVmZXRjaGAgYXR0cmlidXRlIHRvXG5cdFx0XHRcdHRlbGwgU2FwcGVyIHRvIGxvYWQgdGhlIGRhdGEgZm9yIHRoZSBwYWdlIGFzIHNvb24gYXNcblx0XHRcdFx0dGhlIHVzZXIgaG92ZXJzIG92ZXIgdGhlIGxpbmsgb3IgdGFwcyBpdCwgaW5zdGVhZCBvZlxuXHRcdFx0XHR3YWl0aW5nIGZvciB0aGUgJ2NsaWNrJyBldmVudCAtLT5cblx0XHQ8bGk+PGEgcmVsPSdwcmVmZXRjaCcgaHJlZj0nYmxvZy97cG9zdC5zbHVnfSc+e3Bvc3QudGl0bGV9PC9hPjwvbGk+XG5cdHsvZWFjaH1cbjwvdWw+IiwiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG5cdGV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVsb2FkKHsgcGFyYW1zLCBxdWVyeSB9KSB7XG5cdFx0Ly8gdGhlIGBzbHVnYCBwYXJhbWV0ZXIgaXMgYXZhaWxhYmxlIGJlY2F1c2Vcblx0XHQvLyB0aGlzIGZpbGUgaXMgY2FsbGVkIFtzbHVnXS5zdmVsdGVcblx0XHRjb25zdCByZXMgPSBhd2FpdCB0aGlzLmZldGNoKGBibG9nLyR7cGFyYW1zLnNsdWd9Lmpzb25gKTtcblx0XHRjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuXHRcdGlmIChyZXMuc3RhdHVzID09PSAyMDApIHtcblx0XHRcdHJldHVybiB7IHBvc3Q6IGRhdGEgfTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5lcnJvcihyZXMuc3RhdHVzLCBkYXRhLm1lc3NhZ2UpO1xuXHRcdH1cblx0fVxuPC9zY3JpcHQ+XG5cbjxzY3JpcHQ+XG5cdGV4cG9ydCBsZXQgcG9zdDtcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG5cdC8qXG5cdFx0QnkgZGVmYXVsdCwgQ1NTIGlzIGxvY2FsbHkgc2NvcGVkIHRvIHRoZSBjb21wb25lbnQsXG5cdFx0YW5kIGFueSB1bnVzZWQgc3R5bGVzIGFyZSBkZWFkLWNvZGUtZWxpbWluYXRlZC5cblx0XHRJbiB0aGlzIHBhZ2UsIFN2ZWx0ZSBjYW4ndCBrbm93IHdoaWNoIGVsZW1lbnRzIGFyZVxuXHRcdGdvaW5nIHRvIGFwcGVhciBpbnNpZGUgdGhlIHt7e3Bvc3QuaHRtbH19fSBibG9jayxcblx0XHRzbyB3ZSBoYXZlIHRvIHVzZSB0aGUgOmdsb2JhbCguLi4pIG1vZGlmaWVyIHRvIHRhcmdldFxuXHRcdGFsbCBlbGVtZW50cyBpbnNpZGUgLmNvbnRlbnRcblx0Ki9cblx0LmNvbnRlbnQgOmdsb2JhbChoMikge1xuXHRcdGZvbnQtc2l6ZTogMS40ZW07XG5cdFx0Zm9udC13ZWlnaHQ6IDUwMDtcblx0fVxuXG5cdC5jb250ZW50IDpnbG9iYWwocHJlKSB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcblx0XHRib3gtc2hhZG93OiBpbnNldCAxcHggMXB4IDVweCByZ2JhKDAsMCwwLDAuMDUpO1xuXHRcdHBhZGRpbmc6IDAuNWVtO1xuXHRcdGJvcmRlci1yYWRpdXM6IDJweDtcblx0XHRvdmVyZmxvdy14OiBhdXRvO1xuXHR9XG5cblx0LmNvbnRlbnQgOmdsb2JhbChwcmUpIDpnbG9iYWwoY29kZSkge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cblxuXHQuY29udGVudCA6Z2xvYmFsKHVsKSB7XG5cdFx0bGluZS1oZWlnaHQ6IDEuNTtcblx0fVxuXG5cdC5jb250ZW50IDpnbG9iYWwobGkpIHtcblx0XHRtYXJnaW46IDAgMCAwLjVlbSAwO1xuXHR9XG48L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT57cG9zdC50aXRsZX08L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPntwb3N0LnRpdGxlfTwvaDE+XG5cbjxkaXYgY2xhc3M9J2NvbnRlbnQnPlxuXHR7QGh0bWwgcG9zdC5odG1sfVxuPC9kaXY+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IGNsYXNzbmFtZXMsIHRvQ1NTU3RyaW5nIH0gZnJvbSAnLi4vdXRpbHMnXG5cbiAgICBleHBvcnQgbGV0IHR5cGVcbiAgICBleHBvcnQgbGV0IGlzID0gJ3ByaW1hcnknIC8vIHByaW1hcnl8d2FybmluZ3xkYW5nZXJcbiAgICBleHBvcnQgbGV0IHNpemUgPSAnbWVkaXVtJyAvLyBzbWFsbHxtZWRpdW18YmlnXG4gICAgZXhwb3J0IGxldCByb3RhdGUgPSAwXG4gICAgZXhwb3J0IGxldCBzdHlsZSA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgaWQgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IHRpdGxlID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBhcmlhTGFiZWwgPSB1bmRlZmluZWRcblxuICAgIGxldCB0aXRsZVByb3AgPSB0aXRsZSB8fCBhcmlhTGFiZWxcbiAgICBsZXQgYXJpYUxhYmVsUHJvcCA9IGFyaWFMYWJlbCB8fCB0aXRsZVxuICAgIGxldCBzdHlsZVByb3AgPSB0b0NTU1N0cmluZyh7IHRyYW5zZm9ybTogISFyb3RhdGUgPyBgcm90YXRlWigke3JvdGF0ZX1kZWcpYCA6IG51bGwsIC4uLnN0eWxlIH0pXG5cbiAgICAkOiAgY2xhc3NQcm9wID0gY2xhc3NuYW1lcygnaWNvJywgaXMsIHNpemUsICQkcHJvcHMuY2xhc3MpXG48L3NjcmlwdD5cblxuPHN2Z1xuICAgICAgICB7aWR9XG4gICAgICAgIHRpdGxlPXt0aXRsZVByb3B9XG4gICAgICAgIGNsYXNzPXtjbGFzc1Byb3B9XG4gICAgICAgIHN0eWxlPXtzdHlsZVByb3B9XG4gICAgICAgIGFyaWEtbGFiZWw9e2FyaWFMYWJlbFByb3B9XG4+XG4gICAgPHVzZSB4bGluazpocmVmPXtgI2ljby0ke3R5cGV9YH0gY2xhc3M9XCJpY29fdXNlXCIvPlxuPC9zdmc+XG5cbjxzdHlsZT5cbiAgICBzdmcge1xuICAgICAgICBkaXNwbGF5OiBpbmhlcml0O1xuICAgIH1cblxuICAgIC8qIC0tLS0tLS0tLS0tLT09PT09PT09PSggU2l6ZSApPT09PT09PT09LS0tLS0tLS0tLS0tICovXG4gICAgLnNtYWxsIHtcbiAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgIGhlaWdodDogMTVweDtcbiAgICB9XG5cbiAgICAubWVkaXVtIHtcbiAgICAgICAgd2lkdGg6IDI1cHg7XG4gICAgICAgIGhlaWdodDogMjVweDtcbiAgICB9XG5cbiAgICAuYmlnIHtcbiAgICAgICAgd2lkdGg6IDM1cHg7XG4gICAgICAgIGhlaWdodDogMzVweDtcbiAgICB9XG5cbiAgICAvKiAtLS0tLS0tLS0tLS09PT09PT09PT0oIENvbG9yICk9PT09PT09PT0tLS0tLS0tLS0tLS0gKi9cbiAgICAucHJpbWFyeSAqIHtcbiAgICAgICAgZmlsbDogcmdiKHZhcigtLWNvbG9yLXN1Y2Nlc3MpKTtcbiAgICAgICAgc3Ryb2tlOiByZ2IodmFyKC0tY29sb3Itc3VjY2VzcykpO1xuICAgIH1cblxuICAgIC53YXJuaW5nICoge1xuICAgICAgICBmaWxsOiByZ2IodmFyKC0tY29sb3Itd2FybmluZykpO1xuICAgICAgICBzdHJva2U6IHJnYih2YXIoLS1jb2xvci13YXJuaW5nKSk7XG4gICAgfVxuXG4gICAgLmRhbmdlciAqIHtcbiAgICAgICAgZmlsbDogcmdiKHZhcigtLWNvbG9yLWRhbmdlcikpO1xuICAgICAgICBzdHJva2U6IHJnYih2YXIoLS1jb2xvci1kYW5nZXIpKTtcbiAgICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnXG4gICAgaW1wb3J0IHsgY2xhc3NuYW1lcywgdG9DU1NTdHJpbmcgfSBmcm9tICcuLi91dGlscydcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKClcblxuICAgIGV4cG9ydCBsZXQgbmFtZVxuICAgIGV4cG9ydCBsZXQgdmFsdWUgPSAnJ1xuICAgIGV4cG9ydCBsZXQgc3R5bGUgPSB7fVxuICAgIGV4cG9ydCBsZXQgdHlwZSA9ICd0ZXh0J1xuICAgIGV4cG9ydCBsZXQgaWQgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IGFsaWduID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBtYXhsZW5ndGggPSAxMDAwXG4gICAgZXhwb3J0IGxldCByb3dzID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCBkaXNhYmxlZCA9IGZhbHNlXG4gICAgZXhwb3J0IGxldCB0aXRsZSA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgaW52YWxpZCA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgbWluID0gdW5kZWZpbmVkIC8vIFNwZWNpZmllcyBhIG1pbmltdW0gdmFsdWUgZm9yIGFuIDxpbnB1dD4gZWxlbWVudFxuICAgIGV4cG9ydCBsZXQgbWF4ID0gdW5kZWZpbmVkIC8vIFNwZWNpZmllcyB0aGUgbWF4aW11bSB2YWx1ZSBmb3IgYW4gPGlucHV0PiBlbGVtZW50XG4gICAgZXhwb3J0IGxldCBsaXN0ID0gdW5kZWZpbmVkIC8vIFJlZmVycyB0byBhIDxkYXRhbGlzdD4gZWxlbWVudCB0aGF0IGNvbnRhaW5zIHByZS1kZWZpbmVkIG9wdGlvbnMgZm9yIGFuIDxpbnB1dD4gZWxlbWVudFxuICAgIGV4cG9ydCBsZXQgZm9ybSA9IHVuZGVmaW5lZCAvLyBTcGVjaWZpZXMgdGhlIGZvcm0gdGhlIDxpbnB1dD4gZWxlbWVudCBiZWxvbmdzIHRvXG4gICAgZXhwb3J0IGxldCByZWFkb25seSA9IHVuZGVmaW5lZCAvLyB1bmRlZmluZWR8cmVhZG9ubHlcbiAgICBleHBvcnQgbGV0IHJlcXVpcmVkID0gdW5kZWZpbmVkIC8vIHVuZGVmaW5lZHxyZXF1aXJlZFxuICAgIGV4cG9ydCBsZXQgcGF0dGVybiA9IHVuZGVmaW5lZCAvLyBTcGVjaWZpZXMgYSByZWd1bGFyIGV4cHJlc3Npb24gdGhhdCBhbiA8aW5wdXQ+IGVsZW1lbnQncyB2YWx1ZSBpcyBjaGVja2VkIGFnYWluc3QgKHJlZ2V4cClcbiAgICBleHBvcnQgbGV0IGF1dG9jb21wbGV0ZSA9IHRydWUgLy8gb258b2ZmXG4gICAgZXhwb3J0IGxldCBhdXRvc2VsZWN0ID0gZmFsc2VcbiAgICBleHBvcnQgbGV0IGFyaWFMYWJlbCA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgcGxhY2Vob2xkZXIgPSB1bmRlZmluZWRcblxuICAgIGxldCBpZFByb3AgPSBpZCB8fCBuYW1lXG4gICAgbGV0IHR5cGVQcm9wID0gdHlwZSA9PT0gJ251bWJlcicgPyAndGV4dCcgOiB0eXBlXG4gICAgbGV0IHRpdGxlUHJvcCA9IHRpdGxlIHx8IGFyaWFMYWJlbCB8fCBwbGFjZWhvbGRlclxuICAgIGxldCBhcmlhTGFiZWxQcm9wID0gYXJpYUxhYmVsIHx8IHRpdGxlIHx8IHBsYWNlaG9sZGVyXG4gICAgbGV0IGF1dG9jb21wbGV0ZVByb3AgPSBhdXRvY29tcGxldGUgPyAnb24nIDogJ29mZidcbiAgICBsZXQgc3R5bGVQcm9wID0gdG9DU1NTdHJpbmcoeyAuLi5zdHlsZSwgdGV4dEFsaWduOiBhbGlnbiB9KVxuICAgIGxldCBwYXR0ZXJuUHJvcCA9IHR5cGUgPT09ICdudW1iZXInICYmICFwYXR0ZXJuID8gJ1swLTldKicgOiBwYXR0ZXJuXG5cbiAgICAkOiBjbGFzc1Byb3AgPSBjbGFzc25hbWVzKCdpbnAnLCAndGhlbWUtYmctY29sb3InLCAkJHByb3BzLmNsYXNzLCB7IGRpc2FibGVkLCByZWFkb25seSwgcmVxdWlyZWQsIGludmFsaWQgfSlcblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQGRlc2NyaXB0aW9uIEVtaXQgY2xpY2sgYW5kIHNlbGVjdCBjb250ZW50IHdoZW4gXCJhdXRvc2VsZWN0XCIgaXMgZW5hYmxlZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7TW91c2VFdmVudH0gZSAtIE5hdGl2ZSBtb3VzZSBldmVudC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBvbkNsaWNrKGUpIHtcbiAgICAgICAgIWRpc2FibGVkICYmIGRpc3BhdGNoKFwiY2xpY2tcIiwgZSlcbiAgICAgICAgIWRpc2FibGVkICYmIGF1dG9zZWxlY3QgJiYgZS50YXJnZXQuc2VsZWN0KClcbiAgICB9XG48L3NjcmlwdD5cblxueyNpZiByb3dzfVxuICAgIDx0ZXh0YXJlYVxuICAgICAgICAgICAge21pbn1cbiAgICAgICAgICAgIHttYXh9XG4gICAgICAgICAgICB7cm93c31cbiAgICAgICAgICAgIHtuYW1lfVxuICAgICAgICAgICAge2Zvcm19XG4gICAgICAgICAgICB7YWxpZ259XG4gICAgICAgICAgICB7cmVhZG9ubHl9XG4gICAgICAgICAgICB7ZGlzYWJsZWR9XG4gICAgICAgICAgICB7cmVxdWlyZWR9XG4gICAgICAgICAgICB7bWF4bGVuZ3RofVxuICAgICAgICAgICAge3BsYWNlaG9sZGVyfVxuICAgICAgICAgICAgaWQ9e2lkUHJvcH1cbiAgICAgICAgICAgIGNsYXNzPXtjbGFzc1Byb3B9XG4gICAgICAgICAgICB0aXRsZT17dGl0bGVQcm9wfVxuICAgICAgICAgICAgc3R5bGU9e3N0eWxlUHJvcH1cbiAgICAgICAgICAgIHBhdHRlcm49e3BhdHRlcm5Qcm9wfVxuICAgICAgICAgICAgYXJpYS1sYWJlbD17YXJpYUxhYmVsUHJvcH1cbiAgICAgICAgICAgIGF1dG9jb21wbGV0ZT17YXV0b2NvbXBsZXRlUHJvcH1cbiAgICAgICAgICAgIHsuLi57IHR5cGU6IHR5cGVQcm9wIH19XG4gICAgICAgICAgICBiaW5kOnZhbHVlXG4gICAgICAgICAgICBvbjpibHVyPSd7ZSA9PiAhZGlzYWJsZWQgJiYgZGlzcGF0Y2goXCJibHVyXCIsIGUpfSdcbiAgICAgICAgICAgIG9uOmZvY3VzPSd7ZSA9PiAhZGlzYWJsZWQgJiYgZGlzcGF0Y2goXCJmb2N1c1wiLCBlKX0nXG4gICAgICAgICAgICBvbjpjbGljaz0ne29uQ2xpY2t9J1xuICAgID48L3RleHRhcmVhPlxuezplbHNlfVxuICAgIDxpbnB1dFxuICAgICAgICAgICAge21pbn1cbiAgICAgICAgICAgIHttYXh9XG4gICAgICAgICAgICB7bmFtZX1cbiAgICAgICAgICAgIHtsaXN0fVxuICAgICAgICAgICAge2Zvcm19XG4gICAgICAgICAgICB7YWxpZ259XG4gICAgICAgICAgICB7cmVhZG9ubHl9XG4gICAgICAgICAgICB7ZGlzYWJsZWR9XG4gICAgICAgICAgICB7cmVxdWlyZWR9XG4gICAgICAgICAgICB7bWF4bGVuZ3RofVxuICAgICAgICAgICAge3BsYWNlaG9sZGVyfVxuICAgICAgICAgICAgaWQ9e2lkUHJvcH1cbiAgICAgICAgICAgIGNsYXNzPXtjbGFzc1Byb3B9XG4gICAgICAgICAgICB0aXRsZT17dGl0bGVQcm9wfVxuICAgICAgICAgICAgc3R5bGU9e3N0eWxlUHJvcH1cbiAgICAgICAgICAgIHBhdHRlcm49e3BhdHRlcm5Qcm9wfVxuICAgICAgICAgICAgYXJpYS1sYWJlbD17YXJpYUxhYmVsUHJvcH1cbiAgICAgICAgICAgIGF1dG9jb21wbGV0ZT17YXV0b2NvbXBsZXRlUHJvcH1cbiAgICAgICAgICAgIHsuLi57IHR5cGU6IHR5cGVQcm9wIH19XG4gICAgICAgICAgICBiaW5kOnZhbHVlXG4gICAgICAgICAgICBvbjpibHVyPSd7ZSA9PiAhZGlzYWJsZWQgJiYgZGlzcGF0Y2goXCJibHVyXCIsIGUpfSdcbiAgICAgICAgICAgIG9uOmZvY3VzPSd7ZSA9PiAhZGlzYWJsZWQgJiYgZGlzcGF0Y2goXCJmb2N1c1wiLCBlKX0nXG4gICAgICAgICAgICBvbjpjbGljaz0ne29uQ2xpY2t9J1xuICAgIC8+XG57L2lmfVxuXG48c3R5bGU+XG4gICAgLmlucCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbGV4OiAxIDEgMDtcbiAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpO1xuICAgICAgICBtaW4td2lkdGg6IHZhcigtLW1pbi1pbnRlcmFjdGl2ZS1zaXplKTtcbiAgICAgICAgbWluLWhlaWdodDogdmFyKC0tbWluLWludGVyYWN0aXZlLXNpemUpO1xuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCByZ2IodmFyKC0tY29sb3ItaW5mbykpO1xuICAgIH1cblxuICAgIC5pbnA6Zm9jdXMge1xuICAgICAgICBib3JkZXItY29sb3I6IHJnYih2YXIoLS1jb2xvci1zdWNjZXNzKSk7XG4gICAgfVxuXG4gICAgLmlucDppbnZhbGlkLCAuaW5wLmludmFsaWQge1xuICAgICAgICBib3JkZXItY29sb3I6IHJnYih2YXIoLS1jb2xvci1kYW5nZXIpKTtcbiAgICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnXG4gICAgaW1wb3J0IHsgY2xhc3NuYW1lcyB9IGZyb20gJy4uL3V0aWxzJ1xuXG4gICAgY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKVxuXG4gICAgZXhwb3J0IGxldCBpcyA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgaWQgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IGhyZWYgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IHR5cGUgPSAnYnV0dG9uJ1xuICAgIGV4cG9ydCBsZXQgdGl0bGUgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IGRpc2FibGVkID0gZmFsc2VcbiAgICBleHBvcnQgbGV0IGFyaWFMYWJlbCA9IHVuZGVmaW5lZFxuXG4gICAgbGV0IHRpdGxlUHJvcCA9IHRpdGxlIHx8IGFyaWFMYWJlbFxuICAgIGxldCBhcmlhTGFiZWxQcm9wID0gYXJpYUxhYmVsIHx8IHRpdGxlXG5cbiAgICAkOiBjbGFzc1Byb3AgPSBjbGFzc25hbWVzKCdidG4nLCBpcywgJCRwcm9wcy5jbGFzcywgeyBkaXNhYmxlZCB9KVxuPC9zY3JpcHQ+XG5cbnsjaWYgaHJlZn1cbiAgICA8YVxuICAgICAgICAgICAge2lkfVxuICAgICAgICAgICAge2hyZWZ9XG4gICAgICAgICAgICB0aXRsZT17dGl0bGVQcm9wfVxuICAgICAgICAgICAgY2xhc3M9e2NsYXNzUHJvcH1cbiAgICAgICAgICAgIGFyaWEtbGFiZWw9e2FyaWFMYWJlbFByb3B9XG4gICAgICAgICAgICBvbjpjbGljaz0ne2UgPT4gIWRpc2FibGVkICYmIGRpc3BhdGNoKFwiY2xpY2tcIiwgZSl9J1xuICAgID5cbiAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgIDwvYT5cbns6ZWxzZX1cbiAgICA8YnV0dG9uXG4gICAgICAgICAgICB7aWR9XG4gICAgICAgICAgICB7dHlwZX1cbiAgICAgICAgICAgIHtkaXNhYmxlZH1cbiAgICAgICAgICAgIHRpdGxlPXt0aXRsZVByb3B9XG4gICAgICAgICAgICBjbGFzcz17Y2xhc3NQcm9wfVxuICAgICAgICAgICAgYXJpYS1sYWJlbD17YXJpYUxhYmVsUHJvcH1cbiAgICAgICAgICAgIG9uOmNsaWNrPSd7ZSA9PiAhZGlzYWJsZWQgJiYgZGlzcGF0Y2goXCJjbGlja1wiLCBlKX0nXG4gICAgPlxuICAgICAgICA8c2xvdD48L3Nsb3Q+XG4gICAgPC9idXR0b24+XG57L2lmfVxuXG48c3R5bGU+XG4gICAgLmJ0biB7XG4gICAgICAgIGZsZXg6IG5vbmU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgcGFkZGluZzogNXB4IDE1cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7XG4gICAgICAgIG1pbi13aWR0aDogdmFyKC0tbWluLWludGVyYWN0aXZlLXNpemUpO1xuICAgICAgICBtaW4taGVpZ2h0OiB2YXIoLS1taW4taW50ZXJhY3RpdmUtc2l6ZSk7XG4gICAgICAgIHRleHQtc2hhZG93OiAxcHggMXB4IHJnYmEoMCwgMCwgMCwgLjMpO1xuICAgIH1cblxuICAgIC5idG46Zm9jdXMge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgfVxuXG4gICAgLmJ0bjpob3ZlciB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIH1cblxuICAgIC5idG46YWN0aXZlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIH1cblxuICAgIC8qIFN1Y2Nlc3MgKi9cblxuICAgIC5idG4uc3VjY2VzcyB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvci1saWdodC1mb250KTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKHZhcigtLWNvbG9yLXN1Y2Nlc3MpKTtcbiAgICAgICAgYm94LXNoYWRvdzogMCAzcHggcmdiKHZhcigtLWNvbG9yLXN1Y2Nlc3MtZGFyaykpLCAwIDEwcHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICB9XG5cbiAgICAuYnRuLnN1Y2Nlc3M6Zm9jdXMge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IodmFyKC0tY29sb3Itc3VjY2VzcyksIC44NSk7XG4gICAgfVxuXG4gICAgLmJ0bi5zdWNjZXNzOmhvdmVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMnB4IHJnYih2YXIoLS1jb2xvci1zdWNjZXNzLWRhcmspKSwgMCAxMHB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgfVxuXG4gICAgLmJ0bi5zdWNjZXNzOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpO1xuICAgICAgICBib3gtc2hhZG93OiAwIDFweCByZ2IodmFyKC0tY29sb3Itc3VjY2Vzcy1kYXJrKSksIDAgMTBweCAxNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIH1cblxuICAgIC8qIFdhcm5pbmcgKi9cblxuICAgIC5idG4ud2FybmluZyB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1jb2xvci1saWdodC1mb250KTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKHZhcigtLWNvbG9yLXdhcm5pbmcpKTtcbiAgICAgICAgYm94LXNoYWRvdzogMCAzcHggcmdiKHZhcigtLWNvbG9yLXdhcm5pbmctZGFyaykpLCAwIDEwcHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICB9XG5cbiAgICAuYnRuLndhcm5pbmc6Zm9jdXMge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IodmFyKC0tY29sb3Itd2FybmluZyksIC44NSk7XG4gICAgfVxuXG4gICAgLmJ0bi53YXJuaW5nOmhvdmVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMnB4IHJnYih2YXIoLS1jb2xvci13YXJuaW5nLWRhcmspKSwgMCAxMHB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgfVxuXG4gICAgLmJ0bi53YXJuaW5nOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpO1xuICAgICAgICBib3gtc2hhZG93OiAwIDFweCByZ2IodmFyKC0tY29sb3Itd2FybmluZy1kYXJrKSksIDAgMTBweCAxNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIH1cblxuICAgIC8qIERhbmdlciAqL1xuXG4gICAgLmJ0bi5kYW5nZXIge1xuICAgICAgICBjb2xvcjogdmFyKC0tY29sb3ItbGlnaHQtZm9udCk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYih2YXIoLS1jb2xvci1kYW5nZXIpKTtcbiAgICAgICAgYm94LXNoYWRvdzogMCAzcHggcmdiKHZhcigtLWNvbG9yLWRhbmdlci1kYXJrKSksIDAgMTBweCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIH1cblxuICAgIC5idG4uZGFuZ2VyOmZvY3VzIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKHZhcigtLWNvbG9yLWRhbmdlciksIC44NSk7XG4gICAgfVxuXG4gICAgLmJ0bi5kYW5nZXI6aG92ZXIge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXB4KTtcbiAgICAgICAgYm94LXNoYWRvdzogMCAycHggcmdiKHZhcigtLWNvbG9yLWRhbmdlci1kYXJrKSksIDAgMTBweCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIH1cblxuICAgIC5idG4uZGFuZ2VyOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpO1xuICAgICAgICBib3gtc2hhZG93OiAwIDFweCByZ2IodmFyKC0tY29sb3ItZGFuZ2VyLWRhcmspKSwgMCAxMHB4IDE1cHggMCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgfVxuPC9zdHlsZT5cbiIsIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJ1xuICAgIGltcG9ydCB7IGNsYXNzbmFtZXMgfSBmcm9tICcuLi91dGlscydcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKClcblxuICAgIGV4cG9ydCBsZXQgc3JjXG4gICAgZXhwb3J0IGxldCBhbHRcbiAgICBleHBvcnQgbGV0IGlkID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCB3aWR0aCA9IHVuZGVmaW5lZFxuICAgIGV4cG9ydCBsZXQgaGVpZ2h0ID0gdW5kZWZpbmVkXG5cbiAgICBsZXQgbG9hZGluZyA9IHRydWVcbiAgICBsZXQgaXNFcnJvciA9IGZhbHNlXG5cbiAgICAkOiB3cmFwQ2xhc3NQcm9wID0gY2xhc3NuYW1lcygncGljdHVyZScsICQkcHJvcHMuY2xhc3MsIHsgbG9hZGluZywgaXNFcnJvciB9KVxuXG4gICAgZnVuY3Rpb24gb25Mb2FkKGUpIHtcbiAgICAgICAgbG9hZGluZyA9IGZhbHNlXG4gICAgICAgIGRpc3BhdGNoKCdsb2FkJywgZSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvbkVycm9yKGUpIHtcbiAgICAgICAgbG9hZGluZyA9IGZhbHNlXG4gICAgICAgIGlzRXJyb3IgPSB0cnVlXG4gICAgICAgIGRpc3BhdGNoKCdlcnJvcicsIGUpXG4gICAgfVxuPC9zY3JpcHQ+XG5cbjxmaWd1cmUgY2xhc3M9e3dyYXBDbGFzc1Byb3B9PlxuICAgIDxpbWdcbiAgICAgICAgICAgIHtpZH1cbiAgICAgICAgICAgIHthbHR9XG4gICAgICAgICAgICB7c3JjfVxuICAgICAgICAgICAge3dpZHRofVxuICAgICAgICAgICAge2hlaWdodH1cbiAgICAgICAgICAgIGNsYXNzPVwicGljXCJcbiAgICAgICAgICAgIG9uOmxvYWQ9e29uTG9hZH1cbiAgICAgICAgICAgIG9uOmVycm9yPXtvbkVycm9yfVxuICAgIC8+XG5cbiAgICA8ZmlnY2FwdGlvbj5cbiAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgIDwvZmlnY2FwdGlvbj5cbjwvZmlndXJlPlxuXG48c3R5bGU+XG4gICAgLnBpY3R1cmUge1xuICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzdHJldGNoO1xuICAgIH1cblxuICAgIC5waWN0dXJlIC5waWMge1xuICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3MgZWFzZS1pbjtcbiAgICB9XG5cbiAgICAucGljdHVyZS5sb2FkaW5nIC5waWMge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbjwvc3R5bGU+XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciwgb25Nb3VudCwgdGljayB9IGZyb20gJ3N2ZWx0ZSdcbiAgICBpbXBvcnQgeyBjbGFzc25hbWVzIH0gZnJvbSAnLi4vdXRpbHMnXG5cbiAgICBjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpXG5cbiAgICBleHBvcnQgbGV0IGlkID0gdW5kZWZpbmVkXG4gICAgZXhwb3J0IGxldCB2YWx1ZSA9IDAgLy8gMCAtIDEwMFxuICAgIGV4cG9ydCBsZXQgdGl0bGUgPSB1bmRlZmluZWRcbiAgICBleHBvcnQgbGV0IGFyaWFMYWJlbCA9IHVuZGVmaW5lZFxuXG4gICAgJDogdmFsID0gMFxuICAgICQ6IHRpdGxlUHJvcCA9IHRpdGxlIHx8IGBQcm9ncmVzcyAtICR7dmFsfSVgXG4gICAgJDogYXJpYUxhYmVsUHJvcCA9IGFyaWFMYWJlbCB8fCBgUHJvZ3Jlc3MgLSAke3ZhbH0lYFxuICAgICQ6IGNsYXNzUHJvcCA9IGNsYXNzbmFtZXMoJ3Byb2dyZXNzJywgJCRwcm9wcy5jbGFzcylcblxuICAgIG9uTW91bnQoKCkgPT4ge1xuICAgICAgICAvLyBNYWtlIGxvYWRpbmcgcHJvZ3Jlc3MgZWZmZWN0IG9uIG1vdW50IGNvbXBvbmVudC5cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB2YWwgPSBOdW1iZXIuaXNGaW5pdGUoK3ZhbHVlKSA/IE1hdGgubWF4KDAsIE1hdGgubWluKCt2YWx1ZSwgMTAwKSkgOiAwLCAwKVxuICAgIH0pXG48L3NjcmlwdD5cblxuXG48ZGl2XG4gICAgICAgIHtpZH1cbiAgICAgICAgY2xhc3M9e2NsYXNzUHJvcH1cbiAgICAgICAgdGl0bGU9e3RpdGxlUHJvcH1cbiAgICAgICAgYXJpYS1sYWJlbD17YXJpYUxhYmVsUHJvcH1cbiAgICAgICAgcm9sZT1cInByb2dyZXNzYmFyXCJcbiAgICAgICAgYXJpYS12YWx1ZW1pbj1cIjBcIlxuICAgICAgICBhcmlhLXZhbHVlbWF4PVwiMTAwXCJcbiAgICAgICAgYXJpYS12YWx1ZW5vdz17dmFsfVxuPlxuICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy1pbm5lci1mcmFtZVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3MtY29yZVwiIHN0eWxlPXtgd2lkdGg6JHt2YWx9JWB9PjwvZGl2PlxuICAgIDwvZGl2PlxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAucHJvZ3Jlc3Mge1xuICAgICAgICBmbGV4OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOTk5OXB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIC4yKTtcbiAgICAgICAgaGVpZ2h0OiBjYWxjKHZhcigtLW1pbi1pbnRlcmFjdGl2ZS1zaXplKSAvIDEuNSk7XG4gICAgICAgIHBhZGRpbmc6IGNhbGModmFyKC0tbWluLWludGVyYWN0aXZlLXNpemUpIC8gMS41IC8gMy41KTtcbiAgICB9XG5cbiAgICAucHJvZ3Jlc3MtaW5uZXItZnJhbWUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA5OTk5cHg7XG4gICAgfVxuXG4gICAgLnByb2dyZXNzLWNvcmUge1xuICAgICAgICBmbGV4OiBub25lO1xuICAgICAgICBhbGlnbi1zZWxmOiBzdHJldGNoO1xuICAgICAgICB0cmFuc2l0aW9uOiAxcyBlYXNlLWluLW91dDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYih2YXIoLS1jb2xvci1zdWNjZXNzKSk7XG4gICAgfVxuPC9zdHlsZT5cbiIsIjxzY3JpcHQ+XG4gIGV4cG9ydCBsZXQgc2VnbWVudDtcblxuICBsZXQgaXNEYXJrVGhlbWUgPSB0cnVlXG5cbiAgZnVuY3Rpb24gY2hhbmdlVGhlbWUoKSB7XG4gICAgaXNEYXJrVGhlbWUgPSAhaXNEYXJrVGhlbWVcbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ3RoZW1lLWRhcmsnKVxuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZSgndGhlbWUtbGlnaHQnKVxuICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChpc0RhcmtUaGVtZSA/ICd0aGVtZS1kYXJrJyA6ICd0aGVtZS1saWdodCcpXG4gIH1cbjwvc2NyaXB0PlxuXG48bmF2IGNsYXNzPVwidGhlbWUtYmdcIj5cblx0PHVsPlxuXHRcdDxsaT48YSBjbGFzczpzZWxlY3RlZD0ne3NlZ21lbnQgPT09IHVuZGVmaW5lZH0nIGhyZWY9Jy4nPmhvbWU8L2E+PC9saT5cblx0XHQ8bGk+PGEgY2xhc3M6c2VsZWN0ZWQ9J3tzZWdtZW50ID09PSBcImFib3V0XCJ9JyBocmVmPSdhYm91dCc+YWJvdXQ8L2E+PC9saT5cblxuXHRcdDwhLS0gZm9yIHRoZSBibG9nIGxpbmssIHdlJ3JlIHVzaW5nIHJlbD1wcmVmZXRjaCBzbyB0aGF0IFNhcHBlciBwcmVmZXRjaGVzXG5cdFx0ICAgICB0aGUgYmxvZyBkYXRhIHdoZW4gd2UgaG92ZXIgb3ZlciB0aGUgbGluayBvciB0YXAgaXQgb24gYSB0b3VjaHNjcmVlbiAtLT5cblx0XHQ8bGk+PGEgcmVsPXByZWZldGNoIGNsYXNzOnNlbGVjdGVkPSd7c2VnbWVudCA9PT0gXCJibG9nXCJ9JyBocmVmPSdibG9nJz5ibG9nPC9hPjwvbGk+XG5cdDwvdWw+XG5cbiAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgb246Y2xpY2s9e2NoYW5nZVRoZW1lfT5cbiAgICBTd2l0Y2ggdGhlbWVcbiAgPC9idXR0b24+XG48L25hdj5cblxuPHN0eWxlPlxuICBuYXYge1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKHZhcigtLWNvbG9yLWRhbmdlciksIC4xKTtcbiAgICBwYWRkaW5nOiAwIDFlbTtcbiAgICB6LWluZGV4OiAxO1xuICB9XG5cbiAgLnNlbGVjdGVkIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG5cbiAgLnNlbGVjdGVkOjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDFlbSk7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKHZhcigtLWNvbG9yLWRhbmdlcikpO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJvdHRvbTogLTFweDtcbiAgfVxuXG4gIGEge1xuICAgIHBhZGRpbmc6IDFlbSAwLjVlbTtcbiAgfVxuPC9zdHlsZT5cbiIsIjxzY3JpcHQ+XG5cbiAgaW1wb3J0IHsgb25Nb3VudCwgb25EZXN0cm95IH0gZnJvbSAnc3ZlbHRlJztcblxuXG4gIGV4cG9ydCBsZXQgdHJhbnNpdGlvbkR1cmF0aW9uID0gMjAwO1xuICBleHBvcnQgbGV0IHNob3dJbmRpY2F0b3JzID0gZmFsc2U7XG4gIGV4cG9ydCBsZXQgYXV0b3BsYXkgPSBmYWxzZTtcbiAgZXhwb3J0IGxldCBkZWxheSA9IDEwMDA7XG5cblxuXG4gIGxldCBhY3RpdmVJbmRpY2F0b3IgPSAwO1xuICBsZXQgaW5kaWNhdG9ycztcbiAgbGV0IGl0ZW1zID0gMDtcbiAgbGV0IGF2YWlsYWJsZVdpZHRoID0gMDtcbiAgbGV0IHRvcENsZWFyZW5jZSA9IDA7XG5cbiAgbGV0IGVsZW1zO1xuICBsZXQgZGlmZiA9IDA7XG5cbiAgbGV0IHN3aXBlV3JhcHBlcjtcbiAgbGV0IHN3aXBlSGFuZGxlcjtcblxuICBsZXQgbWluID0gMDtcbiAgbGV0IHRvdWNoaW5nVHBsID0gYFxuICAgIC13ZWJraXQtdHJhbnNpdGlvbi1kdXJhdGlvbjogMHM7XG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMHM7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC17e3ZhbH19cHgsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC17e3ZhbH19cHgsIDAsIDApO2A7XG4gIGxldCBub25fdG91Y2hpbmdUcGwgPSBgXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAke3RyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAke3RyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLXt7dmFsfX1weCwgMCwgMCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLXt7dmFsfX1weCwgMCwgMCk7YDtcbiAgbGV0IHRvdWNoaW5nID0gZmFsc2U7XG4gIGxldCBwb3NYID0gMDtcbiAgbGV0IGRpciA9IDA7XG4gIGxldCB4O1xuXG5cblxuICBsZXQgcGxheWVkID0gMDtcbiAgbGV0IHJ1bl9pbnRlcnZhbCA9IGZhbHNlO1xuXG4gICQ6IGluZGljYXRvcnMgPSBBcnJheShpdGVtcyk7XG5cbiAgJDoge1xuICAgIGlmKGF1dG9wbGF5ICYmICFydW5faW50ZXJ2YWwpe1xuICAgICAgcnVuX2ludGVydmFsID0gc2V0SW50ZXJ2YWwoY2hhbmdlVmlldyAsIGRlbGF5KTtcbiAgICB9XG5cbiAgICBpZighYXV0b3BsYXkgJiYgcnVuX2ludGVydmFsKXtcbiAgICAgIGNsZWFySW50ZXJ2YWwocnVuX2ludGVydmFsKVxuICAgICAgcnVuX2ludGVydmFsID0gZmFsc2U7XG4gICAgfVxuICB9XG5cblxuICBmdW5jdGlvbiB1cGRhdGUoKXtcbiAgICBzd2lwZUhhbmRsZXIuc3R5bGUudG9wID0gdG9wQ2xlYXJlbmNlICsgJ3B4JztcbiAgICBhdmFpbGFibGVXaWR0aCA9IHN3aXBlV3JhcHBlci5xdWVyeVNlbGVjdG9yKCcuc3dpcGVhYmxlLWl0ZW1zJykub2Zmc2V0V2lkdGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpdGVtczsgaSsrKSB7XG4gICAgICBlbGVtc1tpXS5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlM2QoJyArIChhdmFpbGFibGVXaWR0aCAqIGkpICsgJ3B4LCAwLCAwKSc7XG4gICAgfVxuICAgIGRpZmYgPSAwO1xuICB9XG5cbiAgZnVuY3Rpb24gaW5pdCgpe1xuICAgIGVsZW1zID0gc3dpcGVXcmFwcGVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zd2lwZWFibGUtaXRlbScpO1xuICAgIGl0ZW1zID0gZWxlbXMubGVuZ3RoO1xuICAgIHVwZGF0ZSgpO1xuICB9XG5cbiAgb25Nb3VudCgoKSA9PiB7XG4gICAgaW5pdCgpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB1cGRhdGUpO1xuICB9KTtcblxuXG5cbiAgb25EZXN0cm95KCgpPT57XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHVwZGF0ZSk7XG4gIH0pXG5cbiAgZnVuY3Rpb24gbW92ZUhhbmRsZXIoZSl7XG4gICAgaWYgKHRvdWNoaW5nKSB7XG4gICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuXG4gICAgICBsZXQgbWF4ID0gYXZhaWxhYmxlV2lkdGg7XG5cbiAgICAgIGxldCBfeCA9IGUudG91Y2hlcyA/IGUudG91Y2hlc1swXS5wYWdlWCA6IGUucGFnZVg7XG4gICAgICBsZXQgX2RpZmYgPSAoeCAtIF94KSArIHBvc1g7XG4gICAgICBsZXQgZGlyID0gX3ggPiB4ID8gMCA6IDE7XG4gICAgICBpZiAoIWRpcikgeyBfZGlmZiA9IHBvc1ggLSAoX3ggLSB4KSB9XG4gICAgICBpZiAoX2RpZmYgPD0gKG1heCAqIChpdGVtcyAtIDEpKSAmJiBfZGlmZiA+PSBtaW4pIHtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGl0ZW1zOyBpKyspIHtcbiAgICAgICAgICBsZXQgdGVtcGxhdGUgPSBpIDwgMCA/ICd7e3ZhbH19JyA6ICcte3t2YWx9fSc7XG4gICAgICAgICAgbGV0IF92YWx1ZSA9IChtYXggKiBpKSAtIF9kaWZmO1xuICAgICAgICAgIGVsZW1zW2ldLnN0eWxlLmNzc1RleHQgPSB0b3VjaGluZ1RwbC5yZXBsYWNlKHRlbXBsYXRlLCBfdmFsdWUpLnJlcGxhY2UodGVtcGxhdGUsIF92YWx1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBkaWZmID0gX2RpZmY7XG4gICAgICB9XG5cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBlbmRIYW5kbGVyKGUpIHtcbiAgICBlICYmIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgZSAmJiBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGUgJiYgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgbGV0IG1heCA9IGF2YWlsYWJsZVdpZHRoO1xuXG4gICAgdG91Y2hpbmcgPSBmYWxzZTtcbiAgICB4ID0gbnVsbDtcblxuXG5cbiAgICBsZXQgc3dpcGVfdGhyZXNob2xkID0gMC44NTtcbiAgICBsZXQgZF9tYXggPSAoZGlmZiAvIG1heCk7XG4gICAgbGV0IF90YXJnZXQgPSBNYXRoLnJvdW5kKGRfbWF4KTtcblxuICAgIGlmKE1hdGguYWJzKF90YXJnZXQgLSBkX21heCkgPCBzd2lwZV90aHJlc2hvbGQgKXtcbiAgICAgIGRpZmYgPSBfdGFyZ2V0ICogbWF4O1xuICAgIH1lbHNle1xuICAgICAgZGlmZiA9IChkaXIgPyAoX3RhcmdldCAtIDEpIDogKF90YXJnZXQgKyAxKSkgKiBtYXg7XG4gICAgfVxuXG4gICAgcG9zWCA9IGRpZmY7XG4gICAgYWN0aXZlSW5kaWNhdG9yID0gKGRpZmYgLyBtYXgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXM7IGkrKykge1xuICAgICAgbGV0IHRlbXBsYXRlID0gaSA8IDAgPyAne3t2YWx9fScgOiAnLXt7dmFsfX0nO1xuICAgICAgbGV0IF92YWx1ZSA9IChtYXggKiBpKSAtIHBvc1g7XG4gICAgICBlbGVtc1tpXS5zdHlsZS5jc3NUZXh0ID0gbm9uX3RvdWNoaW5nVHBsLnJlcGxhY2UodGVtcGxhdGUsIF92YWx1ZSkucmVwbGFjZSh0ZW1wbGF0ZSwgX3ZhbHVlKTtcbiAgICB9XG5cbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgbW92ZUhhbmRsZXIpO1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZW5kSGFuZGxlcik7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIG1vdmVIYW5kbGVyKTtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBlbmRIYW5kbGVyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1vdmVTdGFydChlKXtcbiAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgbGV0IG1heCA9IGF2YWlsYWJsZVdpZHRoO1xuXG4gICAgdG91Y2hpbmcgPSB0cnVlO1xuICAgIHggPSBlLnRvdWNoZXMgPyBlLnRvdWNoZXNbMF0ucGFnZVggOiBlLnBhZ2VYO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBtb3ZlSGFuZGxlcik7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBlbmRIYW5kbGVyKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgbW92ZUhhbmRsZXIpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIGVuZEhhbmRsZXIpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2hhbmdlSXRlbShpdGVtKSB7XG4gICAgbGV0IG1heCA9IGF2YWlsYWJsZVdpZHRoO1xuICAgIGRpZmYgPSBtYXggKiBpdGVtO1xuICAgIGFjdGl2ZUluZGljYXRvciA9IGl0ZW07XG4gICAgZW5kSGFuZGxlcigpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2hhbmdlVmlldygpIHtcbiAgICBjaGFuZ2VJdGVtKHBsYXllZCk7XG4gICAgcGxheWVkID0gcGxheWVkIDwgKGl0ZW1zIC0gMSkgPyArK3BsYXllZCA6IDA7XG4gIH1cblxuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblxuLnN3aXBlLXBhbmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IHZhcigtLXN2LXN3aXBlLXBhbmVsLWhlaWdodCwgMTAwJSk7XG4gIHdpZHRoOiB2YXIoLS1zdi1zd2lwZS1wYW5lbC13aWR0aCwgaW5oZXJpdCk7XG59XG4uc3dpcGUtaXRlbS13cmFwcGVye1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogaW5oZXJpdDtcbiAgei1pbmRleDogdmFyKC0tc3Ytc3dpcGUtcGFuZWwtd3JhcHBlci1pbmRleCwgMik7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uc3dpcGVhYmxlLWl0ZW1zLFxuLnN3aXBlYWJsZS1zbG90LXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiBpbmhlcml0O1xuICBoZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi5zd2lwZS1oYW5kbGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA0MHB4O1xuICBib3R0b206IDBweDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsMCk7XG59XG4uc3dpcGUtaW5kaWNhdG9yIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3R0b206IDEuNXJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHotaW5kZXg6IHZhcigtLXN2LXN3aXBlLXBhbmVsLXdyYXBwZXItaW5kZXgsIDIpO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLmRvdCB7XG4gIGhlaWdodDogMTBweDtcbiAgd2lkdGg6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAwcHggMnB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBvaW50ZXItZXZlbnRzOiBmaWxsO1xufVxuLnN3aXBlLWluZGljYXRvciAuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc3Ytc3dpcGUtaW5kaWNhdG9yLWFjdGl2ZS1jb2xvciwgZ3JleSk7XG59XG5cbjwvc3R5bGU+XG5cbjxkaXYgY2xhc3M9XCJzd2lwZS1wYW5lbFwiPlxuICA8ZGl2IGNsYXNzPVwic3dpcGUtaXRlbS13cmFwcGVyXCIgYmluZDp0aGlzPXtzd2lwZVdyYXBwZXJ9PlxuICAgIDxkaXYgY2xhc3M9XCJzd2lwZWFibGUtaXRlbXNcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzd2lwZWFibGUtc2xvdC13cmFwcGVyXCI+XG4gICAgICAgIDxzbG90IC8+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJzd2lwZS1oYW5kbGVyXCIgYmluZDp0aGlzPXtzd2lwZUhhbmRsZXJ9IG9uOnRvdWNoc3RhcnQ9e21vdmVTdGFydH0gb246bW91c2Vkb3duPXttb3ZlU3RhcnR9PjwvZGl2PlxuICAgeyNpZiBzaG93SW5kaWNhdG9yc31cbiAgICAgPGRpdiBjbGFzcz1cInN3aXBlLWluZGljYXRvciBzd2lwZS1pbmRpY2F0b3ItaW5zaWRlXCI+XG4gICAgICAgIHsjZWFjaCBpbmRpY2F0b3JzIGFzIHgsIGkgfVxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZG90IHthY3RpdmVJbmRpY2F0b3IgPT0gaSA/ICdpcy1hY3RpdmUnIDogJyd9XCIgb246Y2xpY2s9eygpID0+IHtjaGFuZ2VJdGVtKGkpfX0+PC9zcGFuPlxuICAgICAgICB7L2VhY2h9XG4gICAgPC9kaXY+XG4gICB7L2lmfVxuXG48L2Rpdj5cbiIsIjxzY3JpcHQ+XG4gIGV4cG9ydCBsZXQgY2xhc3NlcyA9ICcnO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cbiAgLnN3aXBlYWJsZS1pdGVtIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgfVxuPC9zdHlsZT5cblxuPGRpdiBjbGFzcz1cInN3aXBlYWJsZS1pdGVtIHtjbGFzc2VzfVwiPlxuICAgIDxzbG90IC8+XG48L2Rpdj4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUMsSUFBSSxjQUFDLENBQUMsQUFDTCxRQUFRLENBQUUsUUFBUSxDQUNsQixTQUFTLENBQUUsSUFBSSxDQUNmLE1BQU0sQ0FBRSxDQUFDLENBQUMsSUFBSSxDQUNkLFVBQVUsQ0FBRSxVQUFVLEFBQ3ZCLENBQUM7QUNMRCxnQkFBRSxDQUFFLENBQUMsY0FBQyxDQUFDLEFBQ04sTUFBTSxDQUFFLENBQUMsQ0FBQyxJQUFJLEFBQ2YsQ0FBQyxBQUVELEVBQUUsY0FBQyxD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 */