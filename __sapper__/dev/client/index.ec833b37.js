import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, H as space, q as element, M as create_component, J as text, I as claim_space, c as claim_element, f as children, N as claim_component, g as detach_dev, K as claim_text, h as attr_dev, j as add_location, L as set_style, k as insert_dev, l as append_dev, O as mount_component, v as transition_in, w as transition_out, P as destroy_component } from './index.0f0c1ee9.js';
import { P as Picture, B as Button, I as Input, a as Icon, b as Progress, F as Form } from './index.9dd29666.js';

/* src/routes/index.svelte generated by Svelte v3.16.7 */
const file = "src/routes/index.svelte";

// (57:16) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_18(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test1");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test1");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_18.name,
		type: "slot",
		source: "(57:16) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (60:16) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_17(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test12");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test12");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_17.name,
		type: "slot",
		source: "(60:16) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (63:16) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_16(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test123");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test123");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_16.name,
		type: "slot",
		source: "(63:16) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (82:16) <Button is="warning" on:click="{e => console.log(e)}">
function create_default_slot_15(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Submit");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Submit");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_15.name,
		type: "slot",
		source: "(82:16) <Button is=\\\"warning\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (161:4) <Button is="success" type="submit">
function create_default_slot_14(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Submit");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Submit");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_14.name,
		type: "slot",
		source: "(161:4) <Button is=\\\"success\\\" type=\\\"submit\\\">",
		ctx
	});

	return block;
}

// (117:0) <Form on:submit="{(e) => console.log(e)}" name="main-form">
function create_default_slot_13(ctx) {
	let br0;
	let t0;
	let br1;
	let t1;
	let t2;
	let br2;
	let t3;
	let br3;
	let t4;
	let t5;
	let br4;
	let t6;
	let br5;
	let t7;
	let t8;
	let br6;
	let t9;
	let br7;
	let t10;
	let t11;
	let br8;
	let t12;
	let br9;
	let t13;
	let t14;
	let br10;
	let t15;
	let br11;
	let t16;
	let t17;
	let br12;
	let t18;
	let br13;
	let t19;
	let t20;
	let br14;
	let t21;
	let br15;
	let t22;
	let t23;
	let br16;
	let t24;
	let br17;
	let t25;
	let current;

	const input0 = new Input({
			props: {
				name: "test1",
				type: "number",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input1 = new Input({
			props: {
				name: "test2",
				type: "text",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input2 = new Input({
			props: {
				name: "test3",
				type: "email",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input3 = new Input({
			props: {
				name: "test4",
				type: "url",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input4 = new Input({
			props: {
				name: "test5",
				type: "search",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input5 = new Input({
			props: {
				name: "test6",
				type: "date",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input6 = new Input({
			props: {
				name: "test7",
				type: "password",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const input7 = new Input({
			props: {
				name: "test8",
				type: "tel",
				list: "sum-suggestions"
			},
			$$inline: true
		});

	const button = new Button({
			props: {
				is: "success",
				type: "submit",
				$$slots: { default: [create_default_slot_14] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			br0 = element("br");
			t0 = space();
			br1 = element("br");
			t1 = space();
			create_component(input0.$$.fragment);
			t2 = space();
			br2 = element("br");
			t3 = space();
			br3 = element("br");
			t4 = space();
			create_component(input1.$$.fragment);
			t5 = space();
			br4 = element("br");
			t6 = space();
			br5 = element("br");
			t7 = space();
			create_component(input2.$$.fragment);
			t8 = space();
			br6 = element("br");
			t9 = space();
			br7 = element("br");
			t10 = space();
			create_component(input3.$$.fragment);
			t11 = space();
			br8 = element("br");
			t12 = space();
			br9 = element("br");
			t13 = space();
			create_component(input4.$$.fragment);
			t14 = space();
			br10 = element("br");
			t15 = space();
			br11 = element("br");
			t16 = space();
			create_component(input5.$$.fragment);
			t17 = space();
			br12 = element("br");
			t18 = space();
			br13 = element("br");
			t19 = space();
			create_component(input6.$$.fragment);
			t20 = space();
			br14 = element("br");
			t21 = space();
			br15 = element("br");
			t22 = space();
			create_component(input7.$$.fragment);
			t23 = space();
			br16 = element("br");
			t24 = space();
			br17 = element("br");
			t25 = space();
			create_component(button.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			br0 = claim_element(nodes, "BR", {});
			t0 = claim_space(nodes);
			br1 = claim_element(nodes, "BR", {});
			t1 = claim_space(nodes);
			claim_component(input0.$$.fragment, nodes);
			t2 = claim_space(nodes);
			br2 = claim_element(nodes, "BR", {});
			t3 = claim_space(nodes);
			br3 = claim_element(nodes, "BR", {});
			t4 = claim_space(nodes);
			claim_component(input1.$$.fragment, nodes);
			t5 = claim_space(nodes);
			br4 = claim_element(nodes, "BR", {});
			t6 = claim_space(nodes);
			br5 = claim_element(nodes, "BR", {});
			t7 = claim_space(nodes);
			claim_component(input2.$$.fragment, nodes);
			t8 = claim_space(nodes);
			br6 = claim_element(nodes, "BR", {});
			t9 = claim_space(nodes);
			br7 = claim_element(nodes, "BR", {});
			t10 = claim_space(nodes);
			claim_component(input3.$$.fragment, nodes);
			t11 = claim_space(nodes);
			br8 = claim_element(nodes, "BR", {});
			t12 = claim_space(nodes);
			br9 = claim_element(nodes, "BR", {});
			t13 = claim_space(nodes);
			claim_component(input4.$$.fragment, nodes);
			t14 = claim_space(nodes);
			br10 = claim_element(nodes, "BR", {});
			t15 = claim_space(nodes);
			br11 = claim_element(nodes, "BR", {});
			t16 = claim_space(nodes);
			claim_component(input5.$$.fragment, nodes);
			t17 = claim_space(nodes);
			br12 = claim_element(nodes, "BR", {});
			t18 = claim_space(nodes);
			br13 = claim_element(nodes, "BR", {});
			t19 = claim_space(nodes);
			claim_component(input6.$$.fragment, nodes);
			t20 = claim_space(nodes);
			br14 = claim_element(nodes, "BR", {});
			t21 = claim_space(nodes);
			br15 = claim_element(nodes, "BR", {});
			t22 = claim_space(nodes);
			claim_component(input7.$$.fragment, nodes);
			t23 = claim_space(nodes);
			br16 = claim_element(nodes, "BR", {});
			t24 = claim_space(nodes);
			br17 = claim_element(nodes, "BR", {});
			t25 = claim_space(nodes);
			claim_component(button.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			add_location(br0, file, 117, 4, 2910);
			add_location(br1, file, 118, 4, 2919);
			add_location(br2, file, 122, 4, 2993);
			add_location(br3, file, 123, 4, 3002);
			add_location(br4, file, 127, 4, 3074);
			add_location(br5, file, 128, 4, 3083);
			add_location(br6, file, 132, 4, 3156);
			add_location(br7, file, 133, 4, 3165);
			add_location(br8, file, 137, 4, 3236);
			add_location(br9, file, 138, 4, 3245);
			add_location(br10, file, 142, 4, 3319);
			add_location(br11, file, 143, 4, 3328);
			add_location(br12, file, 147, 4, 3400);
			add_location(br13, file, 148, 4, 3409);
			add_location(br14, file, 152, 4, 3485);
			add_location(br15, file, 153, 4, 3494);
			add_location(br16, file, 157, 4, 3565);
			add_location(br17, file, 158, 4, 3574);
		},
		m: function mount(target, anchor) {
			insert_dev(target, br0, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, br1, anchor);
			insert_dev(target, t1, anchor);
			mount_component(input0, target, anchor);
			insert_dev(target, t2, anchor);
			insert_dev(target, br2, anchor);
			insert_dev(target, t3, anchor);
			insert_dev(target, br3, anchor);
			insert_dev(target, t4, anchor);
			mount_component(input1, target, anchor);
			insert_dev(target, t5, anchor);
			insert_dev(target, br4, anchor);
			insert_dev(target, t6, anchor);
			insert_dev(target, br5, anchor);
			insert_dev(target, t7, anchor);
			mount_component(input2, target, anchor);
			insert_dev(target, t8, anchor);
			insert_dev(target, br6, anchor);
			insert_dev(target, t9, anchor);
			insert_dev(target, br7, anchor);
			insert_dev(target, t10, anchor);
			mount_component(input3, target, anchor);
			insert_dev(target, t11, anchor);
			insert_dev(target, br8, anchor);
			insert_dev(target, t12, anchor);
			insert_dev(target, br9, anchor);
			insert_dev(target, t13, anchor);
			mount_component(input4, target, anchor);
			insert_dev(target, t14, anchor);
			insert_dev(target, br10, anchor);
			insert_dev(target, t15, anchor);
			insert_dev(target, br11, anchor);
			insert_dev(target, t16, anchor);
			mount_component(input5, target, anchor);
			insert_dev(target, t17, anchor);
			insert_dev(target, br12, anchor);
			insert_dev(target, t18, anchor);
			insert_dev(target, br13, anchor);
			insert_dev(target, t19, anchor);
			mount_component(input6, target, anchor);
			insert_dev(target, t20, anchor);
			insert_dev(target, br14, anchor);
			insert_dev(target, t21, anchor);
			insert_dev(target, br15, anchor);
			insert_dev(target, t22, anchor);
			mount_component(input7, target, anchor);
			insert_dev(target, t23, anchor);
			insert_dev(target, br16, anchor);
			insert_dev(target, t24, anchor);
			insert_dev(target, br17, anchor);
			insert_dev(target, t25, anchor);
			mount_component(button, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const button_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(input0.$$.fragment, local);
			transition_in(input1.$$.fragment, local);
			transition_in(input2.$$.fragment, local);
			transition_in(input3.$$.fragment, local);
			transition_in(input4.$$.fragment, local);
			transition_in(input5.$$.fragment, local);
			transition_in(input6.$$.fragment, local);
			transition_in(input7.$$.fragment, local);
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(input0.$$.fragment, local);
			transition_out(input1.$$.fragment, local);
			transition_out(input2.$$.fragment, local);
			transition_out(input3.$$.fragment, local);
			transition_out(input4.$$.fragment, local);
			transition_out(input5.$$.fragment, local);
			transition_out(input6.$$.fragment, local);
			transition_out(input7.$$.fragment, local);
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(br0);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(br1);
			if (detaching) detach_dev(t1);
			destroy_component(input0, detaching);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(br2);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(br3);
			if (detaching) detach_dev(t4);
			destroy_component(input1, detaching);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(br4);
			if (detaching) detach_dev(t6);
			if (detaching) detach_dev(br5);
			if (detaching) detach_dev(t7);
			destroy_component(input2, detaching);
			if (detaching) detach_dev(t8);
			if (detaching) detach_dev(br6);
			if (detaching) detach_dev(t9);
			if (detaching) detach_dev(br7);
			if (detaching) detach_dev(t10);
			destroy_component(input3, detaching);
			if (detaching) detach_dev(t11);
			if (detaching) detach_dev(br8);
			if (detaching) detach_dev(t12);
			if (detaching) detach_dev(br9);
			if (detaching) detach_dev(t13);
			destroy_component(input4, detaching);
			if (detaching) detach_dev(t14);
			if (detaching) detach_dev(br10);
			if (detaching) detach_dev(t15);
			if (detaching) detach_dev(br11);
			if (detaching) detach_dev(t16);
			destroy_component(input5, detaching);
			if (detaching) detach_dev(t17);
			if (detaching) detach_dev(br12);
			if (detaching) detach_dev(t18);
			if (detaching) detach_dev(br13);
			if (detaching) detach_dev(t19);
			destroy_component(input6, detaching);
			if (detaching) detach_dev(t20);
			if (detaching) detach_dev(br14);
			if (detaching) detach_dev(t21);
			if (detaching) detach_dev(br15);
			if (detaching) detach_dev(t22);
			destroy_component(input7, detaching);
			if (detaching) detach_dev(t23);
			if (detaching) detach_dev(br16);
			if (detaching) detach_dev(t24);
			if (detaching) detach_dev(br17);
			if (detaching) detach_dev(t25);
			destroy_component(button, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_13.name,
		type: "slot",
		source: "(117:0) <Form on:submit=\\\"{(e) => console.log(e)}\\\" name=\\\"main-form\\\">",
		ctx
	});

	return block;
}

// (192:8) <Button on:click="{e => console.log(e)}">
function create_default_slot_12(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_12.name,
		type: "slot",
		source: "(192:8) <Button on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (195:8) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_11(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_11.name,
		type: "slot",
		source: "(195:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (198:8) <Button is="success" on:click="{e => console.log(e)}" ariaLabel="text">
function create_default_slot_10(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_10.name,
		type: "slot",
		source: "(198:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\" ariaLabel=\\\"text\\\">",
		ctx
	});

	return block;
}

// (202:8) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_9(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_9.name,
		type: "slot",
		source: "(202:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (206:8) <Button is="warning" on:click="{e => console.log(e)}">
function create_default_slot_8(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Some example of Button");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Some example of Button");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_8.name,
		type: "slot",
		source: "(206:8) <Button is=\\\"warning\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (209:8) <Button is="danger" on:click="{e => console.log(e)}">
function create_default_slot_7(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Some example of Button");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Some example of Button");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_7.name,
		type: "slot",
		source: "(209:8) <Button is=\\\"danger\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (219:8) <Button on:click="{e => console.log(e)}" href="#">
function create_default_slot_6(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_6.name,
		type: "slot",
		source: "(219:8) <Button on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (222:8) <Button is="success" on:click="{e => console.log(e)}" href="#">
function create_default_slot_5(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_5.name,
		type: "slot",
		source: "(222:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (225:8) <Button is="success" on:click="{e => console.log(e)}" href="#">
function create_default_slot_4(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_4.name,
		type: "slot",
		source: "(225:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (229:8) <Button is="success" on:click="{e => console.log(e)}" href="#">
function create_default_slot_3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(229:8) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (233:8) <Button is="warning" on:click="{e => console.log(e)}" href="#">
function create_default_slot_2(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Some example of Button");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Some example of Button");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(233:8) <Button is=\\\"warning\\\" on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (236:8) <Button is="danger" on:click="{e => console.log(e)}" href="#">
function create_default_slot_1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Some example of Button");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Some example of Button");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(236:8) <Button is=\\\"danger\\\" on:click=\\\"{e => console.log(e)}\\\" href=\\\"#\\\">",
		ctx
	});

	return block;
}

// (288:0) <Picture alt="Borat" src="great-success.png" class="picture">
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("HIGH FIVE!");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "HIGH FIVE!");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(288:0) <Picture alt=\\\"Borat\\\" src=\\\"great-success.png\\\" class=\\\"picture\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let section2;
	let section0;
	let div0;
	let t1;
	let ul0;
	let li0;
	let t2;
	let li1;
	let t3;
	let li2;
	let t4;
	let li3;
	let t5;
	let datalist0;
	let option0;
	let option1;
	let option2;
	let t6;
	let li4;
	let t7;
	let ul1;
	let li5;
	let span0;
	let t8;
	let t9;
	let t10;
	let li6;
	let span1;
	let t11;
	let t12;
	let t13;
	let li7;
	let span2;
	let t14;
	let t15;
	let t16;
	let section1;
	let t17;
	let t18;
	let h1;
	let t19;
	let t20;
	let br0;
	let t21;
	let br1;
	let t22;
	let h20;
	let t23;
	let t24;
	let br2;
	let t25;
	let br3;
	let t26;
	let p0;
	let t27;
	let t28;
	let p1;
	let t29;
	let t30;
	let p2;
	let t31;
	let t32;
	let br4;
	let t33;
	let br5;
	let t34;
	let h21;
	let t35;
	let t36;
	let br6;
	let t37;
	let br7;
	let t38;
	let section3;
	let div1;
	let br8;
	let t39;
	let br9;
	let t40;
	let br10;
	let t41;
	let t42;
	let br11;
	let t43;
	let br12;
	let t44;
	let t45;
	let br13;
	let t46;
	let br14;
	let t47;
	let t48;
	let br15;
	let t49;
	let br16;
	let t50;
	let t51;
	let br17;
	let t52;
	let br18;
	let t53;
	let t54;
	let br19;
	let t55;
	let br20;
	let t56;
	let t57;
	let br21;
	let t58;
	let br22;
	let t59;
	let div2;
	let br23;
	let t60;
	let br24;
	let t61;
	let br25;
	let t62;
	let t63;
	let br26;
	let t64;
	let br27;
	let t65;
	let t66;
	let br28;
	let t67;
	let br29;
	let t68;
	let t69;
	let br30;
	let t70;
	let br31;
	let t71;
	let t72;
	let br32;
	let t73;
	let br33;
	let t74;
	let t75;
	let br34;
	let t76;
	let br35;
	let t77;
	let t78;
	let br36;
	let t79;
	let br37;
	let t80;
	let br38;
	let t81;
	let br39;
	let t82;
	let h22;
	let t83;
	let t84;
	let br40;
	let t85;
	let br41;
	let t86;
	let section4;
	let t87;
	let br42;
	let t88;
	let br43;
	let t89;
	let t90;
	let br44;
	let t91;
	let br45;
	let t92;
	let t93;
	let datalist1;
	let option3;
	let option4;
	let option5;
	let t94;
	let label;
	let t95;
	let t96;
	let input4;
	let t97;
	let br46;
	let t98;
	let br47;
	let t99;
	let a;
	let t100;
	let t101;
	let br48;
	let t102;
	let br49;
	let t103;
	let button16;
	let t104;
	let t105;
	let br50;
	let t106;
	let br51;
	let t107;
	let h23;
	let t108;
	let t109;
	let t110;
	let br52;
	let t111;
	let br53;
	let t112;
	let t113;
	let br54;
	let t114;
	let br55;
	let t115;
	let h24;
	let t116;
	let t117;
	let p3;
	let strong;
	let t118;
	let t119;
	let p4;
	let t120;
	let current;

	const picture0 = new Picture({
			props: {
				src: "https://placeimg.com/1000/1000/people",
				alt: "sample"
			},
			$$inline: true
		});

	const button0 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_18] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*click_handler*/ ctx[0]);

	const button1 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_17] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*click_handler_1*/ ctx[1]);

	const button2 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_16] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button2.$on("click", /*click_handler_2*/ ctx[2]);

	const input0 = new Input({
			props: {
				type: "number",
				name: "num",
				list: "sum-suggestions",
				placeholder: "Num",
				autoselect: true,
				align: "right"
			},
			$$inline: true
		});

	const button3 = new Button({
			props: {
				is: "warning",
				$$slots: { default: [create_default_slot_15] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button3.$on("click", /*click_handler_3*/ ctx[3]);

	const icon0 = new Icon({
			props: { size: "small", type: "heart-filled" },
			$$inline: true
		});

	const icon1 = new Icon({
			props: {
				size: "small",
				type: "heart-filled",
				is: "warning"
			},
			$$inline: true
		});

	const icon2 = new Icon({
			props: {
				size: "small",
				type: "heart-filled",
				is: "danger"
			},
			$$inline: true
		});

	const icon3 = new Icon({
			props: { type: "heart-filled" },
			$$inline: true
		});

	const icon4 = new Icon({
			props: { type: "heart-filled", is: "warning" },
			$$inline: true
		});

	const icon5 = new Icon({
			props: { type: "heart-filled", is: "danger" },
			$$inline: true
		});

	const icon6 = new Icon({
			props: { size: "big", type: "heart-filled" },
			$$inline: true
		});

	const icon7 = new Icon({
			props: {
				size: "big",
				type: "heart-filled",
				is: "warning"
			},
			$$inline: true
		});

	const icon8 = new Icon({
			props: {
				size: "big",
				type: "heart-filled",
				is: "danger"
			},
			$$inline: true
		});

	const progress = new Progress({
			props: {
				value: "65",
				max: "100",
				style: "background: 0; width: 100%"
			},
			$$inline: true
		});

	const form = new Form({
			props: {
				name: "main-form",
				$$slots: { default: [create_default_slot_13] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	form.$on("submit", /*submit_handler*/ ctx[4]);

	const button4 = new Button({
			props: {
				$$slots: { default: [create_default_slot_12] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button4.$on("click", /*click_handler_4*/ ctx[5]);

	const button5 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_11] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button5.$on("click", /*click_handler_5*/ ctx[6]);

	const button6 = new Button({
			props: {
				is: "success",
				ariaLabel: "text",
				$$slots: { default: [create_default_slot_10] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button6.$on("click", /*click_handler_6*/ ctx[7]);

	const button7 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_9] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button7.$on("click", /*click_handler_7*/ ctx[8]);

	const button8 = new Button({
			props: {
				is: "warning",
				$$slots: { default: [create_default_slot_8] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button8.$on("click", /*click_handler_8*/ ctx[9]);

	const button9 = new Button({
			props: {
				is: "danger",
				$$slots: { default: [create_default_slot_7] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button9.$on("click", /*click_handler_9*/ ctx[10]);

	const button10 = new Button({
			props: {
				href: "#",
				$$slots: { default: [create_default_slot_6] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button10.$on("click", /*click_handler_10*/ ctx[11]);

	const button11 = new Button({
			props: {
				is: "success",
				href: "#",
				$$slots: { default: [create_default_slot_5] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button11.$on("click", /*click_handler_11*/ ctx[12]);

	const button12 = new Button({
			props: {
				is: "success",
				href: "#",
				$$slots: { default: [create_default_slot_4] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button12.$on("click", /*click_handler_12*/ ctx[13]);

	const button13 = new Button({
			props: {
				is: "success",
				href: "#",
				$$slots: { default: [create_default_slot_3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button13.$on("click", /*click_handler_13*/ ctx[14]);

	const button14 = new Button({
			props: {
				is: "warning",
				href: "#",
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button14.$on("click", /*click_handler_14*/ ctx[15]);

	const button15 = new Button({
			props: {
				is: "danger",
				href: "#",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button15.$on("click", /*click_handler_15*/ ctx[16]);

	const input1 = new Input({
			props: { rows: 2, name: "tex", list: "lis" },
			$$inline: true
		});

	const input2 = new Input({
			props: {
				name: "tex1",
				list: "lis",
				placeholder: "Some placeholder text"
			},
			$$inline: true
		});

	const input3 = new Input({
			props: {
				type: "number",
				name: "tex2",
				list: "lis"
			},
			$$inline: true
		});

	const picture1 = new Picture({
			props: {
				alt: "Borat",
				src: "great-success.png",
				class: "picture",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const picture2 = new Picture({
			props: {
				src: "https://placeimg.com/1000/1000/any",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			t0 = space();
			section2 = element("section");
			section0 = element("section");
			div0 = element("div");
			create_component(picture0.$$.fragment);
			t1 = space();
			ul0 = element("ul");
			li0 = element("li");
			create_component(button0.$$.fragment);
			t2 = space();
			li1 = element("li");
			create_component(button1.$$.fragment);
			t3 = space();
			li2 = element("li");
			create_component(button2.$$.fragment);
			t4 = space();
			li3 = element("li");
			create_component(input0.$$.fragment);
			t5 = space();
			datalist0 = element("datalist");
			option0 = element("option");
			option1 = element("option");
			option2 = element("option");
			t6 = space();
			li4 = element("li");
			create_component(button3.$$.fragment);
			t7 = space();
			ul1 = element("ul");
			li5 = element("li");
			span0 = element("span");
			create_component(icon0.$$.fragment);
			t8 = space();
			create_component(icon1.$$.fragment);
			t9 = space();
			create_component(icon2.$$.fragment);
			t10 = space();
			li6 = element("li");
			span1 = element("span");
			create_component(icon3.$$.fragment);
			t11 = space();
			create_component(icon4.$$.fragment);
			t12 = space();
			create_component(icon5.$$.fragment);
			t13 = space();
			li7 = element("li");
			span2 = element("span");
			create_component(icon6.$$.fragment);
			t14 = space();
			create_component(icon7.$$.fragment);
			t15 = space();
			create_component(icon8.$$.fragment);
			t16 = space();
			section1 = element("section");
			create_component(progress.$$.fragment);
			t17 = space();
			create_component(form.$$.fragment);
			t18 = space();
			h1 = element("h1");
			t19 = text("Charitify - is the application for helping those in need.");
			t20 = space();
			br0 = element("br");
			t21 = space();
			br1 = element("br");
			t22 = space();
			h20 = element("h2");
			t23 = text("Typography");
			t24 = space();
			br2 = element("br");
			t25 = space();
			br3 = element("br");
			t26 = space();
			p0 = element("p");
			t27 = text("Few paragraphs to text fonts");
			t28 = space();
			p1 = element("p");
			t29 = text("Декілька параграфів для тесту тексту");
			t30 = space();
			p2 = element("p");
			t31 = text("Несколько параграфов для теста текста");
			t32 = space();
			br4 = element("br");
			t33 = space();
			br5 = element("br");
			t34 = space();
			h21 = element("h2");
			t35 = text("Interactive elements");
			t36 = space();
			br6 = element("br");
			t37 = space();
			br7 = element("br");
			t38 = space();
			section3 = element("section");
			div1 = element("div");
			br8 = element("br");
			t39 = text("\n        Buttons\n        ");
			br9 = element("br");
			t40 = space();
			br10 = element("br");
			t41 = space();
			create_component(button4.$$.fragment);
			t42 = space();
			br11 = element("br");
			t43 = space();
			br12 = element("br");
			t44 = space();
			create_component(button5.$$.fragment);
			t45 = space();
			br13 = element("br");
			t46 = space();
			br14 = element("br");
			t47 = space();
			create_component(button6.$$.fragment);
			t48 = space();
			br15 = element("br");
			t49 = space();
			br16 = element("br");
			t50 = text("\n        With text\n        ");
			create_component(button7.$$.fragment);
			t51 = text("\n        and behind.\n        ");
			br17 = element("br");
			t52 = space();
			br18 = element("br");
			t53 = space();
			create_component(button8.$$.fragment);
			t54 = space();
			br19 = element("br");
			t55 = space();
			br20 = element("br");
			t56 = space();
			create_component(button9.$$.fragment);
			t57 = space();
			br21 = element("br");
			t58 = space();
			br22 = element("br");
			t59 = space();
			div2 = element("div");
			br23 = element("br");
			t60 = text("\n        Links as buttons\n        ");
			br24 = element("br");
			t61 = space();
			br25 = element("br");
			t62 = space();
			create_component(button10.$$.fragment);
			t63 = space();
			br26 = element("br");
			t64 = space();
			br27 = element("br");
			t65 = space();
			create_component(button11.$$.fragment);
			t66 = space();
			br28 = element("br");
			t67 = space();
			br29 = element("br");
			t68 = space();
			create_component(button12.$$.fragment);
			t69 = space();
			br30 = element("br");
			t70 = space();
			br31 = element("br");
			t71 = text("\n        With text\n        ");
			create_component(button13.$$.fragment);
			t72 = text("\n        and behind.\n        ");
			br32 = element("br");
			t73 = space();
			br33 = element("br");
			t74 = space();
			create_component(button14.$$.fragment);
			t75 = space();
			br34 = element("br");
			t76 = space();
			br35 = element("br");
			t77 = space();
			create_component(button15.$$.fragment);
			t78 = space();
			br36 = element("br");
			t79 = space();
			br37 = element("br");
			t80 = space();
			br38 = element("br");
			t81 = space();
			br39 = element("br");
			t82 = space();
			h22 = element("h2");
			t83 = text("Input fields");
			t84 = space();
			br40 = element("br");
			t85 = space();
			br41 = element("br");
			t86 = space();
			section4 = element("section");
			create_component(input1.$$.fragment);
			t87 = space();
			br42 = element("br");
			t88 = space();
			br43 = element("br");
			t89 = space();
			create_component(input2.$$.fragment);
			t90 = space();
			br44 = element("br");
			t91 = space();
			br45 = element("br");
			t92 = space();
			create_component(input3.$$.fragment);
			t93 = space();
			datalist1 = element("datalist");
			option3 = element("option");
			option4 = element("option");
			option5 = element("option");
			t94 = space();
			label = element("label");
			t95 = text("label");
			t96 = space();
			input4 = element("input");
			t97 = space();
			br46 = element("br");
			t98 = space();
			br47 = element("br");
			t99 = space();
			a = element("a");
			t100 = text("Some link");
			t101 = space();
			br48 = element("br");
			t102 = space();
			br49 = element("br");
			t103 = space();
			button16 = element("button");
			t104 = text("Button example");
			t105 = space();
			br50 = element("br");
			t106 = space();
			br51 = element("br");
			t107 = space();
			h23 = element("h2");
			t108 = text("Images");
			t109 = space();
			create_component(picture1.$$.fragment);
			t110 = space();
			br52 = element("br");
			t111 = space();
			br53 = element("br");
			t112 = space();
			create_component(picture2.$$.fragment);
			t113 = space();
			br54 = element("br");
			t114 = space();
			br55 = element("br");
			t115 = space();
			h24 = element("h2");
			t116 = text("Other");
			t117 = space();
			p3 = element("p");
			strong = element("strong");
			t118 = text("Try editing this file (src/routes/index.svelte) to test live reloading.");
			t119 = space();
			p4 = element("p");
			t120 = text("A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.");
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			section2 = claim_element(nodes, "SECTION", { class: true });
			var section2_nodes = children(section2);
			section0 = claim_element(section2_nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			div0 = claim_element(section0_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(picture0.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(section0_nodes);
			ul0 = claim_element(section0_nodes, "UL", { class: true });
			var ul0_nodes = children(ul0);
			li0 = claim_element(ul0_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			claim_component(button0.$$.fragment, li0_nodes);
			li0_nodes.forEach(detach_dev);
			t2 = claim_space(ul0_nodes);
			li1 = claim_element(ul0_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			claim_component(button1.$$.fragment, li1_nodes);
			li1_nodes.forEach(detach_dev);
			t3 = claim_space(ul0_nodes);
			li2 = claim_element(ul0_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			claim_component(button2.$$.fragment, li2_nodes);
			li2_nodes.forEach(detach_dev);
			t4 = claim_space(ul0_nodes);
			li3 = claim_element(ul0_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			claim_component(input0.$$.fragment, li3_nodes);
			t5 = claim_space(li3_nodes);
			datalist0 = claim_element(li3_nodes, "DATALIST", { id: true });
			var datalist0_nodes = children(datalist0);
			option0 = claim_element(datalist0_nodes, "OPTION", { value: true });
			var option0_nodes = children(option0);
			option0_nodes.forEach(detach_dev);
			option1 = claim_element(datalist0_nodes, "OPTION", { value: true });
			var option1_nodes = children(option1);
			option1_nodes.forEach(detach_dev);
			option2 = claim_element(datalist0_nodes, "OPTION", { value: true });
			var option2_nodes = children(option2);
			option2_nodes.forEach(detach_dev);
			datalist0_nodes.forEach(detach_dev);
			li3_nodes.forEach(detach_dev);
			t6 = claim_space(ul0_nodes);
			li4 = claim_element(ul0_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			claim_component(button3.$$.fragment, li4_nodes);
			li4_nodes.forEach(detach_dev);
			ul0_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t7 = claim_space(section2_nodes);
			ul1 = claim_element(section2_nodes, "UL", {});
			var ul1_nodes = children(ul1);
			li5 = claim_element(ul1_nodes, "LI", {});
			var li5_nodes = children(li5);
			span0 = claim_element(li5_nodes, "SPAN", {});
			var span0_nodes = children(span0);
			claim_component(icon0.$$.fragment, span0_nodes);
			t8 = claim_space(span0_nodes);
			claim_component(icon1.$$.fragment, span0_nodes);
			t9 = claim_space(span0_nodes);
			claim_component(icon2.$$.fragment, span0_nodes);
			span0_nodes.forEach(detach_dev);
			li5_nodes.forEach(detach_dev);
			t10 = claim_space(ul1_nodes);
			li6 = claim_element(ul1_nodes, "LI", {});
			var li6_nodes = children(li6);
			span1 = claim_element(li6_nodes, "SPAN", {});
			var span1_nodes = children(span1);
			claim_component(icon3.$$.fragment, span1_nodes);
			t11 = claim_space(span1_nodes);
			claim_component(icon4.$$.fragment, span1_nodes);
			t12 = claim_space(span1_nodes);
			claim_component(icon5.$$.fragment, span1_nodes);
			span1_nodes.forEach(detach_dev);
			li6_nodes.forEach(detach_dev);
			t13 = claim_space(ul1_nodes);
			li7 = claim_element(ul1_nodes, "LI", {});
			var li7_nodes = children(li7);
			span2 = claim_element(li7_nodes, "SPAN", {});
			var span2_nodes = children(span2);
			claim_component(icon6.$$.fragment, span2_nodes);
			t14 = claim_space(span2_nodes);
			claim_component(icon7.$$.fragment, span2_nodes);
			t15 = claim_space(span2_nodes);
			claim_component(icon8.$$.fragment, span2_nodes);
			span2_nodes.forEach(detach_dev);
			li7_nodes.forEach(detach_dev);
			ul1_nodes.forEach(detach_dev);
			t16 = claim_space(section2_nodes);
			section1 = claim_element(section2_nodes, "SECTION", { style: true });
			var section1_nodes = children(section1);
			claim_component(progress.$$.fragment, section1_nodes);
			section1_nodes.forEach(detach_dev);
			section2_nodes.forEach(detach_dev);
			t17 = claim_space(nodes);
			claim_component(form.$$.fragment, nodes);
			t18 = claim_space(nodes);
			h1 = claim_element(nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t19 = claim_text(h1_nodes, "Charitify - is the application for helping those in need.");
			h1_nodes.forEach(detach_dev);
			t20 = claim_space(nodes);
			br0 = claim_element(nodes, "BR", {});
			t21 = claim_space(nodes);
			br1 = claim_element(nodes, "BR", {});
			t22 = claim_space(nodes);
			h20 = claim_element(nodes, "H2", { class: true });
			var h20_nodes = children(h20);
			t23 = claim_text(h20_nodes, "Typography");
			h20_nodes.forEach(detach_dev);
			t24 = claim_space(nodes);
			br2 = claim_element(nodes, "BR", {});
			t25 = claim_space(nodes);
			br3 = claim_element(nodes, "BR", {});
			t26 = claim_space(nodes);
			p0 = claim_element(nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t27 = claim_text(p0_nodes, "Few paragraphs to text fonts");
			p0_nodes.forEach(detach_dev);
			t28 = claim_space(nodes);
			p1 = claim_element(nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t29 = claim_text(p1_nodes, "Декілька параграфів для тесту тексту");
			p1_nodes.forEach(detach_dev);
			t30 = claim_space(nodes);
			p2 = claim_element(nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t31 = claim_text(p2_nodes, "Несколько параграфов для теста текста");
			p2_nodes.forEach(detach_dev);
			t32 = claim_space(nodes);
			br4 = claim_element(nodes, "BR", {});
			t33 = claim_space(nodes);
			br5 = claim_element(nodes, "BR", {});
			t34 = claim_space(nodes);
			h21 = claim_element(nodes, "H2", { class: true });
			var h21_nodes = children(h21);
			t35 = claim_text(h21_nodes, "Interactive elements");
			h21_nodes.forEach(detach_dev);
			t36 = claim_space(nodes);
			br6 = claim_element(nodes, "BR", {});
			t37 = claim_space(nodes);
			br7 = claim_element(nodes, "BR", {});
			t38 = claim_space(nodes);
			section3 = claim_element(nodes, "SECTION", { style: true });
			var section3_nodes = children(section3);
			div1 = claim_element(section3_nodes, "DIV", {});
			var div1_nodes = children(div1);
			br8 = claim_element(div1_nodes, "BR", {});
			t39 = claim_text(div1_nodes, "\n        Buttons\n        ");
			br9 = claim_element(div1_nodes, "BR", {});
			t40 = claim_space(div1_nodes);
			br10 = claim_element(div1_nodes, "BR", {});
			t41 = claim_space(div1_nodes);
			claim_component(button4.$$.fragment, div1_nodes);
			t42 = claim_space(div1_nodes);
			br11 = claim_element(div1_nodes, "BR", {});
			t43 = claim_space(div1_nodes);
			br12 = claim_element(div1_nodes, "BR", {});
			t44 = claim_space(div1_nodes);
			claim_component(button5.$$.fragment, div1_nodes);
			t45 = claim_space(div1_nodes);
			br13 = claim_element(div1_nodes, "BR", {});
			t46 = claim_space(div1_nodes);
			br14 = claim_element(div1_nodes, "BR", {});
			t47 = claim_space(div1_nodes);
			claim_component(button6.$$.fragment, div1_nodes);
			t48 = claim_space(div1_nodes);
			br15 = claim_element(div1_nodes, "BR", {});
			t49 = claim_space(div1_nodes);
			br16 = claim_element(div1_nodes, "BR", {});
			t50 = claim_text(div1_nodes, "\n        With text\n        ");
			claim_component(button7.$$.fragment, div1_nodes);
			t51 = claim_text(div1_nodes, "\n        and behind.\n        ");
			br17 = claim_element(div1_nodes, "BR", {});
			t52 = claim_space(div1_nodes);
			br18 = claim_element(div1_nodes, "BR", {});
			t53 = claim_space(div1_nodes);
			claim_component(button8.$$.fragment, div1_nodes);
			t54 = claim_space(div1_nodes);
			br19 = claim_element(div1_nodes, "BR", {});
			t55 = claim_space(div1_nodes);
			br20 = claim_element(div1_nodes, "BR", {});
			t56 = claim_space(div1_nodes);
			claim_component(button9.$$.fragment, div1_nodes);
			t57 = claim_space(div1_nodes);
			br21 = claim_element(div1_nodes, "BR", {});
			t58 = claim_space(div1_nodes);
			br22 = claim_element(div1_nodes, "BR", {});
			div1_nodes.forEach(detach_dev);
			t59 = claim_space(section3_nodes);
			div2 = claim_element(section3_nodes, "DIV", {});
			var div2_nodes = children(div2);
			br23 = claim_element(div2_nodes, "BR", {});
			t60 = claim_text(div2_nodes, "\n        Links as buttons\n        ");
			br24 = claim_element(div2_nodes, "BR", {});
			t61 = claim_space(div2_nodes);
			br25 = claim_element(div2_nodes, "BR", {});
			t62 = claim_space(div2_nodes);
			claim_component(button10.$$.fragment, div2_nodes);
			t63 = claim_space(div2_nodes);
			br26 = claim_element(div2_nodes, "BR", {});
			t64 = claim_space(div2_nodes);
			br27 = claim_element(div2_nodes, "BR", {});
			t65 = claim_space(div2_nodes);
			claim_component(button11.$$.fragment, div2_nodes);
			t66 = claim_space(div2_nodes);
			br28 = claim_element(div2_nodes, "BR", {});
			t67 = claim_space(div2_nodes);
			br29 = claim_element(div2_nodes, "BR", {});
			t68 = claim_space(div2_nodes);
			claim_component(button12.$$.fragment, div2_nodes);
			t69 = claim_space(div2_nodes);
			br30 = claim_element(div2_nodes, "BR", {});
			t70 = claim_space(div2_nodes);
			br31 = claim_element(div2_nodes, "BR", {});
			t71 = claim_text(div2_nodes, "\n        With text\n        ");
			claim_component(button13.$$.fragment, div2_nodes);
			t72 = claim_text(div2_nodes, "\n        and behind.\n        ");
			br32 = claim_element(div2_nodes, "BR", {});
			t73 = claim_space(div2_nodes);
			br33 = claim_element(div2_nodes, "BR", {});
			t74 = claim_space(div2_nodes);
			claim_component(button14.$$.fragment, div2_nodes);
			t75 = claim_space(div2_nodes);
			br34 = claim_element(div2_nodes, "BR", {});
			t76 = claim_space(div2_nodes);
			br35 = claim_element(div2_nodes, "BR", {});
			t77 = claim_space(div2_nodes);
			claim_component(button15.$$.fragment, div2_nodes);
			t78 = claim_space(div2_nodes);
			br36 = claim_element(div2_nodes, "BR", {});
			t79 = claim_space(div2_nodes);
			br37 = claim_element(div2_nodes, "BR", {});
			div2_nodes.forEach(detach_dev);
			section3_nodes.forEach(detach_dev);
			t80 = claim_space(nodes);
			br38 = claim_element(nodes, "BR", {});
			t81 = claim_space(nodes);
			br39 = claim_element(nodes, "BR", {});
			t82 = claim_space(nodes);
			h22 = claim_element(nodes, "H2", { class: true });
			var h22_nodes = children(h22);
			t83 = claim_text(h22_nodes, "Input fields");
			h22_nodes.forEach(detach_dev);
			t84 = claim_space(nodes);
			br40 = claim_element(nodes, "BR", {});
			t85 = claim_space(nodes);
			br41 = claim_element(nodes, "BR", {});
			t86 = claim_space(nodes);
			section4 = claim_element(nodes, "SECTION", {});
			var section4_nodes = children(section4);
			claim_component(input1.$$.fragment, section4_nodes);
			t87 = claim_space(section4_nodes);
			br42 = claim_element(section4_nodes, "BR", {});
			t88 = claim_space(section4_nodes);
			br43 = claim_element(section4_nodes, "BR", {});
			t89 = claim_space(section4_nodes);
			claim_component(input2.$$.fragment, section4_nodes);
			t90 = claim_space(section4_nodes);
			br44 = claim_element(section4_nodes, "BR", {});
			t91 = claim_space(section4_nodes);
			br45 = claim_element(section4_nodes, "BR", {});
			t92 = claim_space(section4_nodes);
			claim_component(input3.$$.fragment, section4_nodes);
			t93 = claim_space(section4_nodes);
			datalist1 = claim_element(section4_nodes, "DATALIST", { id: true });
			var datalist1_nodes = children(datalist1);
			option3 = claim_element(datalist1_nodes, "OPTION", { value: true });
			var option3_nodes = children(option3);
			option3_nodes.forEach(detach_dev);
			option4 = claim_element(datalist1_nodes, "OPTION", { value: true });
			var option4_nodes = children(option4);
			option4_nodes.forEach(detach_dev);
			option5 = claim_element(datalist1_nodes, "OPTION", { value: true });
			var option5_nodes = children(option5);
			option5_nodes.forEach(detach_dev);
			datalist1_nodes.forEach(detach_dev);
			t94 = claim_space(section4_nodes);
			label = claim_element(section4_nodes, "LABEL", { for: true, class: true });
			var label_nodes = children(label);
			t95 = claim_text(label_nodes, "label");
			label_nodes.forEach(detach_dev);
			t96 = claim_space(section4_nodes);
			input4 = claim_element(section4_nodes, "INPUT", { id: true, type: true, value: true });
			t97 = claim_space(section4_nodes);
			br46 = claim_element(section4_nodes, "BR", {});
			t98 = claim_space(section4_nodes);
			br47 = claim_element(section4_nodes, "BR", {});
			t99 = claim_space(section4_nodes);
			a = claim_element(section4_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			t100 = claim_text(a_nodes, "Some link");
			a_nodes.forEach(detach_dev);
			t101 = claim_space(section4_nodes);
			br48 = claim_element(section4_nodes, "BR", {});
			t102 = claim_space(section4_nodes);
			br49 = claim_element(section4_nodes, "BR", {});
			t103 = claim_space(section4_nodes);
			button16 = claim_element(section4_nodes, "BUTTON", { type: true, class: true });
			var button16_nodes = children(button16);
			t104 = claim_text(button16_nodes, "Button example");
			button16_nodes.forEach(detach_dev);
			section4_nodes.forEach(detach_dev);
			t105 = claim_space(nodes);
			br50 = claim_element(nodes, "BR", {});
			t106 = claim_space(nodes);
			br51 = claim_element(nodes, "BR", {});
			t107 = claim_space(nodes);
			h23 = claim_element(nodes, "H2", { class: true });
			var h23_nodes = children(h23);
			t108 = claim_text(h23_nodes, "Images");
			h23_nodes.forEach(detach_dev);
			t109 = claim_space(nodes);
			claim_component(picture1.$$.fragment, nodes);
			t110 = claim_space(nodes);
			br52 = claim_element(nodes, "BR", {});
			t111 = claim_space(nodes);
			br53 = claim_element(nodes, "BR", {});
			t112 = claim_space(nodes);
			claim_component(picture2.$$.fragment, nodes);
			t113 = claim_space(nodes);
			br54 = claim_element(nodes, "BR", {});
			t114 = claim_space(nodes);
			br55 = claim_element(nodes, "BR", {});
			t115 = claim_space(nodes);
			h24 = claim_element(nodes, "H2", { class: true });
			var h24_nodes = children(h24);
			t116 = claim_text(h24_nodes, "Other");
			h24_nodes.forEach(detach_dev);
			t117 = claim_space(nodes);
			p3 = claim_element(nodes, "P", { class: true });
			var p3_nodes = children(p3);
			strong = claim_element(p3_nodes, "STRONG", {});
			var strong_nodes = children(strong);
			t118 = claim_text(strong_nodes, "Try editing this file (src/routes/index.svelte) to test live reloading.");
			strong_nodes.forEach(detach_dev);
			p3_nodes.forEach(detach_dev);
			t119 = claim_space(nodes);
			p4 = claim_element(nodes, "P", { style: true, class: true });
			var p4_nodes = children(p4);
			t120 = claim_text(p4_nodes, "A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.\n    A lot of English text. A lot of English text. A lot of English text. A lot of English text.");
			p4_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - is the application for helping those in need.";
			attr_dev(div0, "class", "top-pic svelte-1kmv00v");
			add_location(div0, file, 50, 8, 811);
			attr_dev(li0, "class", "svelte-1kmv00v");
			add_location(li0, file, 55, 12, 970);
			attr_dev(li1, "class", "svelte-1kmv00v");
			add_location(li1, file, 58, 12, 1090);
			attr_dev(li2, "class", "svelte-1kmv00v");
			add_location(li2, file, 61, 12, 1211);
			option0.__value = "20";
			option0.value = option0.__value;
			add_location(option0, file, 75, 20, 1684);
			option1.__value = "500";
			option1.value = option1.__value;
			add_location(option1, file, 76, 20, 1724);
			option2.__value = "1000";
			option2.value = option2.__value;
			add_location(option2, file, 77, 20, 1765);
			attr_dev(datalist0, "id", "sum-suggestions");
			add_location(datalist0, file, 74, 16, 1632);
			attr_dev(li3, "class", "svelte-1kmv00v");
			add_location(li3, file, 64, 12, 1333);
			attr_dev(li4, "class", "svelte-1kmv00v");
			add_location(li4, file, 80, 12, 1845);
			attr_dev(ul0, "class", "options svelte-1kmv00v");
			add_location(ul0, file, 54, 8, 937);
			attr_dev(section0, "class", "top svelte-1kmv00v");
			add_location(section0, file, 49, 4, 781);
			add_location(span0, file, 88, 8, 2014);
			add_location(li5, file, 87, 8, 2001);
			add_location(span1, file, 95, 8, 2256);
			add_location(li6, file, 94, 8, 2243);
			add_location(span2, file, 102, 8, 2459);
			add_location(li7, file, 101, 8, 2446);
			add_location(ul1, file, 86, 4, 1988);
			set_style(section1, "padding", "20px 5px 20px 0");
			add_location(section1, file, 110, 4, 2689);
			attr_dev(section2, "class", "top-wrap svelte-1kmv00v");
			add_location(section2, file, 48, 0, 750);
			attr_dev(h1, "class", "svelte-1kmv00v");
			add_location(h1, file, 163, 0, 3644);
			add_location(br0, file, 165, 0, 3712);
			add_location(br1, file, 166, 0, 3717);
			attr_dev(h20, "class", "text-success");
			add_location(h20, file, 168, 0, 3723);
			add_location(br2, file, 170, 0, 3765);
			add_location(br3, file, 171, 0, 3770);
			attr_dev(p0, "class", "svelte-1kmv00v");
			add_location(p0, file, 173, 0, 3776);
			attr_dev(p1, "class", "svelte-1kmv00v");
			add_location(p1, file, 174, 0, 3812);
			attr_dev(p2, "class", "svelte-1kmv00v");
			add_location(p2, file, 175, 0, 3856);
			add_location(br4, file, 177, 0, 3902);
			add_location(br5, file, 178, 0, 3907);
			attr_dev(h21, "class", "text-warning");
			add_location(h21, file, 180, 0, 3913);
			add_location(br6, file, 182, 0, 3965);
			add_location(br7, file, 183, 0, 3970);
			add_location(br8, file, 187, 8, 4077);
			add_location(br9, file, 189, 8, 4106);
			add_location(br10, file, 190, 8, 4119);
			add_location(br11, file, 192, 8, 4195);
			add_location(br12, file, 193, 8, 4208);
			add_location(br13, file, 195, 8, 4297);
			add_location(br14, file, 196, 8, 4310);
			add_location(br15, file, 198, 8, 4416);
			add_location(br16, file, 199, 8, 4429);
			add_location(br17, file, 203, 8, 4556);
			add_location(br18, file, 204, 8, 4569);
			add_location(br19, file, 206, 8, 4676);
			add_location(br20, file, 207, 8, 4689);
			add_location(br21, file, 209, 8, 4795);
			add_location(br22, file, 210, 8, 4808);
			add_location(div1, file, 186, 4, 4063);
			add_location(br23, file, 214, 8, 4843);
			add_location(br24, file, 216, 8, 4881);
			add_location(br25, file, 217, 8, 4894);
			add_location(br26, file, 219, 8, 4979);
			add_location(br27, file, 220, 8, 4992);
			add_location(br28, file, 222, 8, 5090);
			add_location(br29, file, 223, 8, 5103);
			add_location(br30, file, 225, 8, 5201);
			add_location(br31, file, 226, 8, 5214);
			add_location(br32, file, 230, 8, 5350);
			add_location(br33, file, 231, 8, 5363);
			add_location(br34, file, 233, 8, 5479);
			add_location(br35, file, 234, 8, 5492);
			add_location(br36, file, 236, 8, 5607);
			add_location(br37, file, 237, 8, 5620);
			add_location(div2, file, 213, 4, 4829);
			set_style(section3, "text-align", "center");
			set_style(section3, "display", "flex");
			set_style(section3, "justify-content", "space-around");
			add_location(section3, file, 185, 0, 3976);
			add_location(br38, file, 241, 0, 5648);
			add_location(br39, file, 242, 0, 5653);
			attr_dev(h22, "class", "text-danger");
			add_location(h22, file, 244, 0, 5659);
			add_location(br40, file, 246, 0, 5702);
			add_location(br41, file, 247, 0, 5707);
			add_location(br42, file, 252, 4, 5772);
			add_location(br43, file, 253, 4, 5781);
			add_location(br44, file, 257, 4, 5864);
			add_location(br45, file, 258, 4, 5873);
			option3.__value = "1";
			option3.value = option3.__value;
			add_location(option3, file, 263, 8, 5962);
			option4.__value = "2";
			option4.value = option4.__value;
			add_location(option4, file, 264, 8, 5989);
			option5.__value = "3";
			option5.value = option5.__value;
			add_location(option5, file, 265, 8, 6016);
			attr_dev(datalist1, "id", "lis");
			add_location(datalist1, file, 262, 4, 5934);
			attr_dev(label, "for", "input");
			attr_dev(label, "class", "text-success");
			add_location(label, file, 268, 4, 6056);
			attr_dev(input4, "id", "input");
			attr_dev(input4, "type", "text");
			input4.value = "text";
			add_location(input4, file, 269, 4, 6114);
			add_location(br46, file, 271, 4, 6163);
			add_location(br47, file, 272, 4, 6172);
			attr_dev(a, "href", ".");
			attr_dev(a, "class", "text-warning");
			add_location(a, file, 274, 4, 6182);
			add_location(br48, file, 276, 4, 6234);
			add_location(br49, file, 277, 4, 6243);
			attr_dev(button16, "type", "button");
			attr_dev(button16, "class", "text-info");
			add_location(button16, file, 279, 4, 6253);
			add_location(section4, file, 249, 0, 5713);
			add_location(br50, file, 282, 0, 6329);
			add_location(br51, file, 283, 0, 6334);
			attr_dev(h23, "class", "text-info");
			add_location(h23, file, 285, 0, 6340);
			add_location(br52, file, 291, 0, 6464);
			add_location(br53, file, 292, 0, 6469);
			add_location(br54, file, 296, 0, 6541);
			add_location(br55, file, 297, 0, 6546);
			attr_dev(h24, "class", "text-success");
			add_location(h24, file, 299, 0, 6552);
			add_location(strong, file, 302, 4, 6597);
			attr_dev(p3, "class", "svelte-1kmv00v");
			add_location(p3, file, 301, 0, 6589);
			set_style(p4, "text-align", "justify");
			attr_dev(p4, "class", "svelte-1kmv00v");
			add_location(p4, file, 307, 0, 6706);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section2, anchor);
			append_dev(section2, section0);
			append_dev(section0, div0);
			mount_component(picture0, div0, null);
			append_dev(section0, t1);
			append_dev(section0, ul0);
			append_dev(ul0, li0);
			mount_component(button0, li0, null);
			append_dev(ul0, t2);
			append_dev(ul0, li1);
			mount_component(button1, li1, null);
			append_dev(ul0, t3);
			append_dev(ul0, li2);
			mount_component(button2, li2, null);
			append_dev(ul0, t4);
			append_dev(ul0, li3);
			mount_component(input0, li3, null);
			append_dev(li3, t5);
			append_dev(li3, datalist0);
			append_dev(datalist0, option0);
			append_dev(datalist0, option1);
			append_dev(datalist0, option2);
			append_dev(ul0, t6);
			append_dev(ul0, li4);
			mount_component(button3, li4, null);
			append_dev(section2, t7);
			append_dev(section2, ul1);
			append_dev(ul1, li5);
			append_dev(li5, span0);
			mount_component(icon0, span0, null);
			append_dev(span0, t8);
			mount_component(icon1, span0, null);
			append_dev(span0, t9);
			mount_component(icon2, span0, null);
			append_dev(ul1, t10);
			append_dev(ul1, li6);
			append_dev(li6, span1);
			mount_component(icon3, span1, null);
			append_dev(span1, t11);
			mount_component(icon4, span1, null);
			append_dev(span1, t12);
			mount_component(icon5, span1, null);
			append_dev(ul1, t13);
			append_dev(ul1, li7);
			append_dev(li7, span2);
			mount_component(icon6, span2, null);
			append_dev(span2, t14);
			mount_component(icon7, span2, null);
			append_dev(span2, t15);
			mount_component(icon8, span2, null);
			append_dev(section2, t16);
			append_dev(section2, section1);
			mount_component(progress, section1, null);
			insert_dev(target, t17, anchor);
			mount_component(form, target, anchor);
			insert_dev(target, t18, anchor);
			insert_dev(target, h1, anchor);
			append_dev(h1, t19);
			insert_dev(target, t20, anchor);
			insert_dev(target, br0, anchor);
			insert_dev(target, t21, anchor);
			insert_dev(target, br1, anchor);
			insert_dev(target, t22, anchor);
			insert_dev(target, h20, anchor);
			append_dev(h20, t23);
			insert_dev(target, t24, anchor);
			insert_dev(target, br2, anchor);
			insert_dev(target, t25, anchor);
			insert_dev(target, br3, anchor);
			insert_dev(target, t26, anchor);
			insert_dev(target, p0, anchor);
			append_dev(p0, t27);
			insert_dev(target, t28, anchor);
			insert_dev(target, p1, anchor);
			append_dev(p1, t29);
			insert_dev(target, t30, anchor);
			insert_dev(target, p2, anchor);
			append_dev(p2, t31);
			insert_dev(target, t32, anchor);
			insert_dev(target, br4, anchor);
			insert_dev(target, t33, anchor);
			insert_dev(target, br5, anchor);
			insert_dev(target, t34, anchor);
			insert_dev(target, h21, anchor);
			append_dev(h21, t35);
			insert_dev(target, t36, anchor);
			insert_dev(target, br6, anchor);
			insert_dev(target, t37, anchor);
			insert_dev(target, br7, anchor);
			insert_dev(target, t38, anchor);
			insert_dev(target, section3, anchor);
			append_dev(section3, div1);
			append_dev(div1, br8);
			append_dev(div1, t39);
			append_dev(div1, br9);
			append_dev(div1, t40);
			append_dev(div1, br10);
			append_dev(div1, t41);
			mount_component(button4, div1, null);
			append_dev(div1, t42);
			append_dev(div1, br11);
			append_dev(div1, t43);
			append_dev(div1, br12);
			append_dev(div1, t44);
			mount_component(button5, div1, null);
			append_dev(div1, t45);
			append_dev(div1, br13);
			append_dev(div1, t46);
			append_dev(div1, br14);
			append_dev(div1, t47);
			mount_component(button6, div1, null);
			append_dev(div1, t48);
			append_dev(div1, br15);
			append_dev(div1, t49);
			append_dev(div1, br16);
			append_dev(div1, t50);
			mount_component(button7, div1, null);
			append_dev(div1, t51);
			append_dev(div1, br17);
			append_dev(div1, t52);
			append_dev(div1, br18);
			append_dev(div1, t53);
			mount_component(button8, div1, null);
			append_dev(div1, t54);
			append_dev(div1, br19);
			append_dev(div1, t55);
			append_dev(div1, br20);
			append_dev(div1, t56);
			mount_component(button9, div1, null);
			append_dev(div1, t57);
			append_dev(div1, br21);
			append_dev(div1, t58);
			append_dev(div1, br22);
			append_dev(section3, t59);
			append_dev(section3, div2);
			append_dev(div2, br23);
			append_dev(div2, t60);
			append_dev(div2, br24);
			append_dev(div2, t61);
			append_dev(div2, br25);
			append_dev(div2, t62);
			mount_component(button10, div2, null);
			append_dev(div2, t63);
			append_dev(div2, br26);
			append_dev(div2, t64);
			append_dev(div2, br27);
			append_dev(div2, t65);
			mount_component(button11, div2, null);
			append_dev(div2, t66);
			append_dev(div2, br28);
			append_dev(div2, t67);
			append_dev(div2, br29);
			append_dev(div2, t68);
			mount_component(button12, div2, null);
			append_dev(div2, t69);
			append_dev(div2, br30);
			append_dev(div2, t70);
			append_dev(div2, br31);
			append_dev(div2, t71);
			mount_component(button13, div2, null);
			append_dev(div2, t72);
			append_dev(div2, br32);
			append_dev(div2, t73);
			append_dev(div2, br33);
			append_dev(div2, t74);
			mount_component(button14, div2, null);
			append_dev(div2, t75);
			append_dev(div2, br34);
			append_dev(div2, t76);
			append_dev(div2, br35);
			append_dev(div2, t77);
			mount_component(button15, div2, null);
			append_dev(div2, t78);
			append_dev(div2, br36);
			append_dev(div2, t79);
			append_dev(div2, br37);
			insert_dev(target, t80, anchor);
			insert_dev(target, br38, anchor);
			insert_dev(target, t81, anchor);
			insert_dev(target, br39, anchor);
			insert_dev(target, t82, anchor);
			insert_dev(target, h22, anchor);
			append_dev(h22, t83);
			insert_dev(target, t84, anchor);
			insert_dev(target, br40, anchor);
			insert_dev(target, t85, anchor);
			insert_dev(target, br41, anchor);
			insert_dev(target, t86, anchor);
			insert_dev(target, section4, anchor);
			mount_component(input1, section4, null);
			append_dev(section4, t87);
			append_dev(section4, br42);
			append_dev(section4, t88);
			append_dev(section4, br43);
			append_dev(section4, t89);
			mount_component(input2, section4, null);
			append_dev(section4, t90);
			append_dev(section4, br44);
			append_dev(section4, t91);
			append_dev(section4, br45);
			append_dev(section4, t92);
			mount_component(input3, section4, null);
			append_dev(section4, t93);
			append_dev(section4, datalist1);
			append_dev(datalist1, option3);
			append_dev(datalist1, option4);
			append_dev(datalist1, option5);
			append_dev(section4, t94);
			append_dev(section4, label);
			append_dev(label, t95);
			append_dev(section4, t96);
			append_dev(section4, input4);
			append_dev(section4, t97);
			append_dev(section4, br46);
			append_dev(section4, t98);
			append_dev(section4, br47);
			append_dev(section4, t99);
			append_dev(section4, a);
			append_dev(a, t100);
			append_dev(section4, t101);
			append_dev(section4, br48);
			append_dev(section4, t102);
			append_dev(section4, br49);
			append_dev(section4, t103);
			append_dev(section4, button16);
			append_dev(button16, t104);
			insert_dev(target, t105, anchor);
			insert_dev(target, br50, anchor);
			insert_dev(target, t106, anchor);
			insert_dev(target, br51, anchor);
			insert_dev(target, t107, anchor);
			insert_dev(target, h23, anchor);
			append_dev(h23, t108);
			insert_dev(target, t109, anchor);
			mount_component(picture1, target, anchor);
			insert_dev(target, t110, anchor);
			insert_dev(target, br52, anchor);
			insert_dev(target, t111, anchor);
			insert_dev(target, br53, anchor);
			insert_dev(target, t112, anchor);
			mount_component(picture2, target, anchor);
			insert_dev(target, t113, anchor);
			insert_dev(target, br54, anchor);
			insert_dev(target, t114, anchor);
			insert_dev(target, br55, anchor);
			insert_dev(target, t115, anchor);
			insert_dev(target, h24, anchor);
			append_dev(h24, t116);
			insert_dev(target, t117, anchor);
			insert_dev(target, p3, anchor);
			append_dev(p3, strong);
			append_dev(strong, t118);
			insert_dev(target, t119, anchor);
			insert_dev(target, p4, anchor);
			append_dev(p4, t120);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const button0_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
			const button2_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button2_changes.$$scope = { dirty, ctx };
			}

			button2.$set(button2_changes);
			const button3_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button3_changes.$$scope = { dirty, ctx };
			}

			button3.$set(button3_changes);
			const form_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				form_changes.$$scope = { dirty, ctx };
			}

			form.$set(form_changes);
			const button4_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button4_changes.$$scope = { dirty, ctx };
			}

			button4.$set(button4_changes);
			const button5_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button5_changes.$$scope = { dirty, ctx };
			}

			button5.$set(button5_changes);
			const button6_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button6_changes.$$scope = { dirty, ctx };
			}

			button6.$set(button6_changes);
			const button7_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button7_changes.$$scope = { dirty, ctx };
			}

			button7.$set(button7_changes);
			const button8_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button8_changes.$$scope = { dirty, ctx };
			}

			button8.$set(button8_changes);
			const button9_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button9_changes.$$scope = { dirty, ctx };
			}

			button9.$set(button9_changes);
			const button10_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button10_changes.$$scope = { dirty, ctx };
			}

			button10.$set(button10_changes);
			const button11_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button11_changes.$$scope = { dirty, ctx };
			}

			button11.$set(button11_changes);
			const button12_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button12_changes.$$scope = { dirty, ctx };
			}

			button12.$set(button12_changes);
			const button13_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button13_changes.$$scope = { dirty, ctx };
			}

			button13.$set(button13_changes);
			const button14_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button14_changes.$$scope = { dirty, ctx };
			}

			button14.$set(button14_changes);
			const button15_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				button15_changes.$$scope = { dirty, ctx };
			}

			button15.$set(button15_changes);
			const picture1_changes = {};

			if (dirty & /*$$scope*/ 131072) {
				picture1_changes.$$scope = { dirty, ctx };
			}

			picture1.$set(picture1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(picture0.$$.fragment, local);
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			transition_in(button2.$$.fragment, local);
			transition_in(input0.$$.fragment, local);
			transition_in(button3.$$.fragment, local);
			transition_in(icon0.$$.fragment, local);
			transition_in(icon1.$$.fragment, local);
			transition_in(icon2.$$.fragment, local);
			transition_in(icon3.$$.fragment, local);
			transition_in(icon4.$$.fragment, local);
			transition_in(icon5.$$.fragment, local);
			transition_in(icon6.$$.fragment, local);
			transition_in(icon7.$$.fragment, local);
			transition_in(icon8.$$.fragment, local);
			transition_in(progress.$$.fragment, local);
			transition_in(form.$$.fragment, local);
			transition_in(button4.$$.fragment, local);
			transition_in(button5.$$.fragment, local);
			transition_in(button6.$$.fragment, local);
			transition_in(button7.$$.fragment, local);
			transition_in(button8.$$.fragment, local);
			transition_in(button9.$$.fragment, local);
			transition_in(button10.$$.fragment, local);
			transition_in(button11.$$.fragment, local);
			transition_in(button12.$$.fragment, local);
			transition_in(button13.$$.fragment, local);
			transition_in(button14.$$.fragment, local);
			transition_in(button15.$$.fragment, local);
			transition_in(input1.$$.fragment, local);
			transition_in(input2.$$.fragment, local);
			transition_in(input3.$$.fragment, local);
			transition_in(picture1.$$.fragment, local);
			transition_in(picture2.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture0.$$.fragment, local);
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			transition_out(button2.$$.fragment, local);
			transition_out(input0.$$.fragment, local);
			transition_out(button3.$$.fragment, local);
			transition_out(icon0.$$.fragment, local);
			transition_out(icon1.$$.fragment, local);
			transition_out(icon2.$$.fragment, local);
			transition_out(icon3.$$.fragment, local);
			transition_out(icon4.$$.fragment, local);
			transition_out(icon5.$$.fragment, local);
			transition_out(icon6.$$.fragment, local);
			transition_out(icon7.$$.fragment, local);
			transition_out(icon8.$$.fragment, local);
			transition_out(progress.$$.fragment, local);
			transition_out(form.$$.fragment, local);
			transition_out(button4.$$.fragment, local);
			transition_out(button5.$$.fragment, local);
			transition_out(button6.$$.fragment, local);
			transition_out(button7.$$.fragment, local);
			transition_out(button8.$$.fragment, local);
			transition_out(button9.$$.fragment, local);
			transition_out(button10.$$.fragment, local);
			transition_out(button11.$$.fragment, local);
			transition_out(button12.$$.fragment, local);
			transition_out(button13.$$.fragment, local);
			transition_out(button14.$$.fragment, local);
			transition_out(button15.$$.fragment, local);
			transition_out(input1.$$.fragment, local);
			transition_out(input2.$$.fragment, local);
			transition_out(input3.$$.fragment, local);
			transition_out(picture1.$$.fragment, local);
			transition_out(picture2.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section2);
			destroy_component(picture0);
			destroy_component(button0);
			destroy_component(button1);
			destroy_component(button2);
			destroy_component(input0);
			destroy_component(button3);
			destroy_component(icon0);
			destroy_component(icon1);
			destroy_component(icon2);
			destroy_component(icon3);
			destroy_component(icon4);
			destroy_component(icon5);
			destroy_component(icon6);
			destroy_component(icon7);
			destroy_component(icon8);
			destroy_component(progress);
			if (detaching) detach_dev(t17);
			destroy_component(form, detaching);
			if (detaching) detach_dev(t18);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t20);
			if (detaching) detach_dev(br0);
			if (detaching) detach_dev(t21);
			if (detaching) detach_dev(br1);
			if (detaching) detach_dev(t22);
			if (detaching) detach_dev(h20);
			if (detaching) detach_dev(t24);
			if (detaching) detach_dev(br2);
			if (detaching) detach_dev(t25);
			if (detaching) detach_dev(br3);
			if (detaching) detach_dev(t26);
			if (detaching) detach_dev(p0);
			if (detaching) detach_dev(t28);
			if (detaching) detach_dev(p1);
			if (detaching) detach_dev(t30);
			if (detaching) detach_dev(p2);
			if (detaching) detach_dev(t32);
			if (detaching) detach_dev(br4);
			if (detaching) detach_dev(t33);
			if (detaching) detach_dev(br5);
			if (detaching) detach_dev(t34);
			if (detaching) detach_dev(h21);
			if (detaching) detach_dev(t36);
			if (detaching) detach_dev(br6);
			if (detaching) detach_dev(t37);
			if (detaching) detach_dev(br7);
			if (detaching) detach_dev(t38);
			if (detaching) detach_dev(section3);
			destroy_component(button4);
			destroy_component(button5);
			destroy_component(button6);
			destroy_component(button7);
			destroy_component(button8);
			destroy_component(button9);
			destroy_component(button10);
			destroy_component(button11);
			destroy_component(button12);
			destroy_component(button13);
			destroy_component(button14);
			destroy_component(button15);
			if (detaching) detach_dev(t80);
			if (detaching) detach_dev(br38);
			if (detaching) detach_dev(t81);
			if (detaching) detach_dev(br39);
			if (detaching) detach_dev(t82);
			if (detaching) detach_dev(h22);
			if (detaching) detach_dev(t84);
			if (detaching) detach_dev(br40);
			if (detaching) detach_dev(t85);
			if (detaching) detach_dev(br41);
			if (detaching) detach_dev(t86);
			if (detaching) detach_dev(section4);
			destroy_component(input1);
			destroy_component(input2);
			destroy_component(input3);
			if (detaching) detach_dev(t105);
			if (detaching) detach_dev(br50);
			if (detaching) detach_dev(t106);
			if (detaching) detach_dev(br51);
			if (detaching) detach_dev(t107);
			if (detaching) detach_dev(h23);
			if (detaching) detach_dev(t109);
			destroy_component(picture1, detaching);
			if (detaching) detach_dev(t110);
			if (detaching) detach_dev(br52);
			if (detaching) detach_dev(t111);
			if (detaching) detach_dev(br53);
			if (detaching) detach_dev(t112);
			destroy_component(picture2, detaching);
			if (detaching) detach_dev(t113);
			if (detaching) detach_dev(br54);
			if (detaching) detach_dev(t114);
			if (detaching) detach_dev(br55);
			if (detaching) detach_dev(t115);
			if (detaching) detach_dev(h24);
			if (detaching) detach_dev(t117);
			if (detaching) detach_dev(p3);
			if (detaching) detach_dev(t119);
			if (detaching) detach_dev(p4);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self) {
	const click_handler = e => console.log(e);
	const click_handler_1 = e => console.log(e);
	const click_handler_2 = e => console.log(e);
	const click_handler_3 = e => console.log(e);
	const submit_handler = e => console.log(e);
	const click_handler_4 = e => console.log(e);
	const click_handler_5 = e => console.log(e);
	const click_handler_6 = e => console.log(e);
	const click_handler_7 = e => console.log(e);
	const click_handler_8 = e => console.log(e);
	const click_handler_9 = e => console.log(e);
	const click_handler_10 = e => console.log(e);
	const click_handler_11 = e => console.log(e);
	const click_handler_12 = e => console.log(e);
	const click_handler_13 = e => console.log(e);
	const click_handler_14 = e => console.log(e);
	const click_handler_15 = e => console.log(e);

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		
	};

	return [
		click_handler,
		click_handler_1,
		click_handler_2,
		click_handler_3,
		submit_handler,
		click_handler_4,
		click_handler_5,
		click_handler_6,
		click_handler_7,
		click_handler_8,
		click_handler_9,
		click_handler_10,
		click_handler_11,
		click_handler_12,
		click_handler_13,
		click_handler_14,
		click_handler_15
	];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
