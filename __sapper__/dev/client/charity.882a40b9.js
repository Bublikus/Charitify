import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, q as space, o as element, N as text, p as create_component, t as claim_space, c as claim_element, f as children, O as claim_text, g as detach_dev, r as claim_component, j as add_location, h as attr_dev, U as set_style, k as insert_dev, l as append_dev, u as mount_component, v as transition_in, w as transition_out, y as destroy_component, m as noop } from './index.54079636.js';
import { S as Swipe, B as Button, I as Input, P as Progress, A as Avatar, R as Rate, F as Footer, a as SwipeItem, b as Picture } from './index.b6157e08.js';

/* src/routes/charity.svelte generated by Svelte v3.16.7 */

const file = "src/routes/charity.svelte";

// (122:4) <SwipeItem>
function create_default_slot_9(ctx) {
	let current;

	const picture = new Picture({
			props: {
				src: "https://placeimg.com/300/300/people",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(picture.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(picture.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(picture, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(picture.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(picture, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_9.name,
		type: "slot",
		source: "(122:4) <SwipeItem>",
		ctx
	});

	return block;
}

// (125:4) <SwipeItem>
function create_default_slot_8(ctx) {
	let current;

	const picture = new Picture({
			props: {
				src: "https://placeimg.com/300/300/any",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(picture.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(picture.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(picture, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(picture.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(picture, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_8.name,
		type: "slot",
		source: "(125:4) <SwipeItem>",
		ctx
	});

	return block;
}

// (128:4) <SwipeItem>
function create_default_slot_7(ctx) {
	let current;

	const picture = new Picture({
			props: {
				src: "https://placeimg.com/300/300/arch",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(picture.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(picture.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(picture, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(picture.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(picture, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_7.name,
		type: "slot",
		source: "(128:4) <SwipeItem>",
		ctx
	});

	return block;
}

// (131:4) <SwipeItem>
function create_default_slot_6(ctx) {
	let current;

	const picture = new Picture({
			props: {
				src: "https://placeimg.com/300/300/nature",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(picture.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(picture.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(picture, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(picture.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(picture, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_6.name,
		type: "slot",
		source: "(131:4) <SwipeItem>",
		ctx
	});

	return block;
}

// (134:4) <SwipeItem>
function create_default_slot_5(ctx) {
	let current;

	const picture = new Picture({
			props: {
				src: "https://placeimg.com/300/300/tech",
				alt: "sample"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(picture.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(picture.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(picture, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(picture.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(picture.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(picture, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_5.name,
		type: "slot",
		source: "(134:4) <SwipeItem>",
		ctx
	});

	return block;
}

// (121:3) <Swipe>
function create_default_slot_4(ctx) {
	let t0;
	let t1;
	let t2;
	let t3;
	let current;

	const swipeitem0 = new SwipeItem({
			props: {
				$$slots: { default: [create_default_slot_9] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const swipeitem1 = new SwipeItem({
			props: {
				$$slots: { default: [create_default_slot_8] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const swipeitem2 = new SwipeItem({
			props: {
				$$slots: { default: [create_default_slot_7] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const swipeitem3 = new SwipeItem({
			props: {
				$$slots: { default: [create_default_slot_6] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const swipeitem4 = new SwipeItem({
			props: {
				$$slots: { default: [create_default_slot_5] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(swipeitem0.$$.fragment);
			t0 = space();
			create_component(swipeitem1.$$.fragment);
			t1 = space();
			create_component(swipeitem2.$$.fragment);
			t2 = space();
			create_component(swipeitem3.$$.fragment);
			t3 = space();
			create_component(swipeitem4.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(swipeitem0.$$.fragment, nodes);
			t0 = claim_space(nodes);
			claim_component(swipeitem1.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(swipeitem2.$$.fragment, nodes);
			t2 = claim_space(nodes);
			claim_component(swipeitem3.$$.fragment, nodes);
			t3 = claim_space(nodes);
			claim_component(swipeitem4.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(swipeitem0, target, anchor);
			insert_dev(target, t0, anchor);
			mount_component(swipeitem1, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(swipeitem2, target, anchor);
			insert_dev(target, t2, anchor);
			mount_component(swipeitem3, target, anchor);
			insert_dev(target, t3, anchor);
			mount_component(swipeitem4, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const swipeitem0_changes = {};

			if (dirty & /*$$scope*/ 16) {
				swipeitem0_changes.$$scope = { dirty, ctx };
			}

			swipeitem0.$set(swipeitem0_changes);
			const swipeitem1_changes = {};

			if (dirty & /*$$scope*/ 16) {
				swipeitem1_changes.$$scope = { dirty, ctx };
			}

			swipeitem1.$set(swipeitem1_changes);
			const swipeitem2_changes = {};

			if (dirty & /*$$scope*/ 16) {
				swipeitem2_changes.$$scope = { dirty, ctx };
			}

			swipeitem2.$set(swipeitem2_changes);
			const swipeitem3_changes = {};

			if (dirty & /*$$scope*/ 16) {
				swipeitem3_changes.$$scope = { dirty, ctx };
			}

			swipeitem3.$set(swipeitem3_changes);
			const swipeitem4_changes = {};

			if (dirty & /*$$scope*/ 16) {
				swipeitem4_changes.$$scope = { dirty, ctx };
			}

			swipeitem4.$set(swipeitem4_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(swipeitem0.$$.fragment, local);
			transition_in(swipeitem1.$$.fragment, local);
			transition_in(swipeitem2.$$.fragment, local);
			transition_in(swipeitem3.$$.fragment, local);
			transition_in(swipeitem4.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(swipeitem0.$$.fragment, local);
			transition_out(swipeitem1.$$.fragment, local);
			transition_out(swipeitem2.$$.fragment, local);
			transition_out(swipeitem3.$$.fragment, local);
			transition_out(swipeitem4.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(swipeitem0, detaching);
			if (detaching) detach_dev(t0);
			destroy_component(swipeitem1, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(swipeitem2, detaching);
			if (detaching) detach_dev(t2);
			destroy_component(swipeitem3, detaching);
			if (detaching) detach_dev(t3);
			destroy_component(swipeitem4, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_4.name,
		type: "slot",
		source: "(121:3) <Swipe>",
		ctx
	});

	return block;
}

// (142:4) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test1");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test1");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(142:4) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (145:4) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_2(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test12");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test12");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(145:4) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (148:4) <Button is="success" on:click="{e => console.log(e)}">
function create_default_slot_1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("test123");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "test123");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(148:4) <Button is=\\\"success\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

// (168:4) <Button is="warning" on:click="{e => console.log(e)}">
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Submit");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Submit");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(168:4) <Button is=\\\"warning\\\" on:click=\\\"{e => console.log(e)}\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let section3;
	let section0;
	let br0;
	let t1;
	let h1;
	let t2;
	let t3;
	let br1;
	let t4;
	let p0;
	let t5;
	let t6;
	let br2;
	let t7;
	let section1;
	let div0;
	let t8;
	let ul;
	let li0;
	let t9;
	let li1;
	let t10;
	let li2;
	let t11;
	let li3;
	let br3;
	let t12;
	let t13;
	let datalist;
	let option0;
	let option1;
	let option2;
	let t14;
	let li4;
	let t15;
	let t16;
	let section2;
	let div1;
	let t17;
	let span;
	let h3;
	let t18;
	let t19;
	let p1;
	let t20;
	let t21;
	let t22;
	let br4;
	let t23;
	let br5;
	let t24;
	let br6;
	let t25;
	let current;

	const swipe = new Swipe({
			props: {
				$$slots: { default: [create_default_slot_4] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const button0 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*click_handler*/ ctx[0]);

	const button1 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*click_handler_1*/ ctx[1]);

	const button2 = new Button({
			props: {
				is: "success",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button2.$on("click", /*click_handler_2*/ ctx[2]);

	const input = new Input({
			props: {
				type: "number",
				name: "num",
				list: "sum-suggestions",
				placeholder: "Num",
				autoselect: true,
				align: "right"
			},
			$$inline: true
		});

	const button3 = new Button({
			props: {
				is: "warning",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button3.$on("click", /*click_handler_3*/ ctx[3]);

	const progress = new Progress({
			props: { value: "65", size: "big" },
			$$inline: true
		});

	const avatar = new Avatar({
			props: {
				src: "https://placeimg.com/300/300/people",
				alt: "avatar"
			},
			$$inline: true
		});

	const rate = new Rate({ $$inline: true });
	const footer = new Footer({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			section3 = element("section");
			section0 = element("section");
			br0 = element("br");
			t1 = space();
			h1 = element("h1");
			t2 = text("The main title");
			t3 = space();
			br1 = element("br");
			t4 = space();
			p0 = element("p");
			t5 = text("A small description that describes the title above and just makes text longer.");
			t6 = space();
			br2 = element("br");
			t7 = space();
			section1 = element("section");
			div0 = element("div");
			create_component(swipe.$$.fragment);
			t8 = space();
			ul = element("ul");
			li0 = element("li");
			create_component(button0.$$.fragment);
			t9 = space();
			li1 = element("li");
			create_component(button1.$$.fragment);
			t10 = space();
			li2 = element("li");
			create_component(button2.$$.fragment);
			t11 = space();
			li3 = element("li");
			br3 = element("br");
			t12 = space();
			create_component(input.$$.fragment);
			t13 = space();
			datalist = element("datalist");
			option0 = element("option");
			option1 = element("option");
			option2 = element("option");
			t14 = space();
			li4 = element("li");
			create_component(button3.$$.fragment);
			t15 = space();
			create_component(progress.$$.fragment);
			t16 = space();
			section2 = element("section");
			div1 = element("div");
			create_component(avatar.$$.fragment);
			t17 = space();
			span = element("span");
			h3 = element("h3");
			t18 = text("Tina Kandelaki");
			t19 = space();
			p1 = element("p");
			t20 = text("ORG charity charitify");
			t21 = space();
			create_component(rate.$$.fragment);
			t22 = space();
			br4 = element("br");
			t23 = space();
			br5 = element("br");
			t24 = space();
			br6 = element("br");
			t25 = space();
			create_component(footer.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			section3 = claim_element(nodes, "SECTION", { class: true });
			var section3_nodes = children(section3);
			section0 = claim_element(section3_nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			br0 = claim_element(section0_nodes, "BR", {});
			t1 = claim_space(section0_nodes);
			h1 = claim_element(section0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t2 = claim_text(h1_nodes, "The main title");
			h1_nodes.forEach(detach_dev);
			t3 = claim_space(section0_nodes);
			br1 = claim_element(section0_nodes, "BR", {});
			t4 = claim_space(section0_nodes);
			p0 = claim_element(section0_nodes, "P", { class: true, style: true });
			var p0_nodes = children(p0);
			t5 = claim_text(p0_nodes, "A small description that describes the title above and just makes text longer.");
			p0_nodes.forEach(detach_dev);
			t6 = claim_space(section0_nodes);
			br2 = claim_element(section0_nodes, "BR", {});
			section0_nodes.forEach(detach_dev);
			t7 = claim_space(section3_nodes);
			section1 = claim_element(section3_nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			div0 = claim_element(section1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(swipe.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t8 = claim_space(section1_nodes);
			ul = claim_element(section1_nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			claim_component(button0.$$.fragment, li0_nodes);
			li0_nodes.forEach(detach_dev);
			t9 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			claim_component(button1.$$.fragment, li1_nodes);
			li1_nodes.forEach(detach_dev);
			t10 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			claim_component(button2.$$.fragment, li2_nodes);
			li2_nodes.forEach(detach_dev);
			t11 = claim_space(ul_nodes);
			li3 = claim_element(ul_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			br3 = claim_element(li3_nodes, "BR", {});
			t12 = claim_space(li3_nodes);
			claim_component(input.$$.fragment, li3_nodes);
			t13 = claim_space(li3_nodes);
			datalist = claim_element(li3_nodes, "DATALIST", { id: true });
			var datalist_nodes = children(datalist);
			option0 = claim_element(datalist_nodes, "OPTION", { value: true });
			var option0_nodes = children(option0);
			option0_nodes.forEach(detach_dev);
			option1 = claim_element(datalist_nodes, "OPTION", { value: true });
			var option1_nodes = children(option1);
			option1_nodes.forEach(detach_dev);
			option2 = claim_element(datalist_nodes, "OPTION", { value: true });
			var option2_nodes = children(option2);
			option2_nodes.forEach(detach_dev);
			datalist_nodes.forEach(detach_dev);
			li3_nodes.forEach(detach_dev);
			t14 = claim_space(ul_nodes);
			li4 = claim_element(ul_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			claim_component(button3.$$.fragment, li4_nodes);
			li4_nodes.forEach(detach_dev);
			ul_nodes.forEach(detach_dev);
			section1_nodes.forEach(detach_dev);
			t15 = claim_space(section3_nodes);
			claim_component(progress.$$.fragment, section3_nodes);
			t16 = claim_space(section3_nodes);
			section2 = claim_element(section3_nodes, "SECTION", { class: true });
			var section2_nodes = children(section2);
			div1 = claim_element(section2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(avatar.$$.fragment, div1_nodes);
			t17 = claim_space(div1_nodes);
			span = claim_element(div1_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			h3 = claim_element(span_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t18 = claim_text(h3_nodes, "Tina Kandelaki");
			h3_nodes.forEach(detach_dev);
			t19 = claim_space(span_nodes);
			p1 = claim_element(span_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t20 = claim_text(p1_nodes, "ORG charity charitify");
			p1_nodes.forEach(detach_dev);
			span_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t21 = claim_space(section2_nodes);
			claim_component(rate.$$.fragment, section2_nodes);
			section2_nodes.forEach(detach_dev);
			section3_nodes.forEach(detach_dev);
			t22 = claim_space(nodes);
			br4 = claim_element(nodes, "BR", {});
			t23 = claim_space(nodes);
			br5 = claim_element(nodes, "BR", {});
			t24 = claim_space(nodes);
			br6 = claim_element(nodes, "BR", {});
			t25 = claim_space(nodes);
			claim_component(footer.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - Charity page and donate.";
			add_location(br0, file, 105, 2, 1660);
			attr_dev(h1, "class", "svelte-10ecna5");
			add_location(h1, file, 107, 2, 1668);
			add_location(br1, file, 109, 2, 1695);
			attr_dev(p0, "class", "text-center");
			set_style(p0, "padding", "0 10vw");
			add_location(p0, file, 111, 2, 1703);
			add_location(br2, file, 115, 2, 1843);
			attr_dev(section0, "class", "title svelte-10ecna5");
			add_location(section0, file, 104, 1, 1634);
			attr_dev(div0, "class", "top-pic svelte-10ecna5");
			add_location(div0, file, 119, 2, 1886);
			attr_dev(li0, "class", "svelte-10ecna5");
			add_location(li0, file, 140, 3, 2480);
			attr_dev(li1, "class", "svelte-10ecna5");
			add_location(li1, file, 143, 3, 2570);
			attr_dev(li2, "class", "svelte-10ecna5");
			add_location(li2, file, 146, 3, 2661);
			add_location(br3, file, 150, 4, 2762);
			option0.__value = "20";
			option0.value = option0.__value;
			add_location(option0, file, 161, 5, 2954);
			option1.__value = "500";
			option1.value = option1.__value;
			add_location(option1, file, 162, 5, 2979);
			option2.__value = "1000";
			option2.value = option2.__value;
			add_location(option2, file, 163, 5, 3005);
			attr_dev(datalist, "id", "sum-suggestions");
			add_location(datalist, file, 160, 4, 2917);
			attr_dev(li3, "class", "svelte-10ecna5");
			add_location(li3, file, 149, 3, 2753);
			attr_dev(li4, "class", "svelte-10ecna5");
			add_location(li4, file, 166, 3, 3055);
			attr_dev(ul, "class", "options svelte-10ecna5");
			add_location(ul, file, 139, 2, 2456);
			attr_dev(section1, "class", "top svelte-10ecna5");
			add_location(section1, file, 118, 1, 1862);
			attr_dev(h3, "class", "svelte-10ecna5");
			add_location(h3, file, 179, 16, 3365);
			attr_dev(p1, "class", "svelte-10ecna5");
			add_location(p1, file, 180, 16, 3405);
			attr_dev(span, "class", "svelte-10ecna5");
			add_location(span, file, 178, 3, 3342);
			attr_dev(div1, "class", "ava-section svelte-10ecna5");
			add_location(div1, file, 175, 2, 3244);
			attr_dev(section2, "class", "rate-section svelte-10ecna5");
			add_location(section2, file, 174, 1, 3211);
			attr_dev(section3, "class", "container");
			add_location(section3, file, 102, 0, 1604);
			add_location(br4, file, 188, 0, 3498);
			add_location(br5, file, 189, 0, 3503);
			add_location(br6, file, 190, 0, 3508);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section3, anchor);
			append_dev(section3, section0);
			append_dev(section0, br0);
			append_dev(section0, t1);
			append_dev(section0, h1);
			append_dev(h1, t2);
			append_dev(section0, t3);
			append_dev(section0, br1);
			append_dev(section0, t4);
			append_dev(section0, p0);
			append_dev(p0, t5);
			append_dev(section0, t6);
			append_dev(section0, br2);
			append_dev(section3, t7);
			append_dev(section3, section1);
			append_dev(section1, div0);
			mount_component(swipe, div0, null);
			append_dev(section1, t8);
			append_dev(section1, ul);
			append_dev(ul, li0);
			mount_component(button0, li0, null);
			append_dev(ul, t9);
			append_dev(ul, li1);
			mount_component(button1, li1, null);
			append_dev(ul, t10);
			append_dev(ul, li2);
			mount_component(button2, li2, null);
			append_dev(ul, t11);
			append_dev(ul, li3);
			append_dev(li3, br3);
			append_dev(li3, t12);
			mount_component(input, li3, null);
			append_dev(li3, t13);
			append_dev(li3, datalist);
			append_dev(datalist, option0);
			append_dev(datalist, option1);
			append_dev(datalist, option2);
			append_dev(ul, t14);
			append_dev(ul, li4);
			mount_component(button3, li4, null);
			append_dev(section3, t15);
			mount_component(progress, section3, null);
			append_dev(section3, t16);
			append_dev(section3, section2);
			append_dev(section2, div1);
			mount_component(avatar, div1, null);
			append_dev(div1, t17);
			append_dev(div1, span);
			append_dev(span, h3);
			append_dev(h3, t18);
			append_dev(span, t19);
			append_dev(span, p1);
			append_dev(p1, t20);
			append_dev(section2, t21);
			mount_component(rate, section2, null);
			insert_dev(target, t22, anchor);
			insert_dev(target, br4, anchor);
			insert_dev(target, t23, anchor);
			insert_dev(target, br5, anchor);
			insert_dev(target, t24, anchor);
			insert_dev(target, br6, anchor);
			insert_dev(target, t25, anchor);
			mount_component(footer, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const swipe_changes = {};

			if (dirty & /*$$scope*/ 16) {
				swipe_changes.$$scope = { dirty, ctx };
			}

			swipe.$set(swipe_changes);
			const button0_changes = {};

			if (dirty & /*$$scope*/ 16) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};

			if (dirty & /*$$scope*/ 16) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
			const button2_changes = {};

			if (dirty & /*$$scope*/ 16) {
				button2_changes.$$scope = { dirty, ctx };
			}

			button2.$set(button2_changes);
			const button3_changes = {};

			if (dirty & /*$$scope*/ 16) {
				button3_changes.$$scope = { dirty, ctx };
			}

			button3.$set(button3_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(swipe.$$.fragment, local);
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			transition_in(button2.$$.fragment, local);
			transition_in(input.$$.fragment, local);
			transition_in(button3.$$.fragment, local);
			transition_in(progress.$$.fragment, local);
			transition_in(avatar.$$.fragment, local);
			transition_in(rate.$$.fragment, local);
			transition_in(footer.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(swipe.$$.fragment, local);
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			transition_out(button2.$$.fragment, local);
			transition_out(input.$$.fragment, local);
			transition_out(button3.$$.fragment, local);
			transition_out(progress.$$.fragment, local);
			transition_out(avatar.$$.fragment, local);
			transition_out(rate.$$.fragment, local);
			transition_out(footer.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section3);
			destroy_component(swipe);
			destroy_component(button0);
			destroy_component(button1);
			destroy_component(button2);
			destroy_component(input);
			destroy_component(button3);
			destroy_component(progress);
			destroy_component(avatar);
			destroy_component(rate);
			if (detaching) detach_dev(t22);
			if (detaching) detach_dev(br4);
			if (detaching) detach_dev(t23);
			if (detaching) detach_dev(br5);
			if (detaching) detach_dev(t24);
			if (detaching) detach_dev(br6);
			if (detaching) detach_dev(t25);
			destroy_component(footer, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self) {
	const click_handler = e => console.log(e);
	const click_handler_1 = e => console.log(e);
	const click_handler_2 = e => console.log(e);
	const click_handler_3 = e => console.log(e);

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		
	};

	return [click_handler, click_handler_1, click_handler_2, click_handler_3];
}

class Charity extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Charity",
			options,
			id: create_fragment.name
		});
	}
}

export default Charity;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcml0eS44ODJhNDBiOS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9jaGFyaXR5LnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuXHRpbXBvcnQgeyBTd2lwZSwgU3dpcGVJdGVtIH0gZnJvbSAnLi4vcGx1Z2lucydcblx0aW1wb3J0IHtcblx0XHRJY29uLFxuXHRcdFJhdGUsXG5cdFx0SW5wdXQsXG5cdFx0Rm9vdGVyLFxuXHRcdEF2YXRhcixcblx0XHRCdXR0b24sXG5cdFx0RGl2aWRlcixcblx0XHRQaWN0dXJlLFxuXHRcdFByb2dyZXNzLFxuXHR9IGZyb20gJy4uL2NvbXBvbmVudHMnXG48L3NjcmlwdD5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+Q2hhcml0aWZ5IC0gQ2hhcml0eSBwYWdlIGFuZCBkb25hdGUuPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxzdHlsZT5cblx0aDEge1xuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR9XG5cblx0LnRvcCB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRtYXJnaW4tYm90dG9tOiBjYWxjKHZhcigtLXNjcmVlbi1wYWRkaW5nKSAqIDEuNSk7XG5cdFx0bWFyZ2luLXRvcDogdmFyKC0tc2NyZWVuLXBhZGRpbmcpO1xuXHR9XG5cblx0LnRvcC1waWMge1xuXHRcdHotaW5kZXg6IDA7XG5cdFx0ZmxleC1ncm93OiAxO1xuXHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0bWFyZ2luLWJvdHRvbTogMnB4O1xuXHRcdGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpO1xuXHRcdGJveC1zaGFkb3c6IHZhcigtLXNoYWRvdy1wcmltYXJ5KTtcblx0fVxuXG5cdC5vcHRpb25zIHtcblx0XHRmbGV4OiAwO1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRtYXJnaW46IGNhbGModmFyKC0tc2NyZWVuLXBhZGRpbmcpICogLTEgLyAyKSAwO1xuXHRcdHBhZGRpbmc6IDAgMCAwIHZhcigtLXNjcmVlbi1wYWRkaW5nKTtcblx0fVxuXG5cdC5vcHRpb25zIGxpIHtcblx0XHRmbGV4OiBub25lO1xuXHRcdG1hcmdpbjogY2FsYyh2YXIoLS1zY3JlZW4tcGFkZGluZykgLyAyKSAwO1xuXHR9XG5cblx0LnJhdGUtc2VjdGlvbiB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRhbGlnbi1pdGVtczogYmFzZWxpbmU7XG5cdFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXHRcdHBhZGRpbmc6IGNhbGModmFyKC0tc2NyZWVuLXBhZGRpbmcpICogMS41KSAwO1xuXHR9XG5cblx0LmF2YS1zZWN0aW9uIHtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXHR9XG5cblx0LmF2YS1zZWN0aW9uIHNwYW4ge1xuXHRcdGZvbnQtc2l6ZTogLjdyZW07XG5cdFx0cGFkZGluZzogMCB2YXIoLS1zY3JlZW4tcGFkZGluZyk7XG5cdH1cblxuXHQuYXZhLXNlY3Rpb24gc3BhbiBwIHtcblx0XHRmb250LXNpemU6IC42cmVtO1xuXHR9XG5cblx0LmF2YS1zZWN0aW9uIHNwYW4gcCxcblx0LmF2YS1zZWN0aW9uIHNwYW4gaDMge1xuXHRcdG1heC13aWR0aDogMTAwJTtcblx0XHRsaW5lLWhlaWdodDogMS40O1xuXHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcblx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcblx0fVxuXG5cdC50aXRsZSB7XG5cdFx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0XHRhbmltYXRpb246IHRpdGxlLWFuaW0gMXMgZm9yd2FyZHMgZWFzZS1pbjtcblx0fVxuXG5cdEBrZXlmcmFtZXMgdGl0bGUtYW5pbSB7XG5cdFx0MCUge1xuXHRcdFx0bWF4LWhlaWdodDogMDtcblx0XHR9XG5cdFx0OTkuOSUge1xuXHRcdFx0bWF4LWhlaWdodDogMTAwdmg7XG5cdFx0fVxuXHRcdDEwMCUge1xuXHRcdFx0bWF4LWhlaWdodDogbm9uZTtcblx0XHR9XG5cdH1cbjwvc3R5bGU+XG5cbjxzZWN0aW9uIGNsYXNzPVwiY29udGFpbmVyXCI+XG5cblx0PHNlY3Rpb24gY2xhc3M9XCJ0aXRsZVwiPlxuXHRcdDxicj5cblxuXHRcdDxoMT5UaGUgbWFpbiB0aXRsZTwvaDE+XG5cblx0XHQ8YnI+XG5cblx0XHQ8cCBjbGFzcz1cInRleHQtY2VudGVyXCIgc3R5bGU9XCJwYWRkaW5nOiAwIDEwdndcIj5cblx0XHRcdEEgc21hbGwgZGVzY3JpcHRpb24gdGhhdCBkZXNjcmliZXMgdGhlIHRpdGxlIGFib3ZlIGFuZCBqdXN0IG1ha2VzIHRleHQgbG9uZ2VyLlxuXHRcdDwvcD5cblxuXHRcdDxicj5cblx0PC9zZWN0aW9uPlxuXG5cdDxzZWN0aW9uIGNsYXNzPVwidG9wXCI+XG5cdFx0PGRpdiBjbGFzcz1cInRvcC1waWNcIj5cblx0XHRcdDxTd2lwZT5cblx0XHRcdFx0PFN3aXBlSXRlbT5cblx0XHRcdFx0XHQ8UGljdHVyZSBzcmM9XCJodHRwczovL3BsYWNlaW1nLmNvbS8zMDAvMzAwL3Blb3BsZVwiIGFsdD1cInNhbXBsZVwiLz5cblx0XHRcdFx0PC9Td2lwZUl0ZW0+XG5cdFx0XHRcdDxTd2lwZUl0ZW0+XG5cdFx0XHRcdFx0PFBpY3R1cmUgc3JjPVwiaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAwLzMwMC9hbnlcIiBhbHQ9XCJzYW1wbGVcIi8+XG5cdFx0XHRcdDwvU3dpcGVJdGVtPlxuXHRcdFx0XHQ8U3dpcGVJdGVtPlxuXHRcdFx0XHRcdDxQaWN0dXJlIHNyYz1cImh0dHBzOi8vcGxhY2VpbWcuY29tLzMwMC8zMDAvYXJjaFwiIGFsdD1cInNhbXBsZVwiLz5cblx0XHRcdFx0PC9Td2lwZUl0ZW0+XG5cdFx0XHRcdDxTd2lwZUl0ZW0+XG5cdFx0XHRcdFx0PFBpY3R1cmUgc3JjPVwiaHR0cHM6Ly9wbGFjZWltZy5jb20vMzAwLzMwMC9uYXR1cmVcIiBhbHQ9XCJzYW1wbGVcIi8+XG5cdFx0XHRcdDwvU3dpcGVJdGVtPlxuXHRcdFx0XHQ8U3dpcGVJdGVtPlxuXHRcdFx0XHRcdDxQaWN0dXJlIHNyYz1cImh0dHBzOi8vcGxhY2VpbWcuY29tLzMwMC8zMDAvdGVjaFwiIGFsdD1cInNhbXBsZVwiLz5cblx0XHRcdFx0PC9Td2lwZUl0ZW0+XG5cdFx0XHQ8L1N3aXBlPlxuXHRcdDwvZGl2PlxuXG5cdFx0PHVsIGNsYXNzPVwib3B0aW9uc1wiPlxuXHRcdFx0PGxpPlxuXHRcdFx0XHQ8QnV0dG9uIGlzPVwic3VjY2Vzc1wiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCI+dGVzdDE8L0J1dHRvbj5cblx0XHRcdDwvbGk+XG5cdFx0XHQ8bGk+XG5cdFx0XHRcdDxCdXR0b24gaXM9XCJzdWNjZXNzXCIgb246Y2xpY2s9XCJ7ZSA9PiBjb25zb2xlLmxvZyhlKX1cIj50ZXN0MTI8L0J1dHRvbj5cblx0XHRcdDwvbGk+XG5cdFx0XHQ8bGk+XG5cdFx0XHRcdDxCdXR0b24gaXM9XCJzdWNjZXNzXCIgb246Y2xpY2s9XCJ7ZSA9PiBjb25zb2xlLmxvZyhlKX1cIj50ZXN0MTIzPC9CdXR0b24+XG5cdFx0XHQ8L2xpPlxuXHRcdFx0PGxpPlxuXHRcdFx0XHQ8YnI+XG5cdFx0XHRcdDxJbnB1dFxuXHRcdFx0XHRcdFx0dHlwZT1cIm51bWJlclwiXG5cdFx0XHRcdFx0XHRuYW1lPVwibnVtXCJcblx0XHRcdFx0XHRcdGxpc3Q9XCJzdW0tc3VnZ2VzdGlvbnNcIlxuXHRcdFx0XHRcdFx0cGxhY2Vob2xkZXI9XCJOdW1cIlxuXHRcdFx0XHRcdFx0YXV0b3NlbGVjdFxuXHRcdFx0XHRcdFx0YWxpZ249XCJyaWdodFwiXG5cdFx0XHRcdC8+XG5cblx0XHRcdFx0PGRhdGFsaXN0IGlkPVwic3VtLXN1Z2dlc3Rpb25zXCI+XG5cdFx0XHRcdFx0PG9wdGlvbiB2YWx1ZT1cIjIwXCI+XG5cdFx0XHRcdFx0PG9wdGlvbiB2YWx1ZT1cIjUwMFwiPlxuXHRcdFx0XHRcdDxvcHRpb24gdmFsdWU9XCIxMDAwXCI+XG5cdFx0XHRcdDwvZGF0YWxpc3Q+XG5cdFx0XHQ8L2xpPlxuXHRcdFx0PGxpPlxuXHRcdFx0XHQ8QnV0dG9uIGlzPVwid2FybmluZ1wiIG9uOmNsaWNrPVwie2UgPT4gY29uc29sZS5sb2coZSl9XCI+U3VibWl0PC9CdXR0b24+XG5cdFx0XHQ8L2xpPlxuXHRcdDwvdWw+XG5cdDwvc2VjdGlvbj5cblxuXHQ8UHJvZ3Jlc3MgdmFsdWU9XCI2NVwiIHNpemU9XCJiaWdcIj48L1Byb2dyZXNzPlxuXG5cdDxzZWN0aW9uIGNsYXNzPVwicmF0ZS1zZWN0aW9uXCI+XG5cdFx0PGRpdiBjbGFzcz1cImF2YS1zZWN0aW9uXCI+XG5cdFx0XHQ8QXZhdGFyIHNyYz1cImh0dHBzOi8vcGxhY2VpbWcuY29tLzMwMC8zMDAvcGVvcGxlXCIgYWx0PVwiYXZhdGFyXCIvPlxuXG5cdFx0XHQ8c3Bhbj5cbiAgICAgICAgICAgICAgICA8aDM+VGluYSBLYW5kZWxha2k8L2gzPlxuICAgICAgICAgICAgICAgIDxwPk9SRyBjaGFyaXR5IGNoYXJpdGlmeTwvcD5cbiAgICAgICAgICAgIDwvc3Bhbj5cblx0XHQ8L2Rpdj5cblxuXHRcdDxSYXRlLz5cblx0PC9zZWN0aW9uPlxuPC9zZWN0aW9uPlxuXG48YnI+XG48YnI+XG48YnI+XG5cbjxGb290ZXIvPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7dUJBNklvQyxDQUFDLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO3lCQUdsQixDQUFDLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO3lCQUdsQixDQUFDLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO3lCQW9CbEIsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
