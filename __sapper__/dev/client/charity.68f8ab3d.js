import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, C as Carousel, G as DonatingGroup, P as Progress, H as AvatarAndName, R as Rate, T as TitleSubTitle, b as CharityCards, F as Footer, I as onMount, e as space, f as element, g as create_component, q as query_selector_all, h as detach_dev, j as claim_space, k as claim_element, l as children, m as claim_component, o as attr_dev, p as add_location, r as insert_dev, v as append_dev, u as mount_component, w as transition_in, x as transition_out, y as destroy_component } from './client.4b801891.js';
import { a as api } from './index.b23100d7.js';

/* src/routes/charity.svelte generated by Svelte v3.18.1 */
const file = "src/routes/charity.svelte";

function create_fragment(ctx) {
	let t0;
	let section3;
	let section0;
	let div0;
	let t1;
	let t2;
	let t3;
	let section1;
	let t4;
	let t5;
	let section2;
	let br0;
	let t6;
	let t7;
	let br1;
	let t8;
	let br2;
	let t9;
	let br3;
	let t10;
	let br4;
	let t11;
	let div1;
	let t12;
	let br5;
	let t13;
	let br6;
	let t14;
	let br7;
	let t15;
	let br8;
	let t16;
	let br9;
	let t17;
	let div2;
	let t18;
	let br10;
	let t19;
	let br11;
	let t20;
	let br12;
	let t21;
	let br13;
	let t22;
	let br14;
	let t23;
	let current;

	const carousel_1 = new Carousel({
			props: { items: /*carousel*/ ctx[1] },
			$$inline: true
		});

	const donatinggroup = new DonatingGroup({ $$inline: true });

	const progress = new Progress({
			props: { value: "65", size: "big" },
			$$inline: true
		});

	const avatarandname = new AvatarAndName({
			props: {
				src: /*charity*/ ctx[0].orgHeadSrc,
				title: /*charity*/ ctx[0].orgHead,
				subtitle: /*charity*/ ctx[0].organization
			},
			$$inline: true
		});

	const rate = new Rate({ $$inline: true });

	const titlesubtitle = new TitleSubTitle({
			props: {
				title: /*charity*/ ctx[0].title,
				subtitle: /*charity*/ ctx[0].description
			},
			$$inline: true
		});

	const charitycards0 = new CharityCards({ $$inline: true });
	const charitycards1 = new CharityCards({ $$inline: true });
	const footer = new Footer({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			section3 = element("section");
			section0 = element("section");
			div0 = element("div");
			create_component(carousel_1.$$.fragment);
			t1 = space();
			create_component(donatinggroup.$$.fragment);
			t2 = space();
			create_component(progress.$$.fragment);
			t3 = space();
			section1 = element("section");
			create_component(avatarandname.$$.fragment);
			t4 = space();
			create_component(rate.$$.fragment);
			t5 = space();
			section2 = element("section");
			br0 = element("br");
			t6 = space();
			create_component(titlesubtitle.$$.fragment);
			t7 = space();
			br1 = element("br");
			t8 = space();
			br2 = element("br");
			t9 = space();
			br3 = element("br");
			t10 = space();
			br4 = element("br");
			t11 = space();
			div1 = element("div");
			create_component(charitycards0.$$.fragment);
			t12 = space();
			br5 = element("br");
			t13 = space();
			br6 = element("br");
			t14 = space();
			br7 = element("br");
			t15 = space();
			br8 = element("br");
			t16 = space();
			br9 = element("br");
			t17 = space();
			div2 = element("div");
			create_component(charitycards1.$$.fragment);
			t18 = space();
			br10 = element("br");
			t19 = space();
			br11 = element("br");
			t20 = space();
			br12 = element("br");
			t21 = space();
			br13 = element("br");
			t22 = space();
			br14 = element("br");
			t23 = space();
			create_component(footer.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-3g9mo4\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			section3 = claim_element(nodes, "SECTION", { class: true });
			var section3_nodes = children(section3);
			section0 = claim_element(section3_nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			div0 = claim_element(section0_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(carousel_1.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(section0_nodes);
			claim_component(donatinggroup.$$.fragment, section0_nodes);
			section0_nodes.forEach(detach_dev);
			t2 = claim_space(section3_nodes);
			claim_component(progress.$$.fragment, section3_nodes);
			t3 = claim_space(section3_nodes);
			section1 = claim_element(section3_nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			claim_component(avatarandname.$$.fragment, section1_nodes);
			t4 = claim_space(section1_nodes);
			claim_component(rate.$$.fragment, section1_nodes);
			section1_nodes.forEach(detach_dev);
			t5 = claim_space(section3_nodes);
			section2 = claim_element(section3_nodes, "SECTION", {});
			var section2_nodes = children(section2);
			br0 = claim_element(section2_nodes, "BR", {});
			t6 = claim_space(section2_nodes);
			claim_component(titlesubtitle.$$.fragment, section2_nodes);
			t7 = claim_space(section2_nodes);
			br1 = claim_element(section2_nodes, "BR", {});
			section2_nodes.forEach(detach_dev);
			section3_nodes.forEach(detach_dev);
			t8 = claim_space(nodes);
			br2 = claim_element(nodes, "BR", {});
			t9 = claim_space(nodes);
			br3 = claim_element(nodes, "BR", {});
			t10 = claim_space(nodes);
			br4 = claim_element(nodes, "BR", {});
			t11 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(charitycards0.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach_dev);
			t12 = claim_space(nodes);
			br5 = claim_element(nodes, "BR", {});
			t13 = claim_space(nodes);
			br6 = claim_element(nodes, "BR", {});
			t14 = claim_space(nodes);
			br7 = claim_element(nodes, "BR", {});
			t15 = claim_space(nodes);
			br8 = claim_element(nodes, "BR", {});
			t16 = claim_space(nodes);
			br9 = claim_element(nodes, "BR", {});
			t17 = claim_space(nodes);
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			claim_component(charitycards1.$$.fragment, div2_nodes);
			div2_nodes.forEach(detach_dev);
			t18 = claim_space(nodes);
			br10 = claim_element(nodes, "BR", {});
			t19 = claim_space(nodes);
			br11 = claim_element(nodes, "BR", {});
			t20 = claim_space(nodes);
			br12 = claim_element(nodes, "BR", {});
			t21 = claim_space(nodes);
			br13 = claim_element(nodes, "BR", {});
			t22 = claim_space(nodes);
			br14 = claim_element(nodes, "BR", {});
			t23 = claim_space(nodes);
			claim_component(footer.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Charitify - Charity page and donate.";
			attr_dev(div0, "class", "pics-wrap svelte-uz5elz");
			add_location(div0, file, 48, 8, 1190);
			attr_dev(section0, "class", "top svelte-uz5elz");
			add_location(section0, file, 47, 4, 1160);
			attr_dev(section1, "class", "rate-section svelte-uz5elz");
			add_location(section1, file, 57, 4, 1355);
			add_location(br0, file, 68, 8, 1604);
			add_location(br1, file, 73, 8, 1736);
			add_location(section2, file, 67, 4, 1586);
			attr_dev(section3, "class", "container");
			add_location(section3, file, 45, 0, 1127);
			add_location(br2, file, 78, 0, 1769);
			add_location(br3, file, 79, 0, 1774);
			add_location(br4, file, 80, 0, 1779);
			attr_dev(div1, "class", "container");
			add_location(div1, file, 82, 0, 1785);
			add_location(br5, file, 86, 0, 1837);
			add_location(br6, file, 87, 0, 1842);
			add_location(br7, file, 88, 0, 1847);
			add_location(br8, file, 89, 0, 1852);
			add_location(br9, file, 90, 0, 1857);
			attr_dev(div2, "class", "container");
			add_location(div2, file, 92, 0, 1863);
			add_location(br10, file, 96, 0, 1915);
			add_location(br11, file, 97, 0, 1920);
			add_location(br12, file, 98, 0, 1925);
			add_location(br13, file, 99, 0, 1930);
			add_location(br14, file, 100, 0, 1935);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section3, anchor);
			append_dev(section3, section0);
			append_dev(section0, div0);
			mount_component(carousel_1, div0, null);
			append_dev(section0, t1);
			mount_component(donatinggroup, section0, null);
			append_dev(section3, t2);
			mount_component(progress, section3, null);
			append_dev(section3, t3);
			append_dev(section3, section1);
			mount_component(avatarandname, section1, null);
			append_dev(section1, t4);
			mount_component(rate, section1, null);
			append_dev(section3, t5);
			append_dev(section3, section2);
			append_dev(section2, br0);
			append_dev(section2, t6);
			mount_component(titlesubtitle, section2, null);
			append_dev(section2, t7);
			append_dev(section2, br1);
			insert_dev(target, t8, anchor);
			insert_dev(target, br2, anchor);
			insert_dev(target, t9, anchor);
			insert_dev(target, br3, anchor);
			insert_dev(target, t10, anchor);
			insert_dev(target, br4, anchor);
			insert_dev(target, t11, anchor);
			insert_dev(target, div1, anchor);
			mount_component(charitycards0, div1, null);
			insert_dev(target, t12, anchor);
			insert_dev(target, br5, anchor);
			insert_dev(target, t13, anchor);
			insert_dev(target, br6, anchor);
			insert_dev(target, t14, anchor);
			insert_dev(target, br7, anchor);
			insert_dev(target, t15, anchor);
			insert_dev(target, br8, anchor);
			insert_dev(target, t16, anchor);
			insert_dev(target, br9, anchor);
			insert_dev(target, t17, anchor);
			insert_dev(target, div2, anchor);
			mount_component(charitycards1, div2, null);
			insert_dev(target, t18, anchor);
			insert_dev(target, br10, anchor);
			insert_dev(target, t19, anchor);
			insert_dev(target, br11, anchor);
			insert_dev(target, t20, anchor);
			insert_dev(target, br12, anchor);
			insert_dev(target, t21, anchor);
			insert_dev(target, br13, anchor);
			insert_dev(target, t22, anchor);
			insert_dev(target, br14, anchor);
			insert_dev(target, t23, anchor);
			mount_component(footer, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const carousel_1_changes = {};
			if (dirty & /*carousel*/ 2) carousel_1_changes.items = /*carousel*/ ctx[1];
			carousel_1.$set(carousel_1_changes);
			const avatarandname_changes = {};
			if (dirty & /*charity*/ 1) avatarandname_changes.src = /*charity*/ ctx[0].orgHeadSrc;
			if (dirty & /*charity*/ 1) avatarandname_changes.title = /*charity*/ ctx[0].orgHead;
			if (dirty & /*charity*/ 1) avatarandname_changes.subtitle = /*charity*/ ctx[0].organization;
			avatarandname.$set(avatarandname_changes);
			const titlesubtitle_changes = {};
			if (dirty & /*charity*/ 1) titlesubtitle_changes.title = /*charity*/ ctx[0].title;
			if (dirty & /*charity*/ 1) titlesubtitle_changes.subtitle = /*charity*/ ctx[0].description;
			titlesubtitle.$set(titlesubtitle_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(carousel_1.$$.fragment, local);
			transition_in(donatinggroup.$$.fragment, local);
			transition_in(progress.$$.fragment, local);
			transition_in(avatarandname.$$.fragment, local);
			transition_in(rate.$$.fragment, local);
			transition_in(titlesubtitle.$$.fragment, local);
			transition_in(charitycards0.$$.fragment, local);
			transition_in(charitycards1.$$.fragment, local);
			transition_in(footer.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(carousel_1.$$.fragment, local);
			transition_out(donatinggroup.$$.fragment, local);
			transition_out(progress.$$.fragment, local);
			transition_out(avatarandname.$$.fragment, local);
			transition_out(rate.$$.fragment, local);
			transition_out(titlesubtitle.$$.fragment, local);
			transition_out(charitycards0.$$.fragment, local);
			transition_out(charitycards1.$$.fragment, local);
			transition_out(footer.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section3);
			destroy_component(carousel_1);
			destroy_component(donatinggroup);
			destroy_component(progress);
			destroy_component(avatarandname);
			destroy_component(rate);
			destroy_component(titlesubtitle);
			if (detaching) detach_dev(t8);
			if (detaching) detach_dev(br2);
			if (detaching) detach_dev(t9);
			if (detaching) detach_dev(br3);
			if (detaching) detach_dev(t10);
			if (detaching) detach_dev(br4);
			if (detaching) detach_dev(t11);
			if (detaching) detach_dev(div1);
			destroy_component(charitycards0);
			if (detaching) detach_dev(t12);
			if (detaching) detach_dev(br5);
			if (detaching) detach_dev(t13);
			if (detaching) detach_dev(br6);
			if (detaching) detach_dev(t14);
			if (detaching) detach_dev(br7);
			if (detaching) detach_dev(t15);
			if (detaching) detach_dev(br8);
			if (detaching) detach_dev(t16);
			if (detaching) detach_dev(br9);
			if (detaching) detach_dev(t17);
			if (detaching) detach_dev(div2);
			destroy_component(charitycards1);
			if (detaching) detach_dev(t18);
			if (detaching) detach_dev(br10);
			if (detaching) detach_dev(t19);
			if (detaching) detach_dev(br11);
			if (detaching) detach_dev(t20);
			if (detaching) detach_dev(br12);
			if (detaching) detach_dev(t21);
			if (detaching) detach_dev(br13);
			if (detaching) detach_dev(t22);
			if (detaching) detach_dev(br14);
			if (detaching) detach_dev(t23);
			destroy_component(footer, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let charity = {};

	onMount(async () => {
		await new Promise(r => setTimeout(r, 2000));
		$$invalidate(0, charity = await api.getCharity(1));
	});

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		if ("charity" in $$props) $$invalidate(0, charity = $$props.charity);
		if ("carousel" in $$props) $$invalidate(1, carousel = $$props.carousel);
	};

	let carousel;

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*charity*/ 1) {
			 $$invalidate(1, carousel = (charity.src || []).map((src, i) => ({ src, srcBig: (charity.src2x || [])[i] })));
		}
	};

	return [charity, carousel];
}

class Charity extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Charity",
			options,
			id: create_fragment.name
		});
	}
}

export default Charity;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcml0eS42OGY4YWIzZC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9jaGFyaXR5LnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICAgIGltcG9ydCB7IG9uTW91bnQgfSBmcm9tICdzdmVsdGUnXG4gICAgaW1wb3J0IHsgYXBpIH0gZnJvbSAnLi4vc2VydmljZXMnXG4gICAgaW1wb3J0IHsgVGl0bGVTdWJUaXRsZSwgQXZhdGFyQW5kTmFtZSwgRG9uYXRpbmdHcm91cCwgQ2hhcml0eUNhcmRzLCBGb290ZXIgfSBmcm9tICcuLi9sYXlvdXRzJ1xuICAgIGltcG9ydCB7IFJhdGUsIFByb2dyZXNzLCBDYXJvdXNlbCB9IGZyb20gJy4uL2NvbXBvbmVudHMnXG5cbiAgICBsZXQgY2hhcml0eSA9IHt9XG5cbiAgICAkOiBjYXJvdXNlbCA9IChjaGFyaXR5LnNyYyB8fCBbXSkubWFwKChzcmMsIGkpID0+ICh7IHNyYywgc3JjQmlnOiAoY2hhcml0eS5zcmMyeCB8fCBbXSlbaV0gfSkpXG5cbiAgICBvbk1vdW50KGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDIwMDApKVxuICAgICAgICBjaGFyaXR5ID0gYXdhaXQgYXBpLmdldENoYXJpdHkoMSlcbiAgICB9KVxuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6aGVhZD5cbiAgICA8dGl0bGU+Q2hhcml0aWZ5IC0gQ2hhcml0eSBwYWdlIGFuZCBkb25hdGUuPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxzdHlsZT5cbiAgICAudG9wIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogY2FsYyh2YXIoLS1zY3JlZW4tcGFkZGluZykgKiAxLjUpO1xuICAgICAgICBtYXJnaW4tdG9wOiB2YXIoLS1zY3JlZW4tcGFkZGluZyk7XG4gICAgfVxuXG4gICAgLnBpY3Mtd3JhcCB7XG4gICAgICAgIHotaW5kZXg6IDA7XG4gICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzKTtcbiAgICAgICAgYm94LXNoYWRvdzogdmFyKC0tc2hhZG93LXByaW1hcnkpO1xuICAgIH1cblxuICAgIC5yYXRlLXNlY3Rpb24ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgcGFkZGluZzogMTJweCAwO1xuICAgIH1cbjwvc3R5bGU+XG5cbjxzZWN0aW9uIGNsYXNzPVwiY29udGFpbmVyXCI+XG5cbiAgICA8c2VjdGlvbiBjbGFzcz1cInRvcFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwicGljcy13cmFwXCI+XG4gICAgICAgICAgICA8Q2Fyb3VzZWwgaXRlbXM9e2Nhcm91c2VsfS8+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxEb25hdGluZ0dyb3VwLz5cbiAgICA8L3NlY3Rpb24+XG5cbiAgICA8UHJvZ3Jlc3MgdmFsdWU9XCI2NVwiIHNpemU9XCJiaWdcIi8+XG5cbiAgICA8c2VjdGlvbiBjbGFzcz1cInJhdGUtc2VjdGlvblwiPlxuICAgICAgICA8QXZhdGFyQW5kTmFtZVxuICAgICAgICAgICAgICAgIHNyYz17Y2hhcml0eS5vcmdIZWFkU3JjfVxuICAgICAgICAgICAgICAgIHRpdGxlPXtjaGFyaXR5Lm9yZ0hlYWR9XG4gICAgICAgICAgICAgICAgc3VidGl0bGU9e2NoYXJpdHkub3JnYW5pemF0aW9ufVxuICAgICAgICAvPlxuXG4gICAgICAgIDxSYXRlLz5cbiAgICA8L3NlY3Rpb24+XG5cbiAgICA8c2VjdGlvbj5cbiAgICAgICAgPGJyPlxuICAgICAgICA8VGl0bGVTdWJUaXRsZVxuICAgICAgICAgICAgICAgIHRpdGxlPXtjaGFyaXR5LnRpdGxlfVxuICAgICAgICAgICAgICAgIHN1YnRpdGxlPXtjaGFyaXR5LmRlc2NyaXB0aW9ufVxuICAgICAgICAvPlxuICAgICAgICA8YnI+XG4gICAgPC9zZWN0aW9uPlxuXG48L3NlY3Rpb24+XG5cbjxicj5cbjxicj5cbjxicj5cblxuPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgIDxDaGFyaXR5Q2FyZHMvPlxuPC9kaXY+XG5cbjxicj5cbjxicj5cbjxicj5cbjxicj5cbjxicj5cblxuPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgIDxDaGFyaXR5Q2FyZHMvPlxuPC9kaXY+XG5cbjxicj5cbjxicj5cbjxicj5cbjxicj5cbjxicj5cblxuPEZvb3Rlci8+XG5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7cUJBMkRxQixHQUFPLElBQUMsVUFBVTt1QkFDaEIsR0FBTyxJQUFDLE9BQU87MEJBQ1osR0FBTyxJQUFDLFlBQVk7Ozs7Ozs7Ozt1QkFTdkIsR0FBTyxJQUFDLEtBQUs7MEJBQ1YsR0FBTyxJQUFDLFdBQVc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NFQVp4QixHQUFPLElBQUMsVUFBVTt3RUFDaEIsR0FBTyxJQUFDLE9BQU87MkVBQ1osR0FBTyxJQUFDLFlBQVk7Ozt3RUFTdkIsR0FBTyxJQUFDLEtBQUs7MkVBQ1YsR0FBTyxJQUFDLFdBQVc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBakVyQyxPQUFPOztDQUlYLE9BQU87WUFDTyxPQUFPLENBQUMsQ0FBQyxJQUFJLFVBQVUsQ0FBQyxDQUFDLEVBQUUsSUFBSTtrQkFDekMsT0FBTyxTQUFTLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7OztvQkFKakMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxHQUFHLFFBQVEsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLFFBQVEsR0FBRyxFQUFFLE1BQU0sR0FBRyxPQUFPLENBQUMsS0FBSyxRQUFRLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
