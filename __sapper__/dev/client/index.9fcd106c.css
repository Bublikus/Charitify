svg.svelte-1y5h9x9.svelte-1y5h9x9{display:inherit}svg.svelte-1y5h9x9.svelte-1y5h9x9,svg.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgba(var(--theme-svg-fill));stroke:rgba(var(--theme-svg-fill))}.small.svelte-1y5h9x9.svelte-1y5h9x9{width:15px;height:15px}.medium.svelte-1y5h9x9.svelte-1y5h9x9{width:22px;height:22px}.big.svelte-1y5h9x9.svelte-1y5h9x9{width:35px;height:35px}.primary.svelte-1y5h9x9.svelte-1y5h9x9,.primary.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-success));stroke:rgb(var(--color-success))}.warning.svelte-1y5h9x9.svelte-1y5h9x9,.warning.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-warning));stroke:rgb(var(--color-warning))}.danger.svelte-1y5h9x9.svelte-1y5h9x9,.danger.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-danger));stroke:rgb(var(--color-danger))}.info.svelte-1y5h9x9.svelte-1y5h9x9,.info.svelte-1y5h9x9 .svelte-1y5h9x9{fill:rgb(var(--color-info));stroke:rgb(var(--color-info))}.light.svelte-1y5h9x9.svelte-1y5h9x9,.light.svelte-1y5h9x9 .svelte-1y5h9x9{fill:var(--color-light-1);stroke:var(--color-light-1)}.dark.svelte-1y5h9x9.svelte-1y5h9x9,.dark.svelte-1y5h9x9 .svelte-1y5h9x9{fill:var(--color-dark-1);stroke:var(--color-dark-1)}
.rate.svelte-o292s3{display:flex;margin:calc(var(--screen-padding) * -1 / 3)}li.svelte-o292s3{padding:calc(var(--screen-padding) / 3)}
.inp.svelte-q1pa4f{width:100%;flex:1 1 0;color:inherit;border-radius:var(--border-radius);min-width:var(--min-interactive-size);min-height:var(--min-interactive-size);border:2px solid rgb(var(--color-info));background-color:rgba(var(--theme-bg-color));box-shadow:inset var(--shadow-primary), 1px -1px 2px rgba(var(--color-black),.1), inset 1px 0 2px rgba(var(--color-black),.2)}.inp.svelte-q1pa4f:focus{border-color:rgb(var(--color-success))}.inp.svelte-q1pa4f:invalid,.inp.invalid.svelte-q1pa4f{border-color:rgb(var(--color-danger))}
.picture.svelte-1rkw8xk.svelte-1rkw8xk{flex-grow:1;align-self:stretch;display:inline-flex;flex-direction:column;align-items:stretch;justify-content:stretch}.picture.svelte-1rkw8xk .pic.svelte-1rkw8xk{flex-grow:1;align-self:stretch;object-fit:cover;object-position:center;transition:opacity .3s ease-in}.picture.loading.svelte-1rkw8xk .pic.svelte-1rkw8xk{opacity:0}
.ava.svelte-wvf7xz{flex:none;display:flex;border-radius:50%;overflow:hidden}.small.svelte-wvf7xz{width:25px;height:25px}.medium.svelte-wvf7xz{width:35px;height:35px}.big.svelte-wvf7xz{width:45px;height:45px}
.btn.svelte-o6g7w0:not(.auto){width:100%}.btn{flex:none;cursor:pointer;max-width:100%;user-select:none;padding:5px 15px;margin-bottom:3px;font-weight:bold;text-align:center;align-items:center;display:inline-flex;justify-content:center;border-radius:var(--border-radius);color:rgba(var(--theme-font-color));text-shadow:1px 1px rgba(var(--color-black), .3)}.btn.small{padding:5px;min-width:calc(var(--min-interactive-size) / 1.5);min-height:calc(var(--min-interactive-size) / 1.5)}.btn.medium{padding:5px 10px;min-width:var(--min-interactive-size);min-height:var(--min-interactive-size)}.btn.big{padding:5px 15px;min-width:calc(var(--min-interactive-size) * 1.5);min-height:calc(var(--min-interactive-size) * 1.5)}.btn:focus{background-color:rgba(var(--color-black), 0.1)}.btn:hover{box-shadow:0 2px rgba(var(--color-black), 0.2);background-color:rgba(var(--color-black), 0.1)}.btn:active{transform:translateY(1px);box-shadow:0 1px rgba(var(--color-black), 0.2);background-color:rgba(var(--color-black), 0.1)}.btn.success.svelte-o6g7w0{color:rgba(var(--color-font-light));background-color:rgba(var(--color-success));box-shadow:0 2px rgba(var(--color-success-dark)), var(--shadow-secondary)}.btn.success.svelte-o6g7w0:focus{background-color:rgba(var(--color-success), .85)}.btn.success.svelte-o6g7w0:hover{transform:translateY(1px);box-shadow:0 2px rgba(var(--color-success-dark)), var(--shadow-secondary)}.btn.success.svelte-o6g7w0:active{transform:translateY(2px);box-shadow:0 1px rgba(var(--color-success-dark)), var(--shadow-secondary)}.btn.warning.svelte-o6g7w0{color:rgba(var(--color-font-light));background-color:rgba(var(--color-warning));box-shadow:0 2px rgba(var(--color-warning-dark)), var(--shadow-secondary)}.btn.warning.svelte-o6g7w0:focus{background-color:rgba(var(--color-warning), .85)}.btn.warning.svelte-o6g7w0:hover{transform:translateY(1px);box-shadow:0 2px rgba(var(--color-warning-dark)), var(--shadow-secondary)}.btn.warning.svelte-o6g7w0:active{transform:translateY(2px);box-shadow:0 1px rgba(var(--color-warning-dark)), var(--shadow-secondary)}.btn.danger.svelte-o6g7w0{color:rgba(var(--color-font-light));background-color:rgba(var(--color-danger));box-shadow:0 2px rgba(var(--color-danger-dark)), var(--shadow-secondary)}.btn.danger.svelte-o6g7w0:focus{background-color:rgba(var(--color-danger), .85)}.btn.danger.svelte-o6g7w0:hover{transform:translateY(1px);box-shadow:0 2px rgba(var(--color-danger-dark)), var(--shadow-secondary)}.btn.danger.svelte-o6g7w0:active{transform:translateY(2px);box-shadow:0 1px rgba(var(--color-danger-dark)), var(--shadow-secondary)}@media screen and (min-width: 769px){.btn{margin-bottom:2px}.btn.success.svelte-o6g7w0{box-shadow:0 3px rgba(var(--color-success-dark)), var(--shadow-secondary)}.btn.warning.svelte-o6g7w0{box-shadow:0 3px rgba(var(--color-warning-dark)), var(--shadow-secondary)}.btn.danger.svelte-o6g7w0{box-shadow:0 3px rgba(var(--color-danger-dark)), var(--shadow-secondary)}}
.divider.svelte-7u2z10{margin:0;border:none}.info.svelte-7u2z10{background-color:rgb(var(--color-info))}.success.svelte-7u2z10{background-color:rgb(var(--color-success))}.warning.svelte-7u2z10{background-color:rgb(var(--color-warning))}.danger.svelte-7u2z10{background-color:rgb(var(--color-danger))}
.progress.svelte-83zose{flex:0;width:100%;height:30px;padding:7px;border-radius:9999px;background-color:rgba(var(--theme-bg-color), .75);box-shadow:inset var(--shadow-primary), 1px -1px 2px rgba(var(--color-black),.1), inset 1px 0 2px rgba(var(--color-black),.2)}.progress-inner-frame.svelte-83zose{display:flex;width:100%;height:100%;overflow:hidden;border-radius:9999px}.progress-core.svelte-83zose{flex:none;align-self:stretch;transition:1s ease-in-out;margin-bottom:2px;box-shadow:var(--shadow-primary);border-radius:var(--border-radius);background-color:rgba(var(--color-success))}
nav.svelte-1uar9t{position:sticky;top:0;z-index:1;display:flex;justify-content:space-between;box-shadow:var(--shadow-secondary);border-bottom:1px solid rgba(var(--color-danger), .1)}.selected.svelte-1uar9t{position:relative;display:inline-block}.selected.svelte-1uar9t::after{position:absolute;content:"";width:calc(100% - 1em);height:2px;background-color:rgb(var(--color-danger));display:block;bottom:-1px}a.svelte-1uar9t{padding:.8em 0.5em}.nav-actions.svelte-1uar9t{display:flex;align-items:center}.lang-select.svelte-1uar9t{padding:5px;background-color:transparent}.lang-select.svelte-1uar9t:hover,.lang-select.svelte-1uar9t:focus{box-shadow:none;background-color:rgba(var(--color-black), 0.1)}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */