section.svelte-1riwg4z{flex-grow:1;display:flex;align-items:center;justify-content:center}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLjU3NzViMTg0LmNzcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbWFwLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c3ZlbHRlOmhlYWQ+XG4gICAgPHRpdGxlPkNoYXJpdGlmeSAtIE1hcCBvZiBvcmdhbml6YXRpb25zLjwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48c3R5bGU+XG4gICAgc2VjdGlvbiB7XG4gICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuPC9zdHlsZT5cblxuPHNjcmlwdD5cbiAgICBpbXBvcnQgeyBvbk1vdW50LCBvbkRlc3Ryb3kgfSBmcm9tICdzdmVsdGUnXG5cbiAgICBsZXQgbWFwXG4gICAgbGV0IG1hcEVycm9yXG4gICAgbGV0IGNvbnRhaW5lclxuXG4gICAgZnVuY3Rpb24gcmVuZGVyTWFwKCkge1xuICAgICAgICBtYXAgPSBuZXcgbWFwYm94Z2wuTWFwKHtcbiAgICAgICAgICAgIGNvbnRhaW5lcixcbiAgICAgICAgICAgIHN0eWxlOiAnbWFwYm94Oi8vc3R5bGVzL21hcGJveC9zdHJlZXRzLXYxMScsXG4gICAgICAgIH0pXG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1MDsgaSArPSAxKSB7XG4gICAgICAgICAgICBjb25zdCBsbmcgPSBNYXRoLnJhbmRvbSgpICogMzYwIC0gMTgwXG4gICAgICAgICAgICBjb25zdCBsYXQgPSBNYXRoLnJhbmRvbSgpICogMTgwIC0gOTBcblxuICAgICAgICAgICAgbmV3IG1hcGJveGdsLk1hcmtlcigpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRMbmdMYXQoW2xuZywgbGF0XSlcbiAgICAgICAgICAgICAgICAgICAgLmFkZFRvKG1hcClcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWFwXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlTWFwKCkge1xuICAgICAgICBjb25zdCBzY3JpcHRUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKVxuICAgICAgICBzY3JpcHRUYWcudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnXG4gICAgICAgIHNjcmlwdFRhZy5zcmMgPSAnaHR0cHM6Ly9hcGkubWFwYm94LmNvbS9tYXBib3gtZ2wtanMvdjEuNy4wL21hcGJveC1nbC5qcydcblxuICAgICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGluaycpXG4gICAgICAgIGxpbmsucmVsID0gJ3N0eWxlc2hlZXQnXG4gICAgICAgIGxpbmsuaHJlZiA9ICdodHRwczovL2FwaS5tYXBib3guY29tL21hcGJveC1nbC1qcy92MS43LjAvbWFwYm94LWdsLmNzcydcblxuICAgICAgICBzY3JpcHRUYWcub25sb2FkID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCEnbWFwYm94Z2wnIGluIHdpbmRvdykge1xuICAgICAgICAgICAgICAgIG1hcEVycm9yID0gdHJ1ZVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBtYXBFcnJvciA9IGZhbHNlXG5cbiAgICAgICAgICAgIGNvbnN0IHRva2VuID0gJ3BrLmV5SjFJam9pWW5WaWJHbHJJaXdpWVNJNkltTnJOWHB4ZHpneGJUQXdObmN6Ykd4d2VHMHdjVFYzY2pBaWZRLnJ0MXBlTGpDUUhaVWtyTTRBV3o1TXcnXG4gICAgICAgICAgICBtYXBib3hnbC5hY2Nlc3NUb2tlbiA9IHRva2VuXG5cbiAgICAgICAgICAgIGxpbmsub25sb2FkID0gKCkgPT4gcmVuZGVyTWFwKClcblxuICAgICAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChsaW5rKVxuICAgICAgICB9XG5cbiAgICAgICAgc2NyaXB0VGFnLm9uZXJyb3IgPSAoKSA9PiB7XG4gICAgICAgICAgICBtYXBFcnJvciA9IHRydWVcbiAgICAgICAgfVxuXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0VGFnKVxuICAgIH1cblxuICAgIG9uTW91bnQoKCkgPT4ge1xuICAgICAgICBpZiAoJ21hcGJveGdsJyBpbiB3aW5kb3cpIHtcbiAgICAgICAgICAgIHJlbmRlck1hcCgpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjcmVhdGVNYXAoKVxuICAgICAgICB9XG4gICAgfSlcblxuICAgIG9uRGVzdHJveSgoKSA9PiB7XG4gICAgICAgIG1hcCAmJiBtYXAucmVtb3ZlKClcbiAgICB9KVxuPC9zY3JpcHQ+XG5cbjxzZWN0aW9uIGJpbmQ6dGhpcz17Y29udGFpbmVyfT5cbiAgICB7I2lmIG1hcH1cbiAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgIHsvaWZ9XG5cbiAgICB7I2lmIG1hcEVycm9yfVxuICAgICAgICBNYXAgZXJyb3JcbiAgICB7L2lmfVxuPC9zZWN0aW9uPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtJLE9BQU8sZUFBQyxDQUFDLEFBQ0wsU0FBUyxDQUFFLENBQUMsQ0FDWixPQUFPLENBQUUsSUFBSSxDQUNiLFdBQVcsQ0FBRSxNQUFNLENBQ25CLGVBQWUsQ0FBRSxNQUFNLEFBQzNCLENBQUMifQ== */