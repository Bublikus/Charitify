!function(){"use strict";const e=["client/index.f9f3427f.js","client/funds.53adeb81.js","client/organizations.05f9f9a9.js","client/index.1138e98e.js","client/[id].1744fdcb.js","client/index.b7632897.js","client/index.ae1090a0.js","client/client.45e07c2f.js","client/_layout.a2f7f06e.js","client/[id].400e1cdd.js","client/me.62ec1fa1.js","client/[id].0aa1cea9.js","client/[id].e9285d09.js","client/client.90626ed7.js"].concat(["service-worker-index.html","Robots.txt","android-icon-144x144.png","android-icon-192x192.png","android-icon-36x36.png","android-icon-48x48.png","android-icon-72x72.png","android-icon-96x96.png","apple-icon-114x114.png","apple-icon-120x120.png","apple-icon-144x144.png","apple-icon-152x152.png","apple-icon-180x180.png","apple-icon-57x57.png","apple-icon-60x60.png","apple-icon-72x72.png","apple-icon-76x76.png","apple-icon-precomposed.png","apple-icon.png","assets/dimsirka.jpg","browserconfig.xml","button_click.mp3","button_click_min.mp3","favicon-16x16.png","favicon-32x32.png","favicon-512x512.png","favicon-96x96.png","favicon.ico","global.css","manifest.json","mock/comments.json","mock/fund.json","mock/funds.json","mock/index.js","mock/organization.json","mock/organizations.json","mock/recent_news.json","mock/user.json","mock/users.json","ms-icon-144x144.png","ms-icon-150x150.png","ms-icon-310x310.png","ms-icon-70x70.png","sitemap.xml"]),n=new Set(e);self.addEventListener("install",n=>{n.waitUntil(caches.open("cache1595759713316").then(n=>n.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const n of e)"cache1595759713316"!==n&&await caches.delete(n);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const c=new URL(e.request.url);c.protocol.startsWith("http")&&(c.hostname===self.location.hostname&&c.port!==self.location.port||(c.host===self.location.host&&n.has(c.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1595759713316").then(async n=>{try{const c=await fetch(e.request);return n.put(e.request,c.clone()),c}catch(c){if("Failed to fetch"===c.message)try{let e=null;const n=document.querySelector("#offline-message");e||(n.classList.add("active"),e=setTimeout(()=>{n.classList.remove("active"),clearTimeout(e)},5e3))}catch(e){console.warn(e)}const t=await n.match(e.request);if(t)return t;throw c}}))))})}();
